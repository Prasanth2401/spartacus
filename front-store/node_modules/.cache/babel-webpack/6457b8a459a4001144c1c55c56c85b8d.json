{"ast":null,"code":"import * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i3 from '@spartacus/asm/core';\nimport { CUSTOMER_SEARCH_PAGE_NORMALIZER, AsmAdapter } from '@spartacus/asm/core';\nimport * as i2 from '@spartacus/core';\nimport { InterceptorUtil, USE_CUSTOMER_SUPPORT_AGENT_TOKEN, provideDefaultConfig } from '@spartacus/core';\nimport { CommonModule } from '@angular/common';\n\nclass OccAsmAdapter {\n  constructor(http, occEndpointsService, converterService, config, baseSiteService) {\n    this.http = http;\n    this.occEndpointsService = occEndpointsService;\n    this.converterService = converterService;\n    this.config = config;\n    this.baseSiteService = baseSiteService;\n    this.baseSiteService.getActive().subscribe(value => this.activeBaseSite = value);\n  }\n\n  customerSearch(options) {\n    const headers = InterceptorUtil.createHeader(USE_CUSTOMER_SUPPORT_AGENT_TOKEN, true, new HttpHeaders());\n    let params = new HttpParams().set('baseSite', this.activeBaseSite).set('sort', 'byNameAsc');\n\n    if (typeof options['query'] !== 'undefined') {\n      params = params.set('query', '' + options.query);\n    }\n\n    if (typeof options['pageSize'] !== 'undefined') {\n      params = params.set('pageSize', '' + options.pageSize);\n    }\n\n    const url = this.occEndpointsService.buildUrl('asmCustomerSearch', {}, {\n      baseSite: false,\n      prefix: false\n    });\n    return this.http.get(url, {\n      headers,\n      params\n    }).pipe(this.converterService.pipeable(CUSTOMER_SEARCH_PAGE_NORMALIZER));\n  }\n\n}\n\nOccAsmAdapter.ɵfac = function OccAsmAdapter_Factory(t) {\n  return new (t || OccAsmAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService), i0.ɵɵinject(i3.AsmConfig), i0.ɵɵinject(i2.BaseSiteService));\n};\n\nOccAsmAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OccAsmAdapter,\n  factory: OccAsmAdapter.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OccAsmAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: i2.OccEndpointsService\n    }, {\n      type: i2.ConverterService\n    }, {\n      type: i3.AsmConfig\n    }, {\n      type: i2.BaseSiteService\n    }];\n  }, null);\n})();\n\nconst defaultOccAsmConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        asmCustomerSearch: '/assistedservicewebservices/customers/search'\n      }\n    }\n  }\n};\n\nclass AsmOccModule {}\n\nAsmOccModule.ɵfac = function AsmOccModule_Factory(t) {\n  return new (t || AsmOccModule)();\n};\n\nAsmOccModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AsmOccModule\n});\nAsmOccModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [provideDefaultConfig(defaultOccAsmConfig), {\n    provide: AsmAdapter,\n    useClass: OccAsmAdapter\n  }],\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AsmOccModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      providers: [provideDefaultConfig(defaultOccAsmConfig), {\n        provide: AsmAdapter,\n        useClass: OccAsmAdapter\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AsmOccModule, OccAsmAdapter }; //# sourceMappingURL=spartacus-asm-occ.js.map","map":{"version":3,"sources":["D:/spartacus/front-store/node_modules/@spartacus/asm/fesm2015/spartacus-asm-occ.js"],"names":["i1","HttpHeaders","HttpParams","i0","Injectable","NgModule","i3","CUSTOMER_SEARCH_PAGE_NORMALIZER","AsmAdapter","i2","InterceptorUtil","USE_CUSTOMER_SUPPORT_AGENT_TOKEN","provideDefaultConfig","CommonModule","OccAsmAdapter","constructor","http","occEndpointsService","converterService","config","baseSiteService","getActive","subscribe","value","activeBaseSite","customerSearch","options","headers","createHeader","params","set","query","pageSize","url","buildUrl","baseSite","prefix","get","pipe","pipeable","ɵfac","HttpClient","OccEndpointsService","ConverterService","AsmConfig","BaseSiteService","ɵprov","type","defaultOccAsmConfig","backend","occ","endpoints","asmCustomerSearch","AsmOccModule","ɵmod","ɵinj","provide","useClass","args","imports","providers"],"mappings":"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","sourcesContent":["import * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i3 from '@spartacus/asm/core';\nimport { CUSTOMER_SEARCH_PAGE_NORMALIZER, AsmAdapter } from '@spartacus/asm/core';\nimport * as i2 from '@spartacus/core';\nimport { InterceptorUtil, USE_CUSTOMER_SUPPORT_AGENT_TOKEN, provideDefaultConfig } from '@spartacus/core';\nimport { CommonModule } from '@angular/common';\n\nclass OccAsmAdapter {\n    constructor(http, occEndpointsService, converterService, config, baseSiteService) {\n        this.http = http;\n        this.occEndpointsService = occEndpointsService;\n        this.converterService = converterService;\n        this.config = config;\n        this.baseSiteService = baseSiteService;\n        this.baseSiteService\n            .getActive()\n            .subscribe((value) => (this.activeBaseSite = value));\n    }\n    customerSearch(options) {\n        const headers = InterceptorUtil.createHeader(USE_CUSTOMER_SUPPORT_AGENT_TOKEN, true, new HttpHeaders());\n        let params = new HttpParams()\n            .set('baseSite', this.activeBaseSite)\n            .set('sort', 'byNameAsc');\n        if (typeof options['query'] !== 'undefined') {\n            params = params.set('query', '' + options.query);\n        }\n        if (typeof options['pageSize'] !== 'undefined') {\n            params = params.set('pageSize', '' + options.pageSize);\n        }\n        const url = this.occEndpointsService.buildUrl('asmCustomerSearch', {}, {\n            baseSite: false,\n            prefix: false,\n        });\n        return this.http\n            .get(url, { headers, params })\n            .pipe(this.converterService.pipeable(CUSTOMER_SEARCH_PAGE_NORMALIZER));\n    }\n}\nOccAsmAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OccAsmAdapter, deps: [{ token: i1.HttpClient }, { token: i2.OccEndpointsService }, { token: i2.ConverterService }, { token: i3.AsmConfig }, { token: i2.BaseSiteService }], target: i0.ɵɵFactoryTarget.Injectable });\nOccAsmAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OccAsmAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OccAsmAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: i2.OccEndpointsService }, { type: i2.ConverterService }, { type: i3.AsmConfig }, { type: i2.BaseSiteService }]; } });\n\nconst defaultOccAsmConfig = {\n    backend: {\n        occ: {\n            endpoints: {\n                asmCustomerSearch: '/assistedservicewebservices/customers/search',\n            },\n        },\n    },\n};\n\nclass AsmOccModule {\n}\nAsmOccModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AsmOccModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAsmOccModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AsmOccModule, imports: [CommonModule] });\nAsmOccModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AsmOccModule, providers: [\n        provideDefaultConfig(defaultOccAsmConfig),\n        {\n            provide: AsmAdapter,\n            useClass: OccAsmAdapter,\n        },\n    ], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AsmOccModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    providers: [\n                        provideDefaultConfig(defaultOccAsmConfig),\n                        {\n                            provide: AsmAdapter,\n                            useClass: OccAsmAdapter,\n                        },\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AsmOccModule, OccAsmAdapter };\n//# sourceMappingURL=spartacus-asm-occ.js.map\n"]},"metadata":{},"sourceType":"module"}