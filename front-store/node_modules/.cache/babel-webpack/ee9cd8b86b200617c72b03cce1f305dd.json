{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, PLATFORM_ID, Inject, NgModule } from '@angular/core';\nimport * as i2 from '@spartacus/core';\nimport { Config, StateUtils, GlobalMessageType, SiteContextActions, normalizeHttpError, provideDefaultConfig } from '@spartacus/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i1 from '@ngrx/store';\nimport { createFeatureSelector, createSelector, select, StoreModule } from '@ngrx/store';\nimport { Subscription, of } from 'rxjs';\nimport { map, filter, withLatestFrom, mergeMap, catchError, switchMap } from 'rxjs/operators';\nimport * as i1$1 from '@ngrx/effects';\nimport { ofType, Effect, EffectsModule } from '@ngrx/effects';\nimport { __decorate } from 'tslib';\n\nclass StoreFinderConfig {}\n\nStoreFinderConfig.ɵfac = function StoreFinderConfig_Factory(t) {\n  return new (t || StoreFinderConfig)();\n};\n\nStoreFinderConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StoreFinderConfig,\n  factory: function StoreFinderConfig_Factory(t) {\n    let r = null;\n\n    if (t) {\n      r = new (t || StoreFinderConfig)();\n    } else {\n      r = i0.ɵɵinject(Config);\n    }\n\n    return r;\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFinderConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: Config\n    }]\n  }], null, null);\n})();\n\nclass StoreFinderAdapter {}\n\nclass StoreFinderConnector {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n\n  search(query, searchConfig, longitudeLatitude, radius) {\n    return this.adapter.search(query, searchConfig, longitudeLatitude, radius);\n  }\n\n  getCounts() {\n    return this.adapter.loadCounts();\n  }\n\n  get(storeId) {\n    return this.adapter.load(storeId);\n  }\n\n}\n\nStoreFinderConnector.ɵfac = function StoreFinderConnector_Factory(t) {\n  return new (t || StoreFinderConnector)(i0.ɵɵinject(StoreFinderAdapter));\n};\n\nStoreFinderConnector.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StoreFinderConnector,\n  factory: StoreFinderConnector.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFinderConnector, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: StoreFinderAdapter\n    }];\n  }, null);\n})();\n\nconst STORE_FINDER_SEARCH_PAGE_NORMALIZER = new InjectionToken('StoreFinderSearchPageNormalizer');\nconst STORE_COUNT_NORMALIZER = new InjectionToken('StoreCountNormalizer');\nconst STORE_FINDER_FEATURE = 'stores';\nconst STORE_FINDER_DATA = '[StoreFinder] Store Finder Data';\nconst FIND_STORES_ON_HOLD = '[StoreFinder] On Hold';\nconst FIND_STORES = '[StoreFinder] Find Stores';\nconst FIND_STORES_FAIL = '[StoreFinder] Find Stores Fail';\nconst FIND_STORES_SUCCESS = '[StoreFinder] Find Stores Success';\nconst FIND_STORE_BY_ID = '[StoreFinder] Find a Store by Id';\nconst FIND_STORE_BY_ID_FAIL = '[StoreFinder] Find a Store by Id Fail';\nconst FIND_STORE_BY_ID_SUCCESS = '[StoreFinder] Find a Store by Id Success';\n\nclass FindStoresOnHold extends StateUtils.LoaderLoadAction {\n  constructor() {\n    super(STORE_FINDER_DATA);\n    this.type = FIND_STORES_ON_HOLD;\n  }\n\n}\n\nclass FindStores extends StateUtils.LoaderLoadAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA);\n    this.payload = payload;\n    this.type = FIND_STORES;\n  }\n\n}\n\nclass FindStoresFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA, payload);\n    this.payload = payload;\n    this.type = FIND_STORES_FAIL;\n  }\n\n}\n\nclass FindStoresSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA);\n    this.payload = payload;\n    this.type = FIND_STORES_SUCCESS;\n  }\n\n}\n\nclass FindStoreById extends StateUtils.LoaderLoadAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA);\n    this.payload = payload;\n    this.type = FIND_STORE_BY_ID;\n  }\n\n}\n\nclass FindStoreByIdFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA, payload);\n    this.payload = payload;\n    this.type = FIND_STORE_BY_ID_FAIL;\n  }\n\n}\n\nclass FindStoreByIdSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA);\n    this.payload = payload;\n    this.type = FIND_STORE_BY_ID_SUCCESS;\n  }\n\n}\n\nconst VIEW_ALL_STORES = '[StoreFinder] View All Stores';\nconst VIEW_ALL_STORES_FAIL = '[StoreFinder] View All Stores Fail';\nconst VIEW_ALL_STORES_SUCCESS = '[StoreFinder] View All Stores Success';\nconst CLEAR_STORE_FINDER_DATA = '[StoreFinder] Clear Data';\n\nclass ViewAllStores extends StateUtils.LoaderLoadAction {\n  constructor() {\n    super(STORE_FINDER_DATA);\n    this.type = VIEW_ALL_STORES;\n  }\n\n}\n\nclass ViewAllStoresFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA, payload);\n    this.payload = payload;\n    this.type = VIEW_ALL_STORES_FAIL;\n  }\n\n}\n\nclass ViewAllStoresSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA);\n    this.payload = payload;\n    this.type = VIEW_ALL_STORES_SUCCESS;\n  }\n\n}\n\nclass ClearStoreFinderData {\n  constructor() {\n    this.type = CLEAR_STORE_FINDER_DATA;\n  }\n\n}\n\nvar storeFinderGroup_actions = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  FIND_STORES_ON_HOLD: FIND_STORES_ON_HOLD,\n  FIND_STORES: FIND_STORES,\n  FIND_STORES_FAIL: FIND_STORES_FAIL,\n  FIND_STORES_SUCCESS: FIND_STORES_SUCCESS,\n  FIND_STORE_BY_ID: FIND_STORE_BY_ID,\n  FIND_STORE_BY_ID_FAIL: FIND_STORE_BY_ID_FAIL,\n  FIND_STORE_BY_ID_SUCCESS: FIND_STORE_BY_ID_SUCCESS,\n  FindStoresOnHold: FindStoresOnHold,\n  FindStores: FindStores,\n  FindStoresFail: FindStoresFail,\n  FindStoresSuccess: FindStoresSuccess,\n  FindStoreById: FindStoreById,\n  FindStoreByIdFail: FindStoreByIdFail,\n  FindStoreByIdSuccess: FindStoreByIdSuccess,\n  VIEW_ALL_STORES: VIEW_ALL_STORES,\n  VIEW_ALL_STORES_FAIL: VIEW_ALL_STORES_FAIL,\n  VIEW_ALL_STORES_SUCCESS: VIEW_ALL_STORES_SUCCESS,\n  CLEAR_STORE_FINDER_DATA: CLEAR_STORE_FINDER_DATA,\n  ViewAllStores: ViewAllStores,\n  ViewAllStoresFail: ViewAllStoresFail,\n  ViewAllStoresSuccess: ViewAllStoresSuccess,\n  ClearStoreFinderData: ClearStoreFinderData\n});\nconst getStoreFinderState = createFeatureSelector(STORE_FINDER_FEATURE);\nconst getFindStoresState = createSelector(getStoreFinderState, storesState => storesState.findStores);\nconst getFindStoresEntities = createSelector(getFindStoresState, state => StateUtils.loaderValueSelector(state));\nconst getStoresLoading = createSelector(getFindStoresState, state => StateUtils.loaderLoadingSelector(state));\nconst getStoresSuccess = createSelector(getFindStoresState, state => StateUtils.loaderSuccessSelector(state));\nconst getViewAllStoresState = createSelector(getStoreFinderState, storesState => storesState.viewAllStores);\nconst getViewAllStoresEntities = createSelector(getViewAllStoresState, state => StateUtils.loaderValueSelector(state));\nconst getViewAllStoresLoading = createSelector(getViewAllStoresState, state => StateUtils.loaderLoadingSelector(state));\nvar storeFinderGroup_selectors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getFindStoresState: getFindStoresState,\n  getFindStoresEntities: getFindStoresEntities,\n  getStoresLoading: getStoresLoading,\n  getStoresSuccess: getStoresSuccess,\n  getViewAllStoresState: getViewAllStoresState,\n  getViewAllStoresEntities: getViewAllStoresEntities,\n  getViewAllStoresLoading: getViewAllStoresLoading\n});\n\nclass StoreFinderService {\n  constructor(store, winRef, globalMessageService, routingService, platformId) {\n    this.store = store;\n    this.winRef = winRef;\n    this.globalMessageService = globalMessageService;\n    this.routingService = routingService;\n    this.platformId = platformId;\n    this.geolocationWatchId = null;\n    this.subscription = new Subscription();\n    this.reloadStoreEntitiesOnContextChange();\n  }\n  /**\n   * Returns boolean observable for store's loading state\n   */\n\n\n  getStoresLoading() {\n    return this.store.pipe(select(getStoresLoading));\n  }\n  /**\n   * Returns boolean observable for store's success state\n   */\n\n\n  getStoresLoaded() {\n    return this.store.pipe(select(getStoresSuccess));\n  }\n  /**\n   * Returns observable for store's entities\n   */\n\n\n  getFindStoresEntities() {\n    return this.store.pipe(select(getFindStoresEntities), map(data => data.findStoresEntities));\n  }\n  /**\n   * Returns observable for a single store by Id\n   */\n\n\n  getFindStoreEntityById() {\n    return this.store.pipe(select(getFindStoresEntities), map(data => data.findStoreEntityById));\n  }\n  /**\n   * Returns boolean observable for view all store's loading state\n   */\n\n\n  getViewAllStoresLoading() {\n    return this.store.pipe(select(getViewAllStoresLoading));\n  }\n  /**\n   * Returns observable for view all store's entities\n   */\n\n\n  getViewAllStoresEntities() {\n    return this.store.pipe(select(getViewAllStoresEntities), map(data => data.viewAllStoresEntities));\n  }\n  /**\n   * Store finding action functionality\n   * @param queryText text query\n   * @param searchConfig search configuration\n   * @param longitudeLatitude longitude and latitude coordinates\n   * @param countryIsoCode country ISO code\n   * @param useMyLocation current location coordinates\n   * @param radius radius of the scope from the center point\n   */\n\n\n  findStoresAction(queryText, searchConfig, longitudeLatitude, countryIsoCode, useMyLocation, radius) {\n    if (useMyLocation && this.winRef.nativeWindow) {\n      this.clearWatchGeolocation(new FindStoresOnHold());\n      this.geolocationWatchId = this.winRef.nativeWindow.navigator.geolocation.watchPosition(pos => {\n        const position = {\n          longitude: pos.coords.longitude,\n          latitude: pos.coords.latitude\n        };\n        this.clearWatchGeolocation(new FindStores({\n          queryText: queryText,\n          searchConfig: searchConfig,\n          longitudeLatitude: position,\n          countryIsoCode: countryIsoCode,\n          radius: radius\n        }));\n      }, () => {\n        this.globalMessageService.add({\n          key: 'storeFinder.geolocationNotEnabled'\n        }, GlobalMessageType.MSG_TYPE_ERROR);\n        this.routingService.go(['/store-finder']);\n      });\n    } else {\n      this.clearWatchGeolocation(new FindStores({\n        queryText: queryText,\n        searchConfig: searchConfig,\n        longitudeLatitude: longitudeLatitude,\n        countryIsoCode: countryIsoCode,\n        radius: radius\n      }));\n    }\n  }\n  /**\n   * View all stores\n   */\n\n\n  viewAllStores() {\n    this.clearWatchGeolocation(new ViewAllStores());\n  }\n  /**\n   * View all stores by id\n   * @param storeId store id\n   */\n\n\n  viewStoreById(storeId) {\n    this.clearWatchGeolocation(new FindStoreById({\n      storeId\n    }));\n  }\n\n  clearWatchGeolocation(callbackAction) {\n    var _a;\n\n    if (this.geolocationWatchId !== null) {\n      (_a = this.winRef.nativeWindow) === null || _a === void 0 ? void 0 : _a.navigator.geolocation.clearWatch(this.geolocationWatchId);\n      this.geolocationWatchId = null;\n    }\n\n    this.store.dispatch(callbackAction);\n  }\n\n  isEmpty(store) {\n    return !store || typeof store === 'object' && Object.keys(store).length === 0;\n  }\n  /**\n   * Reload store data when store entities are empty because of the context change\n   */\n\n\n  reloadStoreEntitiesOnContextChange() {\n    if (isPlatformBrowser(this.platformId) || !this.platformId) {\n      this.subscription = this.getFindStoresEntities().pipe(filter(data => this.isEmpty(data)), withLatestFrom(this.getStoresLoading(), this.getStoresLoaded(), this.routingService.getParams())).subscribe(([, loading, loaded, routeParams]) => {\n        if (!loading && !loaded) {\n          if (routeParams.country && !routeParams.store) {\n            this.callFindStoresAction(routeParams);\n          }\n\n          if (routeParams.store) {\n            this.viewStoreById(routeParams.store);\n          }\n        }\n      });\n    }\n  }\n\n  callFindStoresAction(routeParams) {\n    this.findStoresAction('', {\n      pageSize: -1\n    }, undefined, routeParams.country);\n  }\n\n  ngOnDestroy() {\n    var _a;\n\n    (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n  }\n  /**\n   * Returns store latitude\n   * @param location store location\n   */\n\n\n  getStoreLatitude(location) {\n    var _a;\n\n    return (_a = location === null || location === void 0 ? void 0 : location.geoPoint) === null || _a === void 0 ? void 0 : _a.latitude;\n  }\n  /**\n   * Returns store longitude\n   * @param location store location\n   */\n\n\n  getStoreLongitude(location) {\n    var _a;\n\n    return (_a = location === null || location === void 0 ? void 0 : location.geoPoint) === null || _a === void 0 ? void 0 : _a.longitude;\n  }\n\n}\n\nStoreFinderService.ɵfac = function StoreFinderService_Factory(t) {\n  return new (t || StoreFinderService)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.WindowRef), i0.ɵɵinject(i2.GlobalMessageService), i0.ɵɵinject(i2.RoutingService), i0.ɵɵinject(PLATFORM_ID));\n};\n\nStoreFinderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StoreFinderService,\n  factory: StoreFinderService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFinderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.Store\n    }, {\n      type: i2.WindowRef\n    }, {\n      type: i2.GlobalMessageService\n    }, {\n      type: i2.RoutingService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})(); /// <reference types=\"@types/googlemaps\" />\n\n\nclass GoogleMapRendererService {\n  constructor(config, storeFinderService, scriptLoader) {\n    this.config = config;\n    this.storeFinderService = storeFinderService;\n    this.scriptLoader = scriptLoader;\n    this.googleMap = null;\n  }\n  /**\n   * Renders google map on the given element and draws markers on it.\n   * If map already exists it will use an existing map otherwise it will create one\n   * @param mapElement HTML element inside of which the map will be displayed\n   * @param locations array containign geo data to be displayed on the map\n   * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n   */\n\n\n  renderMap(mapElement, locations, selectMarkerHandler) {\n    if (Object.entries(locations[Object.keys(locations)[0]]).length > 0) if (this.googleMap === null) {\n      this.scriptLoader.embedScript({\n        src: this.config.googleMaps.apiUrl,\n        params: {\n          key: this.config.googleMaps.apiKey\n        },\n        attributes: {\n          type: 'text/javascript'\n        },\n        callback: () => {\n          this.drawMap(mapElement, locations, selectMarkerHandler);\n        }\n      });\n    } else {\n      this.drawMap(mapElement, locations, selectMarkerHandler);\n    }\n  }\n  /**\n   * Centers the map to the given point\n   * @param latitute latitude of the new center\n   * @param longitude longitude of the new center\n   */\n\n\n  centerMap(latitute, longitude) {\n    this.googleMap.panTo({\n      lat: latitute,\n      lng: longitude\n    });\n    this.googleMap.setZoom(this.config.googleMaps.selectedMarkerScale);\n  }\n  /**\n   * Defines and returns {@link google.maps.LatLng} representing a point where the map will be centered\n   * @param locations list of locations\n   */\n\n\n  defineMapCenter(locations) {\n    return new google.maps.LatLng(this.storeFinderService.getStoreLatitude(locations[0]), this.storeFinderService.getStoreLongitude(locations[0]));\n  }\n  /**\n   * Creates google map inside if the given HTML element centered to the given point\n   * @param mapElement {@link HTMLElement} inside of which the map will be created\n   * @param mapCenter {@link google.maps.LatLng} the point where the map will be centered\n   */\n\n\n  initMap(mapElement, mapCenter) {\n    const gestureOption = 'greedy';\n    const mapProp = {\n      center: mapCenter,\n      zoom: this.config.googleMaps.scale,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      gestureHandling: gestureOption\n    };\n    this.googleMap = new google.maps.Map(mapElement, mapProp);\n  }\n  /**\n   * Erases the current map's markers and create a new one based on the given locations\n   * @param locations array of locations to be displayed on the map\n   * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n   */\n\n\n  createMarkers(locations, selectMarkerHandler) {\n    this.markers = [];\n    locations.forEach((element, index) => {\n      const marker = new google.maps.Marker({\n        position: new google.maps.LatLng(this.storeFinderService.getStoreLatitude(element), this.storeFinderService.getStoreLongitude(element)),\n        label: index + 1 + ''\n      });\n      this.markers.push(marker);\n      marker.setMap(this.googleMap);\n      marker.addListener('mouseover', function () {\n        marker.setAnimation(google.maps.Animation.BOUNCE);\n      });\n      marker.addListener('mouseout', function () {\n        marker.setAnimation(null);\n      });\n\n      if (selectMarkerHandler) {\n        marker.addListener('click', function () {\n          selectMarkerHandler(index);\n        });\n      }\n    });\n  }\n  /**\n   * Initialize and draw the map\n   * @param mapElement {@link HTMLElement} inside of which the map will be drawn\n   * @param locations array of locations to be displayed on the map\n   * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n   */\n\n\n  drawMap(mapElement, locations, selectMarkerHandler) {\n    this.initMap(mapElement, this.defineMapCenter(locations));\n    this.createMarkers(locations, selectMarkerHandler);\n  }\n\n}\n\nGoogleMapRendererService.ɵfac = function GoogleMapRendererService_Factory(t) {\n  return new (t || GoogleMapRendererService)(i0.ɵɵinject(StoreFinderConfig), i0.ɵɵinject(StoreFinderService), i0.ɵɵinject(i2.ScriptLoader));\n};\n\nGoogleMapRendererService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GoogleMapRendererService,\n  factory: GoogleMapRendererService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleMapRendererService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: StoreFinderConfig\n    }, {\n      type: StoreFinderService\n    }, {\n      type: i2.ScriptLoader\n    }];\n  }, null);\n})();\n\nconst defaultStoreFinderConfig = {\n  googleMaps: {\n    apiUrl: 'https://maps.googleapis.com/maps/api/js',\n    apiKey: '',\n    scale: 5,\n    selectedMarkerScale: 17,\n    radius: 50000\n  }\n};\nconst initialState$1 = {\n  findStoresEntities: {},\n  findStoreEntityById: {}\n};\n\nfunction findStoresReducer(state = initialState$1, action) {\n  switch (action.type) {\n    case FIND_STORES_SUCCESS:\n      {\n        const findStoresEntities = action.payload;\n        return Object.assign(Object.assign({}, state), {\n          findStoresEntities\n        });\n      }\n\n    case FIND_STORE_BY_ID_SUCCESS:\n      {\n        const findStoreEntityById = action.payload;\n        return Object.assign(Object.assign({}, state), {\n          findStoreEntityById\n        });\n      }\n  }\n\n  return state;\n}\n\nconst initialState = {\n  viewAllStoresEntities: {}\n};\n\nfunction viewAllStoresReducer(state = initialState, action) {\n  switch (action.type) {\n    case VIEW_ALL_STORES_SUCCESS:\n      {\n        const viewAllStoresEntities = action.payload;\n        return Object.assign(Object.assign({}, state), {\n          viewAllStoresEntities\n        });\n      }\n  }\n\n  return state;\n}\n\nfunction getReducers() {\n  return {\n    findStores: StateUtils.loaderReducer(STORE_FINDER_DATA, findStoresReducer),\n    viewAllStores: StateUtils.loaderReducer(STORE_FINDER_DATA, viewAllStoresReducer)\n  };\n}\n\nconst reducerToken = new InjectionToken('StoreFinderReducers');\nconst reducerProvider = {\n  provide: reducerToken,\n  useFactory: getReducers\n};\n\nfunction clearStoreFinderState(reducer) {\n  return function (state, action) {\n    if (action.type === SiteContextActions.LANGUAGE_CHANGE) {\n      state = undefined;\n    }\n\n    if (action.type === CLEAR_STORE_FINDER_DATA) {\n      state = undefined;\n    }\n\n    return reducer(state, action);\n  };\n}\n\nconst metaReducers = [clearStoreFinderState];\n\nclass FindStoresEffect {\n  constructor(actions$, storeFinderConnector) {\n    this.actions$ = actions$;\n    this.storeFinderConnector = storeFinderConnector;\n    this.findStores$ = this.actions$.pipe(ofType(FIND_STORES), map(action => action.payload), mergeMap(payload => this.storeFinderConnector.search(payload.queryText, payload.searchConfig, payload.longitudeLatitude, payload.radius).pipe(map(data => {\n      if (payload.countryIsoCode) {\n        data.stores = data.stores.filter(store => store.address.country.isocode === payload.countryIsoCode);\n        data.stores.sort((a, b) => a.name < b.name ? -1 : a.name > b.name ? 1 : 0);\n      }\n\n      return new FindStoresSuccess(data);\n    }), catchError(error => of(new FindStoresFail(normalizeHttpError(error)))))));\n    this.findStoreById$ = this.actions$.pipe(ofType(FIND_STORE_BY_ID), map(action => action.payload), switchMap(payload => this.storeFinderConnector.get(payload.storeId).pipe(map(data => new FindStoreByIdSuccess(data)), catchError(error => of(new FindStoreByIdFail(normalizeHttpError(error)))))));\n  }\n\n}\n\nFindStoresEffect.ɵfac = function FindStoresEffect_Factory(t) {\n  return new (t || FindStoresEffect)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(StoreFinderConnector));\n};\n\nFindStoresEffect.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: FindStoresEffect,\n  factory: FindStoresEffect.ɵfac\n});\n\n__decorate([Effect()], FindStoresEffect.prototype, \"findStores$\", void 0);\n\n__decorate([Effect()], FindStoresEffect.prototype, \"findStoreById$\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FindStoresEffect, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: StoreFinderConnector\n    }];\n  }, {\n    findStores$: [],\n    findStoreById$: []\n  });\n})();\n\nclass ViewAllStoresEffect {\n  constructor(actions$, storeFinderConnector) {\n    this.actions$ = actions$;\n    this.storeFinderConnector = storeFinderConnector;\n    this.viewAllStores$ = this.actions$.pipe(ofType(VIEW_ALL_STORES, CLEAR_STORE_FINDER_DATA), switchMap(() => {\n      return this.storeFinderConnector.getCounts().pipe(map(data => {\n        data.sort((a, b) => a.name < b.name ? -1 : a.name > b.name ? 1 : 0);\n        return new ViewAllStoresSuccess(data);\n      }), catchError(error => of(new ViewAllStoresFail(normalizeHttpError(error)))));\n    }));\n    this.clearStoreFinderData$ = this.actions$.pipe(ofType(SiteContextActions.LANGUAGE_CHANGE, SiteContextActions.CURRENCY_CHANGE), map(() => {\n      return new ClearStoreFinderData();\n    }));\n  }\n\n}\n\nViewAllStoresEffect.ɵfac = function ViewAllStoresEffect_Factory(t) {\n  return new (t || ViewAllStoresEffect)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(StoreFinderConnector));\n};\n\nViewAllStoresEffect.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ViewAllStoresEffect,\n  factory: ViewAllStoresEffect.ɵfac\n});\n\n__decorate([Effect()], ViewAllStoresEffect.prototype, \"viewAllStores$\", void 0);\n\n__decorate([Effect()], ViewAllStoresEffect.prototype, \"clearStoreFinderData$\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewAllStoresEffect, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: StoreFinderConnector\n    }];\n  }, {\n    viewAllStores$: [],\n    clearStoreFinderData$: []\n  });\n})();\n\nconst effects = [FindStoresEffect, ViewAllStoresEffect];\n\nclass StoreFinderStoreModule {}\n\nStoreFinderStoreModule.ɵfac = function StoreFinderStoreModule_Factory(t) {\n  return new (t || StoreFinderStoreModule)();\n};\n\nStoreFinderStoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreFinderStoreModule\n});\nStoreFinderStoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [reducerProvider],\n  imports: [[CommonModule, StoreModule.forFeature(STORE_FINDER_FEATURE, reducerToken, {\n    metaReducers\n  }), EffectsModule.forFeature(effects)]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFinderStoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, StoreModule.forFeature(STORE_FINDER_FEATURE, reducerToken, {\n        metaReducers\n      }), EffectsModule.forFeature(effects)],\n      providers: [reducerProvider]\n    }]\n  }], null, null);\n})();\n\nclass StoreFinderCoreModule {}\n\nStoreFinderCoreModule.ɵfac = function StoreFinderCoreModule_Factory(t) {\n  return new (t || StoreFinderCoreModule)();\n};\n\nStoreFinderCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreFinderCoreModule\n});\nStoreFinderCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [provideDefaultConfig(defaultStoreFinderConfig), StoreFinderConnector],\n  imports: [[StoreFinderStoreModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFinderCoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [StoreFinderStoreModule],\n      providers: [provideDefaultConfig(defaultStoreFinderConfig), StoreFinderConnector]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { GoogleMapRendererService, STORE_COUNT_NORMALIZER, STORE_FINDER_DATA, STORE_FINDER_FEATURE, STORE_FINDER_SEARCH_PAGE_NORMALIZER, storeFinderGroup_actions as StoreFinderActions, StoreFinderAdapter, StoreFinderConfig, StoreFinderConnector, StoreFinderCoreModule, storeFinderGroup_selectors as StoreFinderSelectors, StoreFinderService }; //# sourceMappingURL=spartacus-storefinder-core.js.map","map":{"version":3,"sources":["D:/spartacus/front-store/node_modules/@spartacus/storefinder/fesm2015/spartacus-storefinder-core.js"],"names":["i0","Injectable","InjectionToken","PLATFORM_ID","Inject","NgModule","i2","Config","StateUtils","GlobalMessageType","SiteContextActions","normalizeHttpError","provideDefaultConfig","isPlatformBrowser","CommonModule","i1","createFeatureSelector","createSelector","select","StoreModule","Subscription","of","map","filter","withLatestFrom","mergeMap","catchError","switchMap","i1$1","ofType","Effect","EffectsModule","__decorate","StoreFinderConfig","ɵfac","ɵprov","type","args","providedIn","useExisting","StoreFinderAdapter","StoreFinderConnector","constructor","adapter","search","query","searchConfig","longitudeLatitude","radius","getCounts","loadCounts","get","storeId","load","STORE_FINDER_SEARCH_PAGE_NORMALIZER","STORE_COUNT_NORMALIZER","STORE_FINDER_FEATURE","STORE_FINDER_DATA","FIND_STORES_ON_HOLD","FIND_STORES","FIND_STORES_FAIL","FIND_STORES_SUCCESS","FIND_STORE_BY_ID","FIND_STORE_BY_ID_FAIL","FIND_STORE_BY_ID_SUCCESS","FindStoresOnHold","LoaderLoadAction","FindStores","payload","FindStoresFail","LoaderFailAction","FindStoresSuccess","LoaderSuccessAction","FindStoreById","FindStoreByIdFail","FindStoreByIdSuccess","VIEW_ALL_STORES","VIEW_ALL_STORES_FAIL","VIEW_ALL_STORES_SUCCESS","CLEAR_STORE_FINDER_DATA","ViewAllStores","ViewAllStoresFail","ViewAllStoresSuccess","ClearStoreFinderData","storeFinderGroup_actions","Object","freeze","__proto__","getStoreFinderState","getFindStoresState","storesState","findStores","getFindStoresEntities","state","loaderValueSelector","getStoresLoading","loaderLoadingSelector","getStoresSuccess","loaderSuccessSelector","getViewAllStoresState","viewAllStores","getViewAllStoresEntities","getViewAllStoresLoading","storeFinderGroup_selectors","StoreFinderService","store","winRef","globalMessageService","routingService","platformId","geolocationWatchId","subscription","reloadStoreEntitiesOnContextChange","pipe","getStoresLoaded","data","findStoresEntities","getFindStoreEntityById","findStoreEntityById","viewAllStoresEntities","findStoresAction","queryText","countryIsoCode","useMyLocation","nativeWindow","clearWatchGeolocation","navigator","geolocation","watchPosition","pos","position","longitude","coords","latitude","add","key","MSG_TYPE_ERROR","go","viewStoreById","callbackAction","_a","clearWatch","dispatch","isEmpty","keys","length","getParams","subscribe","loading","loaded","routeParams","country","callFindStoresAction","pageSize","undefined","ngOnDestroy","unsubscribe","getStoreLatitude","location","geoPoint","getStoreLongitude","Store","WindowRef","GlobalMessageService","RoutingService","decorators","GoogleMapRendererService","config","storeFinderService","scriptLoader","googleMap","renderMap","mapElement","locations","selectMarkerHandler","entries","embedScript","src","googleMaps","apiUrl","params","apiKey","attributes","callback","drawMap","centerMap","latitute","panTo","lat","lng","setZoom","selectedMarkerScale","defineMapCenter","google","maps","LatLng","initMap","mapCenter","gestureOption","mapProp","center","zoom","scale","mapTypeId","MapTypeId","ROADMAP","gestureHandling","Map","createMarkers","markers","forEach","element","index","marker","Marker","label","push","setMap","addListener","setAnimation","Animation","BOUNCE","ScriptLoader","defaultStoreFinderConfig","initialState$1","findStoresReducer","action","assign","initialState","viewAllStoresReducer","getReducers","loaderReducer","reducerToken","reducerProvider","provide","useFactory","clearStoreFinderState","reducer","LANGUAGE_CHANGE","metaReducers","FindStoresEffect","actions$","storeFinderConnector","findStores$","stores","address","isocode","sort","a","b","name","error","findStoreById$","Actions","prototype","ViewAllStoresEffect","viewAllStores$","clearStoreFinderData$","CURRENCY_CHANGE","effects","StoreFinderStoreModule","ɵmod","ɵinj","forFeature","imports","providers","StoreFinderCoreModule","StoreFinderActions","StoreFinderSelectors"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, PLATFORM_ID, Inject, NgModule } from '@angular/core';\nimport * as i2 from '@spartacus/core';\nimport { Config, StateUtils, GlobalMessageType, SiteContextActions, normalizeHttpError, provideDefaultConfig } from '@spartacus/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i1 from '@ngrx/store';\nimport { createFeatureSelector, createSelector, select, StoreModule } from '@ngrx/store';\nimport { Subscription, of } from 'rxjs';\nimport { map, filter, withLatestFrom, mergeMap, catchError, switchMap } from 'rxjs/operators';\nimport * as i1$1 from '@ngrx/effects';\nimport { ofType, Effect, EffectsModule } from '@ngrx/effects';\nimport { __decorate } from 'tslib';\n\nclass StoreFinderConfig {\n}\nStoreFinderConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nStoreFinderConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderConfig, providedIn: 'root', useExisting: Config });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useExisting: Config,\n                }]\n        }] });\n\nclass StoreFinderAdapter {\n}\n\nclass StoreFinderConnector {\n    constructor(adapter) {\n        this.adapter = adapter;\n    }\n    search(query, searchConfig, longitudeLatitude, radius) {\n        return this.adapter.search(query, searchConfig, longitudeLatitude, radius);\n    }\n    getCounts() {\n        return this.adapter.loadCounts();\n    }\n    get(storeId) {\n        return this.adapter.load(storeId);\n    }\n}\nStoreFinderConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderConnector, deps: [{ token: StoreFinderAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nStoreFinderConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderConnector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderConnector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: StoreFinderAdapter }]; } });\n\nconst STORE_FINDER_SEARCH_PAGE_NORMALIZER = new InjectionToken('StoreFinderSearchPageNormalizer');\nconst STORE_COUNT_NORMALIZER = new InjectionToken('StoreCountNormalizer');\n\nconst STORE_FINDER_FEATURE = 'stores';\nconst STORE_FINDER_DATA = '[StoreFinder] Store Finder Data';\n\nconst FIND_STORES_ON_HOLD = '[StoreFinder] On Hold';\nconst FIND_STORES = '[StoreFinder] Find Stores';\nconst FIND_STORES_FAIL = '[StoreFinder] Find Stores Fail';\nconst FIND_STORES_SUCCESS = '[StoreFinder] Find Stores Success';\nconst FIND_STORE_BY_ID = '[StoreFinder] Find a Store by Id';\nconst FIND_STORE_BY_ID_FAIL = '[StoreFinder] Find a Store by Id Fail';\nconst FIND_STORE_BY_ID_SUCCESS = '[StoreFinder] Find a Store by Id Success';\nclass FindStoresOnHold extends StateUtils.LoaderLoadAction {\n    constructor() {\n        super(STORE_FINDER_DATA);\n        this.type = FIND_STORES_ON_HOLD;\n    }\n}\nclass FindStores extends StateUtils.LoaderLoadAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA);\n        this.payload = payload;\n        this.type = FIND_STORES;\n    }\n}\nclass FindStoresFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA, payload);\n        this.payload = payload;\n        this.type = FIND_STORES_FAIL;\n    }\n}\nclass FindStoresSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA);\n        this.payload = payload;\n        this.type = FIND_STORES_SUCCESS;\n    }\n}\nclass FindStoreById extends StateUtils.LoaderLoadAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA);\n        this.payload = payload;\n        this.type = FIND_STORE_BY_ID;\n    }\n}\nclass FindStoreByIdFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA, payload);\n        this.payload = payload;\n        this.type = FIND_STORE_BY_ID_FAIL;\n    }\n}\nclass FindStoreByIdSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA);\n        this.payload = payload;\n        this.type = FIND_STORE_BY_ID_SUCCESS;\n    }\n}\n\nconst VIEW_ALL_STORES = '[StoreFinder] View All Stores';\nconst VIEW_ALL_STORES_FAIL = '[StoreFinder] View All Stores Fail';\nconst VIEW_ALL_STORES_SUCCESS = '[StoreFinder] View All Stores Success';\nconst CLEAR_STORE_FINDER_DATA = '[StoreFinder] Clear Data';\nclass ViewAllStores extends StateUtils.LoaderLoadAction {\n    constructor() {\n        super(STORE_FINDER_DATA);\n        this.type = VIEW_ALL_STORES;\n    }\n}\nclass ViewAllStoresFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA, payload);\n        this.payload = payload;\n        this.type = VIEW_ALL_STORES_FAIL;\n    }\n}\nclass ViewAllStoresSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA);\n        this.payload = payload;\n        this.type = VIEW_ALL_STORES_SUCCESS;\n    }\n}\nclass ClearStoreFinderData {\n    constructor() {\n        this.type = CLEAR_STORE_FINDER_DATA;\n    }\n}\n\nvar storeFinderGroup_actions = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        FIND_STORES_ON_HOLD: FIND_STORES_ON_HOLD,\n        FIND_STORES: FIND_STORES,\n        FIND_STORES_FAIL: FIND_STORES_FAIL,\n        FIND_STORES_SUCCESS: FIND_STORES_SUCCESS,\n        FIND_STORE_BY_ID: FIND_STORE_BY_ID,\n        FIND_STORE_BY_ID_FAIL: FIND_STORE_BY_ID_FAIL,\n        FIND_STORE_BY_ID_SUCCESS: FIND_STORE_BY_ID_SUCCESS,\n        FindStoresOnHold: FindStoresOnHold,\n        FindStores: FindStores,\n        FindStoresFail: FindStoresFail,\n        FindStoresSuccess: FindStoresSuccess,\n        FindStoreById: FindStoreById,\n        FindStoreByIdFail: FindStoreByIdFail,\n        FindStoreByIdSuccess: FindStoreByIdSuccess,\n        VIEW_ALL_STORES: VIEW_ALL_STORES,\n        VIEW_ALL_STORES_FAIL: VIEW_ALL_STORES_FAIL,\n        VIEW_ALL_STORES_SUCCESS: VIEW_ALL_STORES_SUCCESS,\n        CLEAR_STORE_FINDER_DATA: CLEAR_STORE_FINDER_DATA,\n        ViewAllStores: ViewAllStores,\n        ViewAllStoresFail: ViewAllStoresFail,\n        ViewAllStoresSuccess: ViewAllStoresSuccess,\n        ClearStoreFinderData: ClearStoreFinderData\n});\n\nconst getStoreFinderState = createFeatureSelector(STORE_FINDER_FEATURE);\n\nconst getFindStoresState = createSelector(getStoreFinderState, (storesState) => storesState.findStores);\nconst getFindStoresEntities = createSelector(getFindStoresState, (state) => StateUtils.loaderValueSelector(state));\nconst getStoresLoading = createSelector(getFindStoresState, (state) => StateUtils.loaderLoadingSelector(state));\nconst getStoresSuccess = createSelector(getFindStoresState, (state) => StateUtils.loaderSuccessSelector(state));\n\nconst getViewAllStoresState = createSelector(getStoreFinderState, (storesState) => storesState.viewAllStores);\nconst getViewAllStoresEntities = createSelector(getViewAllStoresState, (state) => StateUtils.loaderValueSelector(state));\nconst getViewAllStoresLoading = createSelector(getViewAllStoresState, (state) => StateUtils.loaderLoadingSelector(state));\n\nvar storeFinderGroup_selectors = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getFindStoresState: getFindStoresState,\n        getFindStoresEntities: getFindStoresEntities,\n        getStoresLoading: getStoresLoading,\n        getStoresSuccess: getStoresSuccess,\n        getViewAllStoresState: getViewAllStoresState,\n        getViewAllStoresEntities: getViewAllStoresEntities,\n        getViewAllStoresLoading: getViewAllStoresLoading\n});\n\nclass StoreFinderService {\n    constructor(store, winRef, globalMessageService, routingService, platformId) {\n        this.store = store;\n        this.winRef = winRef;\n        this.globalMessageService = globalMessageService;\n        this.routingService = routingService;\n        this.platformId = platformId;\n        this.geolocationWatchId = null;\n        this.subscription = new Subscription();\n        this.reloadStoreEntitiesOnContextChange();\n    }\n    /**\n     * Returns boolean observable for store's loading state\n     */\n    getStoresLoading() {\n        return this.store.pipe(select(getStoresLoading));\n    }\n    /**\n     * Returns boolean observable for store's success state\n     */\n    getStoresLoaded() {\n        return this.store.pipe(select(getStoresSuccess));\n    }\n    /**\n     * Returns observable for store's entities\n     */\n    getFindStoresEntities() {\n        return this.store.pipe(select(getFindStoresEntities), map((data) => data.findStoresEntities));\n    }\n    /**\n     * Returns observable for a single store by Id\n     */\n    getFindStoreEntityById() {\n        return this.store.pipe(select(getFindStoresEntities), map((data) => data.findStoreEntityById));\n    }\n    /**\n     * Returns boolean observable for view all store's loading state\n     */\n    getViewAllStoresLoading() {\n        return this.store.pipe(select(getViewAllStoresLoading));\n    }\n    /**\n     * Returns observable for view all store's entities\n     */\n    getViewAllStoresEntities() {\n        return this.store.pipe(select(getViewAllStoresEntities), map((data) => data.viewAllStoresEntities));\n    }\n    /**\n     * Store finding action functionality\n     * @param queryText text query\n     * @param searchConfig search configuration\n     * @param longitudeLatitude longitude and latitude coordinates\n     * @param countryIsoCode country ISO code\n     * @param useMyLocation current location coordinates\n     * @param radius radius of the scope from the center point\n     */\n    findStoresAction(queryText, searchConfig, longitudeLatitude, countryIsoCode, useMyLocation, radius) {\n        if (useMyLocation && this.winRef.nativeWindow) {\n            this.clearWatchGeolocation(new FindStoresOnHold());\n            this.geolocationWatchId =\n                this.winRef.nativeWindow.navigator.geolocation.watchPosition((pos) => {\n                    const position = {\n                        longitude: pos.coords.longitude,\n                        latitude: pos.coords.latitude,\n                    };\n                    this.clearWatchGeolocation(new FindStores({\n                        queryText: queryText,\n                        searchConfig: searchConfig,\n                        longitudeLatitude: position,\n                        countryIsoCode: countryIsoCode,\n                        radius: radius,\n                    }));\n                }, () => {\n                    this.globalMessageService.add({ key: 'storeFinder.geolocationNotEnabled' }, GlobalMessageType.MSG_TYPE_ERROR);\n                    this.routingService.go(['/store-finder']);\n                });\n        }\n        else {\n            this.clearWatchGeolocation(new FindStores({\n                queryText: queryText,\n                searchConfig: searchConfig,\n                longitudeLatitude: longitudeLatitude,\n                countryIsoCode: countryIsoCode,\n                radius: radius,\n            }));\n        }\n    }\n    /**\n     * View all stores\n     */\n    viewAllStores() {\n        this.clearWatchGeolocation(new ViewAllStores());\n    }\n    /**\n     * View all stores by id\n     * @param storeId store id\n     */\n    viewStoreById(storeId) {\n        this.clearWatchGeolocation(new FindStoreById({ storeId }));\n    }\n    clearWatchGeolocation(callbackAction) {\n        var _a;\n        if (this.geolocationWatchId !== null) {\n            (_a = this.winRef.nativeWindow) === null || _a === void 0 ? void 0 : _a.navigator.geolocation.clearWatch(this.geolocationWatchId);\n            this.geolocationWatchId = null;\n        }\n        this.store.dispatch(callbackAction);\n    }\n    isEmpty(store) {\n        return (!store || (typeof store === 'object' && Object.keys(store).length === 0));\n    }\n    /**\n     * Reload store data when store entities are empty because of the context change\n     */\n    reloadStoreEntitiesOnContextChange() {\n        if (isPlatformBrowser(this.platformId) || !this.platformId) {\n            this.subscription = this.getFindStoresEntities()\n                .pipe(filter((data) => this.isEmpty(data)), withLatestFrom(this.getStoresLoading(), this.getStoresLoaded(), this.routingService.getParams()))\n                .subscribe(([, loading, loaded, routeParams]) => {\n                if (!loading && !loaded) {\n                    if (routeParams.country && !routeParams.store) {\n                        this.callFindStoresAction(routeParams);\n                    }\n                    if (routeParams.store) {\n                        this.viewStoreById(routeParams.store);\n                    }\n                }\n            });\n        }\n    }\n    callFindStoresAction(routeParams) {\n        this.findStoresAction('', {\n            pageSize: -1,\n        }, undefined, routeParams.country);\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n    /**\n     * Returns store latitude\n     * @param location store location\n     */\n    getStoreLatitude(location) {\n        var _a;\n        return (_a = location === null || location === void 0 ? void 0 : location.geoPoint) === null || _a === void 0 ? void 0 : _a.latitude;\n    }\n    /**\n     * Returns store longitude\n     * @param location store location\n     */\n    getStoreLongitude(location) {\n        var _a;\n        return (_a = location === null || location === void 0 ? void 0 : location.geoPoint) === null || _a === void 0 ? void 0 : _a.longitude;\n    }\n}\nStoreFinderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderService, deps: [{ token: i1.Store }, { token: i2.WindowRef }, { token: i2.GlobalMessageService }, { token: i2.RoutingService }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nStoreFinderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Store }, { type: i2.WindowRef }, { type: i2.GlobalMessageService }, { type: i2.RoutingService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\n/// <reference types=\"@types/googlemaps\" />\nclass GoogleMapRendererService {\n    constructor(config, storeFinderService, scriptLoader) {\n        this.config = config;\n        this.storeFinderService = storeFinderService;\n        this.scriptLoader = scriptLoader;\n        this.googleMap = null;\n    }\n    /**\n     * Renders google map on the given element and draws markers on it.\n     * If map already exists it will use an existing map otherwise it will create one\n     * @param mapElement HTML element inside of which the map will be displayed\n     * @param locations array containign geo data to be displayed on the map\n     * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n     */\n    renderMap(mapElement, locations, selectMarkerHandler) {\n        if (Object.entries(locations[Object.keys(locations)[0]]).length > 0)\n            if (this.googleMap === null) {\n                this.scriptLoader.embedScript({\n                    src: this.config.googleMaps.apiUrl,\n                    params: { key: this.config.googleMaps.apiKey },\n                    attributes: { type: 'text/javascript' },\n                    callback: () => {\n                        this.drawMap(mapElement, locations, selectMarkerHandler);\n                    },\n                });\n            }\n            else {\n                this.drawMap(mapElement, locations, selectMarkerHandler);\n            }\n    }\n    /**\n     * Centers the map to the given point\n     * @param latitute latitude of the new center\n     * @param longitude longitude of the new center\n     */\n    centerMap(latitute, longitude) {\n        this.googleMap.panTo({ lat: latitute, lng: longitude });\n        this.googleMap.setZoom(this.config.googleMaps.selectedMarkerScale);\n    }\n    /**\n     * Defines and returns {@link google.maps.LatLng} representing a point where the map will be centered\n     * @param locations list of locations\n     */\n    defineMapCenter(locations) {\n        return new google.maps.LatLng(this.storeFinderService.getStoreLatitude(locations[0]), this.storeFinderService.getStoreLongitude(locations[0]));\n    }\n    /**\n     * Creates google map inside if the given HTML element centered to the given point\n     * @param mapElement {@link HTMLElement} inside of which the map will be created\n     * @param mapCenter {@link google.maps.LatLng} the point where the map will be centered\n     */\n    initMap(mapElement, mapCenter) {\n        const gestureOption = 'greedy';\n        const mapProp = {\n            center: mapCenter,\n            zoom: this.config.googleMaps.scale,\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\n            gestureHandling: gestureOption,\n        };\n        this.googleMap = new google.maps.Map(mapElement, mapProp);\n    }\n    /**\n     * Erases the current map's markers and create a new one based on the given locations\n     * @param locations array of locations to be displayed on the map\n     * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n     */\n    createMarkers(locations, selectMarkerHandler) {\n        this.markers = [];\n        locations.forEach((element, index) => {\n            const marker = new google.maps.Marker({\n                position: new google.maps.LatLng(this.storeFinderService.getStoreLatitude(element), this.storeFinderService.getStoreLongitude(element)),\n                label: index + 1 + '',\n            });\n            this.markers.push(marker);\n            marker.setMap(this.googleMap);\n            marker.addListener('mouseover', function () {\n                marker.setAnimation(google.maps.Animation.BOUNCE);\n            });\n            marker.addListener('mouseout', function () {\n                marker.setAnimation(null);\n            });\n            if (selectMarkerHandler) {\n                marker.addListener('click', function () {\n                    selectMarkerHandler(index);\n                });\n            }\n        });\n    }\n    /**\n     * Initialize and draw the map\n     * @param mapElement {@link HTMLElement} inside of which the map will be drawn\n     * @param locations array of locations to be displayed on the map\n     * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n     */\n    drawMap(mapElement, locations, selectMarkerHandler) {\n        this.initMap(mapElement, this.defineMapCenter(locations));\n        this.createMarkers(locations, selectMarkerHandler);\n    }\n}\nGoogleMapRendererService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: GoogleMapRendererService, deps: [{ token: StoreFinderConfig }, { token: StoreFinderService }, { token: i2.ScriptLoader }], target: i0.ɵɵFactoryTarget.Injectable });\nGoogleMapRendererService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: GoogleMapRendererService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: GoogleMapRendererService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: StoreFinderConfig }, { type: StoreFinderService }, { type: i2.ScriptLoader }]; } });\n\nconst defaultStoreFinderConfig = {\n    googleMaps: {\n        apiUrl: 'https://maps.googleapis.com/maps/api/js',\n        apiKey: '',\n        scale: 5,\n        selectedMarkerScale: 17,\n        radius: 50000,\n    },\n};\n\nconst initialState$1 = {\n    findStoresEntities: {},\n    findStoreEntityById: {},\n};\nfunction findStoresReducer(state = initialState$1, action) {\n    switch (action.type) {\n        case FIND_STORES_SUCCESS: {\n            const findStoresEntities = action.payload;\n            return Object.assign(Object.assign({}, state), { findStoresEntities });\n        }\n        case FIND_STORE_BY_ID_SUCCESS: {\n            const findStoreEntityById = action.payload;\n            return Object.assign(Object.assign({}, state), { findStoreEntityById });\n        }\n    }\n    return state;\n}\n\nconst initialState = {\n    viewAllStoresEntities: {},\n};\nfunction viewAllStoresReducer(state = initialState, action) {\n    switch (action.type) {\n        case VIEW_ALL_STORES_SUCCESS: {\n            const viewAllStoresEntities = action.payload;\n            return Object.assign(Object.assign({}, state), { viewAllStoresEntities });\n        }\n    }\n    return state;\n}\n\nfunction getReducers() {\n    return {\n        findStores: StateUtils.loaderReducer(STORE_FINDER_DATA, findStoresReducer),\n        viewAllStores: StateUtils.loaderReducer(STORE_FINDER_DATA, viewAllStoresReducer),\n    };\n}\nconst reducerToken = new InjectionToken('StoreFinderReducers');\nconst reducerProvider = {\n    provide: reducerToken,\n    useFactory: getReducers,\n};\nfunction clearStoreFinderState(reducer) {\n    return function (state, action) {\n        if (action.type === SiteContextActions.LANGUAGE_CHANGE) {\n            state = undefined;\n        }\n        if (action.type === CLEAR_STORE_FINDER_DATA) {\n            state = undefined;\n        }\n        return reducer(state, action);\n    };\n}\nconst metaReducers = [clearStoreFinderState];\n\nclass FindStoresEffect {\n    constructor(actions$, storeFinderConnector) {\n        this.actions$ = actions$;\n        this.storeFinderConnector = storeFinderConnector;\n        this.findStores$ = this.actions$.pipe(ofType(FIND_STORES), map((action) => action.payload), mergeMap((payload) => this.storeFinderConnector\n            .search(payload.queryText, payload.searchConfig, payload.longitudeLatitude, payload.radius)\n            .pipe(map((data) => {\n            if (payload.countryIsoCode) {\n                data.stores = data.stores.filter((store) => store.address.country.isocode === payload.countryIsoCode);\n                data.stores.sort((a, b) => a.name < b.name ? -1 : a.name > b.name ? 1 : 0);\n            }\n            return new FindStoresSuccess(data);\n        }), catchError((error) => of(new FindStoresFail(normalizeHttpError(error)))))));\n        this.findStoreById$ = this.actions$.pipe(ofType(FIND_STORE_BY_ID), map((action) => action.payload), switchMap((payload) => this.storeFinderConnector.get(payload.storeId).pipe(map((data) => new FindStoreByIdSuccess(data)), catchError((error) => of(new FindStoreByIdFail(normalizeHttpError(error)))))));\n    }\n}\nFindStoresEffect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: FindStoresEffect, deps: [{ token: i1$1.Actions }, { token: StoreFinderConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nFindStoresEffect.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: FindStoresEffect });\n__decorate([\n    Effect()\n], FindStoresEffect.prototype, \"findStores$\", void 0);\n__decorate([\n    Effect()\n], FindStoresEffect.prototype, \"findStoreById$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: FindStoresEffect, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: StoreFinderConnector }]; }, propDecorators: { findStores$: [], findStoreById$: [] } });\n\nclass ViewAllStoresEffect {\n    constructor(actions$, storeFinderConnector) {\n        this.actions$ = actions$;\n        this.storeFinderConnector = storeFinderConnector;\n        this.viewAllStores$ = this.actions$.pipe(ofType(VIEW_ALL_STORES, CLEAR_STORE_FINDER_DATA), switchMap(() => {\n            return this.storeFinderConnector.getCounts().pipe(map((data) => {\n                data.sort((a, b) => (a.name < b.name ? -1 : a.name > b.name ? 1 : 0));\n                return new ViewAllStoresSuccess(data);\n            }), catchError((error) => of(new ViewAllStoresFail(normalizeHttpError(error)))));\n        }));\n        this.clearStoreFinderData$ = this.actions$.pipe(ofType(SiteContextActions.LANGUAGE_CHANGE, SiteContextActions.CURRENCY_CHANGE), map(() => {\n            return new ClearStoreFinderData();\n        }));\n    }\n}\nViewAllStoresEffect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ViewAllStoresEffect, deps: [{ token: i1$1.Actions }, { token: StoreFinderConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nViewAllStoresEffect.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ViewAllStoresEffect });\n__decorate([\n    Effect()\n], ViewAllStoresEffect.prototype, \"viewAllStores$\", void 0);\n__decorate([\n    Effect()\n], ViewAllStoresEffect.prototype, \"clearStoreFinderData$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ViewAllStoresEffect, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: StoreFinderConnector }]; }, propDecorators: { viewAllStores$: [], clearStoreFinderData$: [] } });\n\nconst effects = [FindStoresEffect, ViewAllStoresEffect];\n\nclass StoreFinderStoreModule {\n}\nStoreFinderStoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderStoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nStoreFinderStoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderStoreModule, imports: [CommonModule, i1.StoreFeatureModule, i1$1.EffectsFeatureModule] });\nStoreFinderStoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderStoreModule, providers: [reducerProvider], imports: [[\n            CommonModule,\n            StoreModule.forFeature(STORE_FINDER_FEATURE, reducerToken, {\n                metaReducers,\n            }),\n            EffectsModule.forFeature(effects),\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderStoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        StoreModule.forFeature(STORE_FINDER_FEATURE, reducerToken, {\n                            metaReducers,\n                        }),\n                        EffectsModule.forFeature(effects),\n                    ],\n                    providers: [reducerProvider],\n                }]\n        }] });\n\nclass StoreFinderCoreModule {\n}\nStoreFinderCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nStoreFinderCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderCoreModule, imports: [StoreFinderStoreModule] });\nStoreFinderCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderCoreModule, providers: [\n        provideDefaultConfig(defaultStoreFinderConfig),\n        StoreFinderConnector,\n    ], imports: [[StoreFinderStoreModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderCoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [StoreFinderStoreModule],\n                    providers: [\n                        provideDefaultConfig(defaultStoreFinderConfig),\n                        StoreFinderConnector,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GoogleMapRendererService, STORE_COUNT_NORMALIZER, STORE_FINDER_DATA, STORE_FINDER_FEATURE, STORE_FINDER_SEARCH_PAGE_NORMALIZER, storeFinderGroup_actions as StoreFinderActions, StoreFinderAdapter, StoreFinderConfig, StoreFinderConnector, StoreFinderCoreModule, storeFinderGroup_selectors as StoreFinderSelectors, StoreFinderService };\n//# sourceMappingURL=spartacus-storefinder-core.js.map\n"]},"metadata":{},"sourceType":"module"}