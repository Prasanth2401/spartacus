{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i1 from '@spartacus/core';\nimport { Config, facadeFactory, provideDefaultConfig, provideDefaultConfigFactory, CxEvent } from '@spartacus/core';\nimport { OrderEntriesSource, CmsPageGuard, PageLayoutComponent, ORDER_ENTRIES_CONTEXT } from '@spartacus/storefront';\nimport { HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { take, switchMap, catchError, map } from 'rxjs/operators';\nvar CheckoutStepType;\n\n(function (CheckoutStepType) {\n  CheckoutStepType[\"SHIPPING_ADDRESS\"] = \"shippingAddress\";\n  CheckoutStepType[\"DELIVERY_MODE\"] = \"deliveryMode\";\n  CheckoutStepType[\"PAYMENT_DETAILS\"] = \"paymentDetails\";\n  CheckoutStepType[\"REVIEW_ORDER\"] = \"reviewOrder\";\n  CheckoutStepType[\"PAYMENT_TYPE\"] = \"paymentType\";\n})(CheckoutStepType || (CheckoutStepType = {}));\n\nconst checkoutShippingSteps = [CheckoutStepType.SHIPPING_ADDRESS, CheckoutStepType.DELIVERY_MODE];\nconst checkoutPaymentSteps = [CheckoutStepType.PAYMENT_DETAILS, CheckoutStepType.PAYMENT_TYPE, CheckoutStepType.SHIPPING_ADDRESS];\nvar DeliveryModePreferences;\n\n(function (DeliveryModePreferences) {\n  DeliveryModePreferences[\"FREE\"] = \"FREE\";\n  DeliveryModePreferences[\"LEAST_EXPENSIVE\"] = \"LEAST_EXPENSIVE\";\n  DeliveryModePreferences[\"MOST_EXPENSIVE\"] = \"MOST_EXPENSIVE\";\n})(DeliveryModePreferences || (DeliveryModePreferences = {}));\n\nclass CheckoutConfig {}\n\nCheckoutConfig.ɵfac = function CheckoutConfig_Factory(t) {\n  return new (t || CheckoutConfig)();\n};\n\nCheckoutConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CheckoutConfig,\n  factory: function CheckoutConfig_Factory(t) {\n    let r = null;\n\n    if (t) {\n      r = new (t || CheckoutConfig)();\n    } else {\n      r = i0.ɵɵinject(Config);\n    }\n\n    return r;\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: Config\n    }]\n  }], null, null);\n})();\n\nconst defaultCheckoutConfig = {\n  checkout: {\n    steps: [{\n      id: 'shippingAddress',\n      name: 'checkoutProgress.shippingAddress',\n      routeName: 'checkoutShippingAddress',\n      type: [CheckoutStepType.SHIPPING_ADDRESS]\n    }, {\n      id: 'deliveryMode',\n      name: 'checkoutProgress.deliveryMode',\n      routeName: 'checkoutDeliveryMode',\n      type: [CheckoutStepType.DELIVERY_MODE]\n    }, {\n      id: 'paymentDetails',\n      name: 'checkoutProgress.paymentDetails',\n      routeName: 'checkoutPaymentDetails',\n      type: [CheckoutStepType.PAYMENT_DETAILS]\n    }, {\n      id: 'reviewOrder',\n      name: 'checkoutProgress.reviewOrder',\n      routeName: 'checkoutReviewOrder',\n      type: [CheckoutStepType.REVIEW_ORDER]\n    }],\n    express: false,\n    defaultDeliveryMode: [DeliveryModePreferences.FREE],\n    guest: false\n  }\n};\nconst defaultCheckoutRoutingConfig = {\n  routing: {\n    routes: {\n      checkoutLogin: {\n        paths: ['checkout-login'],\n        authFlow: true\n      },\n      checkout: {\n        paths: ['checkout']\n      },\n      checkoutPaymentType: {\n        paths: ['checkout/payment-type']\n      },\n      checkoutShippingAddress: {\n        paths: ['checkout/shipping-address']\n      },\n      checkoutDeliveryMode: {\n        paths: ['checkout/delivery-mode']\n      },\n      checkoutPaymentDetails: {\n        paths: ['checkout/payment-details']\n      },\n      checkoutReviewOrder: {\n        paths: ['checkout/review-order']\n      },\n      orderConfirmation: {\n        paths: ['order-confirmation']\n      },\n      replenishmentConfirmation: {\n        paths: ['replenishment/confirmation']\n      }\n    }\n  }\n};\nconst CHECKOUT_FEATURE = 'checkout';\nconst CHECKOUT_CORE_FEATURE = 'checkoutCore';\n/**\n * Interceptor that handles \"Cart not found\" errors while a user is in a checkout step.\n *\n * When a user doing a checkout has a \"Cart not found\" error, he is redirected to checkout and the cart is reloaded.\n * If a \"Cart not found\" error happens and the user is not on checkout, this interceptor does not perform any actions.\n */\n\nclass CheckoutCartInterceptor {\n  constructor(routingService, multiCartService) {\n    this.routingService = routingService;\n    this.multiCartService = multiCartService;\n  }\n\n  intercept(request, next) {\n    return this.routingService.getRouterState().pipe(take(1), switchMap(state => {\n      return next.handle(request).pipe(catchError(response => {\n        var _a;\n\n        if (response instanceof HttpErrorResponse && this.isUserInCheckoutRoute((_a = state.state) === null || _a === void 0 ? void 0 : _a.semanticRoute)) {\n          if (this.isCartNotFoundError(response)) {\n            this.routingService.go({\n              cxRoute: 'cart'\n            });\n            const cartCode = this.getCartIdFromError(response);\n\n            if (cartCode) {\n              this.multiCartService.reloadCart(cartCode);\n            }\n          }\n        }\n\n        return throwError(response);\n      }));\n    }));\n  }\n  /**\n   * Returns true if the parameter semantic route is part of \"checkout\"\n   * Checkout semantic routes:\n   * checkout\n   * checkoutPaymentType\n   * CheckoutShippingAddress\n   * checkoutDeliveryMode\n   * checkoutPaymentDetails\n   * checkoutReviewOrder\n   * checkoutLogin\n   * @param semanticRoute\n   */\n\n\n  isUserInCheckoutRoute(semanticRoute) {\n    var _a;\n\n    return (_a = semanticRoute === null || semanticRoute === void 0 ? void 0 : semanticRoute.toLowerCase().startsWith('checkout')) !== null && _a !== void 0 ? _a : false;\n  }\n  /**\n   * Checks of the error is for a cart not found, i.e. the cart doesn't exist anymore\n   *\n   * @param response\n   */\n\n\n  isCartNotFoundError(response) {\n    var _a, _b, _c, _d, _e, _f;\n\n    return response.status === 400 && ((_c = (_b = (_a = response.error) === null || _a === void 0 ? void 0 : _a.errors) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.type) === 'CartError' && ((_f = (_e = (_d = response.error) === null || _d === void 0 ? void 0 : _d.errors) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.reason) === 'notFound';\n  }\n\n  getCartIdFromError(response) {\n    var _a, _b, _c;\n\n    return (_c = (_b = (_a = response.error) === null || _a === void 0 ? void 0 : _a.errors) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.subject;\n  }\n\n}\n\nCheckoutCartInterceptor.ɵfac = function CheckoutCartInterceptor_Factory(t) {\n  return new (t || CheckoutCartInterceptor)(i0.ɵɵinject(i1.RoutingService), i0.ɵɵinject(i1.MultiCartService));\n};\n\nCheckoutCartInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CheckoutCartInterceptor,\n  factory: CheckoutCartInterceptor.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutCartInterceptor, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.RoutingService\n    }, {\n      type: i1.MultiCartService\n    }];\n  }, null);\n})();\n\nconst interceptors = [{\n  provide: HTTP_INTERCEPTORS,\n  useExisting: CheckoutCartInterceptor,\n  multi: true\n}];\n\nclass CheckoutFacade {}\n\nCheckoutFacade.ɵfac = function CheckoutFacade_Factory(t) {\n  return new (t || CheckoutFacade)();\n};\n\nCheckoutFacade.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CheckoutFacade,\n  factory: function () {\n    return (() => facadeFactory({\n      facade: CheckoutFacade,\n      feature: CHECKOUT_CORE_FEATURE,\n      methods: ['placeOrder', 'scheduleReplenishmentOrder', 'getPlaceOrderLoading', 'getPlaceOrderSuccess', 'getPlaceOrderError', 'clearPlaceOrderState', 'clearCheckoutData', 'clearCheckoutStep', 'loadCheckoutDetails', 'getCheckoutDetailsLoaded', 'isLoading', 'getOrderDetails', 'setOrderType', 'getCurrentOrderType'],\n      async: true\n    }))();\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutFacade, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => facadeFactory({\n        facade: CheckoutFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['placeOrder', 'scheduleReplenishmentOrder', 'getPlaceOrderLoading', 'getPlaceOrderSuccess', 'getPlaceOrderError', 'clearPlaceOrderState', 'clearCheckoutData', 'clearCheckoutStep', 'loadCheckoutDetails', 'getCheckoutDetailsLoaded', 'isLoading', 'getOrderDetails', 'setOrderType', 'getCurrentOrderType'],\n        async: true\n      })\n    }]\n  }], null, null);\n})();\n\nclass OrderConfirmationOrderEntriesContext {\n  constructor(checkoutService) {\n    this.checkoutService = checkoutService;\n    this.type = OrderEntriesSource.ORDER_CONFIRMATION;\n  }\n\n  getEntries() {\n    return this.checkoutService.getOrderDetails().pipe(map(order => {\n      var _a;\n\n      return (_a = order === null || order === void 0 ? void 0 : order.entries) !== null && _a !== void 0 ? _a : [];\n    }));\n  }\n\n}\n\nOrderConfirmationOrderEntriesContext.ɵfac = function OrderConfirmationOrderEntriesContext_Factory(t) {\n  return new (t || OrderConfirmationOrderEntriesContext)(i0.ɵɵinject(CheckoutFacade));\n};\n\nOrderConfirmationOrderEntriesContext.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrderConfirmationOrderEntriesContext,\n  factory: OrderConfirmationOrderEntriesContext.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrderConfirmationOrderEntriesContext, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: CheckoutFacade\n    }];\n  }, null);\n})();\n\nfunction defaultCheckoutComponentsConfig() {\n  const config = {\n    featureModules: {\n      [CHECKOUT_FEATURE]: {\n        cmsComponents: ['CheckoutOrchestrator', 'CheckoutOrderSummary', 'CheckoutProgress', 'CheckoutProgressMobileBottom', 'CheckoutProgressMobileTop', 'CheckoutCostCenterComponent', 'CheckoutDeliveryMode', 'CheckoutPaymentDetails', 'CheckoutPaymentType', 'CheckoutPlaceOrder', 'CheckoutReviewOrder', 'CheckoutScheduleReplenishmentOrder', 'CheckoutShippingAddress', 'GuestCheckoutLoginComponent', 'OrderConfirmationThankMessageComponent', 'OrderConfirmationItemsComponent', 'OrderConfirmationTotalsComponent', 'OrderConfirmationOverviewComponent', 'ReplenishmentConfirmationMessageComponent', 'ReplenishmentConfirmationOverviewComponent', 'ReplenishmentConfirmationItemsComponent', 'ReplenishmentConfirmationTotalsComponent']\n      },\n      // by default core is bundled together with components\n      [CHECKOUT_CORE_FEATURE]: CHECKOUT_FEATURE\n    }\n  };\n  return config;\n}\n\nclass CheckoutRootModule {}\n\nCheckoutRootModule.ɵfac = function CheckoutRootModule_Factory(t) {\n  return new (t || CheckoutRootModule)();\n};\n\nCheckoutRootModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CheckoutRootModule\n});\nCheckoutRootModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [...interceptors, provideDefaultConfig(defaultCheckoutRoutingConfig), provideDefaultConfig(defaultCheckoutConfig), provideDefaultConfigFactory(defaultCheckoutComponentsConfig)],\n  imports: [[RouterModule.forChild([{\n    // @ts-ignore\n    path: null,\n    canActivate: [CmsPageGuard],\n    component: PageLayoutComponent,\n    data: {\n      cxRoute: 'orderConfirmation',\n      cxContext: {\n        [ORDER_ENTRIES_CONTEXT]: OrderConfirmationOrderEntriesContext\n      }\n    }\n  }])]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutRootModule, [{\n    type: NgModule,\n    args: [{\n      imports: [RouterModule.forChild([{\n        // @ts-ignore\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderConfirmation',\n          cxContext: {\n            [ORDER_ENTRIES_CONTEXT]: OrderConfirmationOrderEntriesContext\n          }\n        }\n      }])],\n      providers: [...interceptors, provideDefaultConfig(defaultCheckoutRoutingConfig), provideDefaultConfig(defaultCheckoutConfig), provideDefaultConfigFactory(defaultCheckoutComponentsConfig)]\n    }]\n  }], null, null);\n})();\n/**\n * Indicates that a user has successfully placed an order\n */\n\n\nclass OrderPlacedEvent extends CxEvent {}\n/**\n * Event's type\n */\n\n\nOrderPlacedEvent.type = 'OrderPlacedEvent';\n\nclass CheckoutCostCenterFacade {}\n\nCheckoutCostCenterFacade.ɵfac = function CheckoutCostCenterFacade_Factory(t) {\n  return new (t || CheckoutCostCenterFacade)();\n};\n\nCheckoutCostCenterFacade.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CheckoutCostCenterFacade,\n  factory: function () {\n    return (() => facadeFactory({\n      facade: CheckoutCostCenterFacade,\n      feature: CHECKOUT_CORE_FEATURE,\n      methods: ['setCostCenter', 'getCostCenter'],\n      async: true\n    }))();\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutCostCenterFacade, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => facadeFactory({\n        facade: CheckoutCostCenterFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['setCostCenter', 'getCostCenter'],\n        async: true\n      })\n    }]\n  }], null, null);\n})();\n\nclass CheckoutDeliveryFacade {}\n\nCheckoutDeliveryFacade.ɵfac = function CheckoutDeliveryFacade_Factory(t) {\n  return new (t || CheckoutDeliveryFacade)();\n};\n\nCheckoutDeliveryFacade.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CheckoutDeliveryFacade,\n  factory: function () {\n    return (() => facadeFactory({\n      facade: CheckoutDeliveryFacade,\n      feature: CHECKOUT_CORE_FEATURE,\n      methods: ['getSupportedDeliveryModes', 'getSelectedDeliveryMode', 'getSelectedDeliveryModeCode', 'getDeliveryAddress', 'getSetDeliveryAddressProcess', 'resetSetDeliveryAddressProcess', 'getSetDeliveryModeProcess', 'resetSetDeliveryModeProcess', 'resetLoadSupportedDeliveryModesProcess', 'getLoadSupportedDeliveryModeProcess', 'clearCheckoutDeliveryModes', 'createAndSetAddress', 'loadSupportedDeliveryModes', 'setDeliveryMode', 'setDeliveryAddress', 'clearCheckoutDeliveryAddress', 'clearCheckoutDeliveryMode', 'clearCheckoutDeliveryDetails'],\n      async: true\n    }))();\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutDeliveryFacade, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => facadeFactory({\n        facade: CheckoutDeliveryFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['getSupportedDeliveryModes', 'getSelectedDeliveryMode', 'getSelectedDeliveryModeCode', 'getDeliveryAddress', 'getSetDeliveryAddressProcess', 'resetSetDeliveryAddressProcess', 'getSetDeliveryModeProcess', 'resetSetDeliveryModeProcess', 'resetLoadSupportedDeliveryModesProcess', 'getLoadSupportedDeliveryModeProcess', 'clearCheckoutDeliveryModes', 'createAndSetAddress', 'loadSupportedDeliveryModes', 'setDeliveryMode', 'setDeliveryAddress', 'clearCheckoutDeliveryAddress', 'clearCheckoutDeliveryMode', 'clearCheckoutDeliveryDetails'],\n        async: true\n      })\n    }]\n  }], null, null);\n})();\n\nclass CheckoutPaymentFacade {}\n\nCheckoutPaymentFacade.ɵfac = function CheckoutPaymentFacade_Factory(t) {\n  return new (t || CheckoutPaymentFacade)();\n};\n\nCheckoutPaymentFacade.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CheckoutPaymentFacade,\n  factory: function () {\n    return (() => facadeFactory({\n      facade: CheckoutPaymentFacade,\n      feature: CHECKOUT_CORE_FEATURE,\n      methods: ['getCardTypes', 'getPaymentDetails', 'getSetPaymentDetailsResultProcess', 'resetSetPaymentDetailsProcess', 'loadSupportedCardTypes', 'createPaymentDetails', 'setPaymentDetails', 'paymentProcessSuccess'],\n      async: true\n    }))();\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutPaymentFacade, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => facadeFactory({\n        facade: CheckoutPaymentFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['getCardTypes', 'getPaymentDetails', 'getSetPaymentDetailsResultProcess', 'resetSetPaymentDetailsProcess', 'loadSupportedCardTypes', 'createPaymentDetails', 'setPaymentDetails', 'paymentProcessSuccess'],\n        async: true\n      })\n    }]\n  }], null, null);\n})();\n\nclass ClearCheckoutFacade {}\n\nClearCheckoutFacade.ɵfac = function ClearCheckoutFacade_Factory(t) {\n  return new (t || ClearCheckoutFacade)();\n};\n\nClearCheckoutFacade.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ClearCheckoutFacade,\n  factory: function () {\n    return (() => facadeFactory({\n      facade: ClearCheckoutFacade,\n      feature: CHECKOUT_CORE_FEATURE,\n      methods: ['resetCheckoutProcesses'],\n      async: true\n    }))();\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ClearCheckoutFacade, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => facadeFactory({\n        facade: ClearCheckoutFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['resetCheckoutProcesses'],\n        async: true\n      })\n    }]\n  }], null, null);\n})();\n\nclass PaymentTypeFacade {}\n\nPaymentTypeFacade.ɵfac = function PaymentTypeFacade_Factory(t) {\n  return new (t || PaymentTypeFacade)();\n};\n\nPaymentTypeFacade.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PaymentTypeFacade,\n  factory: function () {\n    return (() => facadeFactory({\n      facade: PaymentTypeFacade,\n      feature: CHECKOUT_CORE_FEATURE,\n      methods: ['getPaymentTypes', 'loadPaymentTypes', 'setPaymentType', 'getSelectedPaymentType', 'isAccountPayment', 'getPoNumber'],\n      async: true\n    }))();\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaymentTypeFacade, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => facadeFactory({\n        facade: PaymentTypeFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['getPaymentTypes', 'loadPaymentTypes', 'setPaymentType', 'getSelectedPaymentType', 'isAccountPayment', 'getPoNumber'],\n        async: true\n      })\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CHECKOUT_CORE_FEATURE, CHECKOUT_FEATURE, CheckoutConfig, CheckoutCostCenterFacade, CheckoutDeliveryFacade, CheckoutFacade, CheckoutPaymentFacade, CheckoutRootModule, CheckoutStepType, ClearCheckoutFacade, DeliveryModePreferences, OrderConfirmationOrderEntriesContext, OrderPlacedEvent, PaymentTypeFacade, checkoutPaymentSteps, checkoutShippingSteps, defaultCheckoutComponentsConfig }; //# sourceMappingURL=spartacus-checkout-root.js.map","map":{"version":3,"sources":["D:/spartacus/front-store/node_modules/@spartacus/checkout/fesm2015/spartacus-checkout-root.js"],"names":["i0","Injectable","NgModule","i1$1","RouterModule","i1","Config","facadeFactory","provideDefaultConfig","provideDefaultConfigFactory","CxEvent","OrderEntriesSource","CmsPageGuard","PageLayoutComponent","ORDER_ENTRIES_CONTEXT","HttpErrorResponse","HTTP_INTERCEPTORS","throwError","take","switchMap","catchError","map","CheckoutStepType","checkoutShippingSteps","SHIPPING_ADDRESS","DELIVERY_MODE","checkoutPaymentSteps","PAYMENT_DETAILS","PAYMENT_TYPE","DeliveryModePreferences","CheckoutConfig","ɵfac","ɵprov","type","args","providedIn","useExisting","defaultCheckoutConfig","checkout","steps","id","name","routeName","REVIEW_ORDER","express","defaultDeliveryMode","FREE","guest","defaultCheckoutRoutingConfig","routing","routes","checkoutLogin","paths","authFlow","checkoutPaymentType","checkoutShippingAddress","checkoutDeliveryMode","checkoutPaymentDetails","checkoutReviewOrder","orderConfirmation","replenishmentConfirmation","CHECKOUT_FEATURE","CHECKOUT_CORE_FEATURE","CheckoutCartInterceptor","constructor","routingService","multiCartService","intercept","request","next","getRouterState","pipe","state","handle","response","_a","isUserInCheckoutRoute","semanticRoute","isCartNotFoundError","go","cxRoute","cartCode","getCartIdFromError","reloadCart","toLowerCase","startsWith","_b","_c","_d","_e","_f","status","error","errors","reason","subject","RoutingService","MultiCartService","interceptors","provide","multi","CheckoutFacade","facade","feature","methods","async","useFactory","OrderConfirmationOrderEntriesContext","checkoutService","ORDER_CONFIRMATION","getEntries","getOrderDetails","order","entries","defaultCheckoutComponentsConfig","config","featureModules","cmsComponents","CheckoutRootModule","ɵmod","ɵinj","forChild","path","canActivate","component","data","cxContext","imports","providers","OrderPlacedEvent","CheckoutCostCenterFacade","CheckoutDeliveryFacade","CheckoutPaymentFacade","ClearCheckoutFacade","PaymentTypeFacade"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i1 from '@spartacus/core';\nimport { Config, facadeFactory, provideDefaultConfig, provideDefaultConfigFactory, CxEvent } from '@spartacus/core';\nimport { OrderEntriesSource, CmsPageGuard, PageLayoutComponent, ORDER_ENTRIES_CONTEXT } from '@spartacus/storefront';\nimport { HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { take, switchMap, catchError, map } from 'rxjs/operators';\n\nvar CheckoutStepType;\n(function (CheckoutStepType) {\n    CheckoutStepType[\"SHIPPING_ADDRESS\"] = \"shippingAddress\";\n    CheckoutStepType[\"DELIVERY_MODE\"] = \"deliveryMode\";\n    CheckoutStepType[\"PAYMENT_DETAILS\"] = \"paymentDetails\";\n    CheckoutStepType[\"REVIEW_ORDER\"] = \"reviewOrder\";\n    CheckoutStepType[\"PAYMENT_TYPE\"] = \"paymentType\";\n})(CheckoutStepType || (CheckoutStepType = {}));\nconst checkoutShippingSteps = [\n    CheckoutStepType.SHIPPING_ADDRESS,\n    CheckoutStepType.DELIVERY_MODE,\n];\nconst checkoutPaymentSteps = [\n    CheckoutStepType.PAYMENT_DETAILS,\n    CheckoutStepType.PAYMENT_TYPE,\n    CheckoutStepType.SHIPPING_ADDRESS,\n];\n\nvar DeliveryModePreferences;\n(function (DeliveryModePreferences) {\n    DeliveryModePreferences[\"FREE\"] = \"FREE\";\n    DeliveryModePreferences[\"LEAST_EXPENSIVE\"] = \"LEAST_EXPENSIVE\";\n    DeliveryModePreferences[\"MOST_EXPENSIVE\"] = \"MOST_EXPENSIVE\";\n})(DeliveryModePreferences || (DeliveryModePreferences = {}));\nclass CheckoutConfig {\n}\nCheckoutConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nCheckoutConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutConfig, providedIn: 'root', useExisting: Config });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useExisting: Config,\n                }]\n        }] });\n\nconst defaultCheckoutConfig = {\n    checkout: {\n        steps: [\n            {\n                id: 'shippingAddress',\n                name: 'checkoutProgress.shippingAddress',\n                routeName: 'checkoutShippingAddress',\n                type: [CheckoutStepType.SHIPPING_ADDRESS],\n            },\n            {\n                id: 'deliveryMode',\n                name: 'checkoutProgress.deliveryMode',\n                routeName: 'checkoutDeliveryMode',\n                type: [CheckoutStepType.DELIVERY_MODE],\n            },\n            {\n                id: 'paymentDetails',\n                name: 'checkoutProgress.paymentDetails',\n                routeName: 'checkoutPaymentDetails',\n                type: [CheckoutStepType.PAYMENT_DETAILS],\n            },\n            {\n                id: 'reviewOrder',\n                name: 'checkoutProgress.reviewOrder',\n                routeName: 'checkoutReviewOrder',\n                type: [CheckoutStepType.REVIEW_ORDER],\n            },\n        ],\n        express: false,\n        defaultDeliveryMode: [DeliveryModePreferences.FREE],\n        guest: false,\n    },\n};\n\nconst defaultCheckoutRoutingConfig = {\n    routing: {\n        routes: {\n            checkoutLogin: { paths: ['checkout-login'], authFlow: true },\n            checkout: { paths: ['checkout'] },\n            checkoutPaymentType: { paths: ['checkout/payment-type'] },\n            checkoutShippingAddress: { paths: ['checkout/shipping-address'] },\n            checkoutDeliveryMode: { paths: ['checkout/delivery-mode'] },\n            checkoutPaymentDetails: { paths: ['checkout/payment-details'] },\n            checkoutReviewOrder: { paths: ['checkout/review-order'] },\n            orderConfirmation: { paths: ['order-confirmation'] },\n            replenishmentConfirmation: { paths: ['replenishment/confirmation'] },\n        },\n    },\n};\n\nconst CHECKOUT_FEATURE = 'checkout';\nconst CHECKOUT_CORE_FEATURE = 'checkoutCore';\n\n/**\n * Interceptor that handles \"Cart not found\" errors while a user is in a checkout step.\n *\n * When a user doing a checkout has a \"Cart not found\" error, he is redirected to checkout and the cart is reloaded.\n * If a \"Cart not found\" error happens and the user is not on checkout, this interceptor does not perform any actions.\n */\nclass CheckoutCartInterceptor {\n    constructor(routingService, multiCartService) {\n        this.routingService = routingService;\n        this.multiCartService = multiCartService;\n    }\n    intercept(request, next) {\n        return this.routingService.getRouterState().pipe(take(1), switchMap((state) => {\n            return next.handle(request).pipe(catchError((response) => {\n                var _a;\n                if (response instanceof HttpErrorResponse &&\n                    this.isUserInCheckoutRoute((_a = state.state) === null || _a === void 0 ? void 0 : _a.semanticRoute)) {\n                    if (this.isCartNotFoundError(response)) {\n                        this.routingService.go({ cxRoute: 'cart' });\n                        const cartCode = this.getCartIdFromError(response);\n                        if (cartCode) {\n                            this.multiCartService.reloadCart(cartCode);\n                        }\n                    }\n                }\n                return throwError(response);\n            }));\n        }));\n    }\n    /**\n     * Returns true if the parameter semantic route is part of \"checkout\"\n     * Checkout semantic routes:\n     * checkout\n     * checkoutPaymentType\n     * CheckoutShippingAddress\n     * checkoutDeliveryMode\n     * checkoutPaymentDetails\n     * checkoutReviewOrder\n     * checkoutLogin\n     * @param semanticRoute\n     */\n    isUserInCheckoutRoute(semanticRoute) {\n        var _a;\n        return (_a = semanticRoute === null || semanticRoute === void 0 ? void 0 : semanticRoute.toLowerCase().startsWith('checkout')) !== null && _a !== void 0 ? _a : false;\n    }\n    /**\n     * Checks of the error is for a cart not found, i.e. the cart doesn't exist anymore\n     *\n     * @param response\n     */\n    isCartNotFoundError(response) {\n        var _a, _b, _c, _d, _e, _f;\n        return (response.status === 400 &&\n            ((_c = (_b = (_a = response.error) === null || _a === void 0 ? void 0 : _a.errors) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.type) === 'CartError' &&\n            ((_f = (_e = (_d = response.error) === null || _d === void 0 ? void 0 : _d.errors) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.reason) === 'notFound');\n    }\n    getCartIdFromError(response) {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = response.error) === null || _a === void 0 ? void 0 : _a.errors) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.subject;\n    }\n}\nCheckoutCartInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutCartInterceptor, deps: [{ token: i1.RoutingService }, { token: i1.MultiCartService }], target: i0.ɵɵFactoryTarget.Injectable });\nCheckoutCartInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutCartInterceptor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutCartInterceptor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.RoutingService }, { type: i1.MultiCartService }]; } });\n\nconst interceptors = [\n    {\n        provide: HTTP_INTERCEPTORS,\n        useExisting: CheckoutCartInterceptor,\n        multi: true,\n    },\n];\n\nclass CheckoutFacade {\n}\nCheckoutFacade.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutFacade, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nCheckoutFacade.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutFacade, providedIn: 'root', useFactory: () => facadeFactory({\n        facade: CheckoutFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: [\n            'placeOrder',\n            'scheduleReplenishmentOrder',\n            'getPlaceOrderLoading',\n            'getPlaceOrderSuccess',\n            'getPlaceOrderError',\n            'clearPlaceOrderState',\n            'clearCheckoutData',\n            'clearCheckoutStep',\n            'loadCheckoutDetails',\n            'getCheckoutDetailsLoaded',\n            'isLoading',\n            'getOrderDetails',\n            'setOrderType',\n            'getCurrentOrderType',\n        ],\n        async: true,\n    }) });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutFacade, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => facadeFactory({\n                        facade: CheckoutFacade,\n                        feature: CHECKOUT_CORE_FEATURE,\n                        methods: [\n                            'placeOrder',\n                            'scheduleReplenishmentOrder',\n                            'getPlaceOrderLoading',\n                            'getPlaceOrderSuccess',\n                            'getPlaceOrderError',\n                            'clearPlaceOrderState',\n                            'clearCheckoutData',\n                            'clearCheckoutStep',\n                            'loadCheckoutDetails',\n                            'getCheckoutDetailsLoaded',\n                            'isLoading',\n                            'getOrderDetails',\n                            'setOrderType',\n                            'getCurrentOrderType',\n                        ],\n                        async: true,\n                    }),\n                }]\n        }] });\n\nclass OrderConfirmationOrderEntriesContext {\n    constructor(checkoutService) {\n        this.checkoutService = checkoutService;\n        this.type = OrderEntriesSource.ORDER_CONFIRMATION;\n    }\n    getEntries() {\n        return this.checkoutService\n            .getOrderDetails()\n            .pipe(map((order) => { var _a; return (_a = order === null || order === void 0 ? void 0 : order.entries) !== null && _a !== void 0 ? _a : []; }));\n    }\n}\nOrderConfirmationOrderEntriesContext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderConfirmationOrderEntriesContext, deps: [{ token: CheckoutFacade }], target: i0.ɵɵFactoryTarget.Injectable });\nOrderConfirmationOrderEntriesContext.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderConfirmationOrderEntriesContext, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderConfirmationOrderEntriesContext, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: CheckoutFacade }]; } });\n\nfunction defaultCheckoutComponentsConfig() {\n    const config = {\n        featureModules: {\n            [CHECKOUT_FEATURE]: {\n                cmsComponents: [\n                    'CheckoutOrchestrator',\n                    'CheckoutOrderSummary',\n                    'CheckoutProgress',\n                    'CheckoutProgressMobileBottom',\n                    'CheckoutProgressMobileTop',\n                    'CheckoutCostCenterComponent',\n                    'CheckoutDeliveryMode',\n                    'CheckoutPaymentDetails',\n                    'CheckoutPaymentType',\n                    'CheckoutPlaceOrder',\n                    'CheckoutReviewOrder',\n                    'CheckoutScheduleReplenishmentOrder',\n                    'CheckoutShippingAddress',\n                    'GuestCheckoutLoginComponent',\n                    'OrderConfirmationThankMessageComponent',\n                    'OrderConfirmationItemsComponent',\n                    'OrderConfirmationTotalsComponent',\n                    'OrderConfirmationOverviewComponent',\n                    'ReplenishmentConfirmationMessageComponent',\n                    'ReplenishmentConfirmationOverviewComponent',\n                    'ReplenishmentConfirmationItemsComponent',\n                    'ReplenishmentConfirmationTotalsComponent',\n                ],\n            },\n            // by default core is bundled together with components\n            [CHECKOUT_CORE_FEATURE]: CHECKOUT_FEATURE,\n        },\n    };\n    return config;\n}\nclass CheckoutRootModule {\n}\nCheckoutRootModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutRootModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCheckoutRootModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutRootModule, imports: [i1$1.RouterModule] });\nCheckoutRootModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutRootModule, providers: [\n        ...interceptors,\n        provideDefaultConfig(defaultCheckoutRoutingConfig),\n        provideDefaultConfig(defaultCheckoutConfig),\n        provideDefaultConfigFactory(defaultCheckoutComponentsConfig),\n    ], imports: [[\n            RouterModule.forChild([\n                {\n                    // @ts-ignore\n                    path: null,\n                    canActivate: [CmsPageGuard],\n                    component: PageLayoutComponent,\n                    data: {\n                        cxRoute: 'orderConfirmation',\n                        cxContext: {\n                            [ORDER_ENTRIES_CONTEXT]: OrderConfirmationOrderEntriesContext,\n                        },\n                    },\n                },\n            ]),\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutRootModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        RouterModule.forChild([\n                            {\n                                // @ts-ignore\n                                path: null,\n                                canActivate: [CmsPageGuard],\n                                component: PageLayoutComponent,\n                                data: {\n                                    cxRoute: 'orderConfirmation',\n                                    cxContext: {\n                                        [ORDER_ENTRIES_CONTEXT]: OrderConfirmationOrderEntriesContext,\n                                    },\n                                },\n                            },\n                        ]),\n                    ],\n                    providers: [\n                        ...interceptors,\n                        provideDefaultConfig(defaultCheckoutRoutingConfig),\n                        provideDefaultConfig(defaultCheckoutConfig),\n                        provideDefaultConfigFactory(defaultCheckoutComponentsConfig),\n                    ],\n                }]\n        }] });\n\n/**\n * Indicates that a user has successfully placed an order\n */\nclass OrderPlacedEvent extends CxEvent {\n}\n/**\n * Event's type\n */\nOrderPlacedEvent.type = 'OrderPlacedEvent';\n\nclass CheckoutCostCenterFacade {\n}\nCheckoutCostCenterFacade.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutCostCenterFacade, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nCheckoutCostCenterFacade.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutCostCenterFacade, providedIn: 'root', useFactory: () => facadeFactory({\n        facade: CheckoutCostCenterFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['setCostCenter', 'getCostCenter'],\n        async: true,\n    }) });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutCostCenterFacade, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => facadeFactory({\n                        facade: CheckoutCostCenterFacade,\n                        feature: CHECKOUT_CORE_FEATURE,\n                        methods: ['setCostCenter', 'getCostCenter'],\n                        async: true,\n                    }),\n                }]\n        }] });\n\nclass CheckoutDeliveryFacade {\n}\nCheckoutDeliveryFacade.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutDeliveryFacade, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nCheckoutDeliveryFacade.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutDeliveryFacade, providedIn: 'root', useFactory: () => facadeFactory({\n        facade: CheckoutDeliveryFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: [\n            'getSupportedDeliveryModes',\n            'getSelectedDeliveryMode',\n            'getSelectedDeliveryModeCode',\n            'getDeliveryAddress',\n            'getSetDeliveryAddressProcess',\n            'resetSetDeliveryAddressProcess',\n            'getSetDeliveryModeProcess',\n            'resetSetDeliveryModeProcess',\n            'resetLoadSupportedDeliveryModesProcess',\n            'getLoadSupportedDeliveryModeProcess',\n            'clearCheckoutDeliveryModes',\n            'createAndSetAddress',\n            'loadSupportedDeliveryModes',\n            'setDeliveryMode',\n            'setDeliveryAddress',\n            'clearCheckoutDeliveryAddress',\n            'clearCheckoutDeliveryMode',\n            'clearCheckoutDeliveryDetails',\n        ],\n        async: true,\n    }) });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutDeliveryFacade, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => facadeFactory({\n                        facade: CheckoutDeliveryFacade,\n                        feature: CHECKOUT_CORE_FEATURE,\n                        methods: [\n                            'getSupportedDeliveryModes',\n                            'getSelectedDeliveryMode',\n                            'getSelectedDeliveryModeCode',\n                            'getDeliveryAddress',\n                            'getSetDeliveryAddressProcess',\n                            'resetSetDeliveryAddressProcess',\n                            'getSetDeliveryModeProcess',\n                            'resetSetDeliveryModeProcess',\n                            'resetLoadSupportedDeliveryModesProcess',\n                            'getLoadSupportedDeliveryModeProcess',\n                            'clearCheckoutDeliveryModes',\n                            'createAndSetAddress',\n                            'loadSupportedDeliveryModes',\n                            'setDeliveryMode',\n                            'setDeliveryAddress',\n                            'clearCheckoutDeliveryAddress',\n                            'clearCheckoutDeliveryMode',\n                            'clearCheckoutDeliveryDetails',\n                        ],\n                        async: true,\n                    }),\n                }]\n        }] });\n\nclass CheckoutPaymentFacade {\n}\nCheckoutPaymentFacade.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutPaymentFacade, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nCheckoutPaymentFacade.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutPaymentFacade, providedIn: 'root', useFactory: () => facadeFactory({\n        facade: CheckoutPaymentFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: [\n            'getCardTypes',\n            'getPaymentDetails',\n            'getSetPaymentDetailsResultProcess',\n            'resetSetPaymentDetailsProcess',\n            'loadSupportedCardTypes',\n            'createPaymentDetails',\n            'setPaymentDetails',\n            'paymentProcessSuccess',\n        ],\n        async: true,\n    }) });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckoutPaymentFacade, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => facadeFactory({\n                        facade: CheckoutPaymentFacade,\n                        feature: CHECKOUT_CORE_FEATURE,\n                        methods: [\n                            'getCardTypes',\n                            'getPaymentDetails',\n                            'getSetPaymentDetailsResultProcess',\n                            'resetSetPaymentDetailsProcess',\n                            'loadSupportedCardTypes',\n                            'createPaymentDetails',\n                            'setPaymentDetails',\n                            'paymentProcessSuccess',\n                        ],\n                        async: true,\n                    }),\n                }]\n        }] });\n\nclass ClearCheckoutFacade {\n}\nClearCheckoutFacade.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ClearCheckoutFacade, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nClearCheckoutFacade.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ClearCheckoutFacade, providedIn: 'root', useFactory: () => facadeFactory({\n        facade: ClearCheckoutFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['resetCheckoutProcesses'],\n        async: true,\n    }) });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ClearCheckoutFacade, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => facadeFactory({\n                        facade: ClearCheckoutFacade,\n                        feature: CHECKOUT_CORE_FEATURE,\n                        methods: ['resetCheckoutProcesses'],\n                        async: true,\n                    }),\n                }]\n        }] });\n\nclass PaymentTypeFacade {\n}\nPaymentTypeFacade.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PaymentTypeFacade, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nPaymentTypeFacade.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PaymentTypeFacade, providedIn: 'root', useFactory: () => facadeFactory({\n        facade: PaymentTypeFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: [\n            'getPaymentTypes',\n            'loadPaymentTypes',\n            'setPaymentType',\n            'getSelectedPaymentType',\n            'isAccountPayment',\n            'getPoNumber',\n        ],\n        async: true,\n    }) });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PaymentTypeFacade, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => facadeFactory({\n                        facade: PaymentTypeFacade,\n                        feature: CHECKOUT_CORE_FEATURE,\n                        methods: [\n                            'getPaymentTypes',\n                            'loadPaymentTypes',\n                            'setPaymentType',\n                            'getSelectedPaymentType',\n                            'isAccountPayment',\n                            'getPoNumber',\n                        ],\n                        async: true,\n                    }),\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CHECKOUT_CORE_FEATURE, CHECKOUT_FEATURE, CheckoutConfig, CheckoutCostCenterFacade, CheckoutDeliveryFacade, CheckoutFacade, CheckoutPaymentFacade, CheckoutRootModule, CheckoutStepType, ClearCheckoutFacade, DeliveryModePreferences, OrderConfirmationOrderEntriesContext, OrderPlacedEvent, PaymentTypeFacade, checkoutPaymentSteps, checkoutShippingSteps, defaultCheckoutComponentsConfig };\n//# sourceMappingURL=spartacus-checkout-root.js.map\n"]},"metadata":{},"sourceType":"module"}