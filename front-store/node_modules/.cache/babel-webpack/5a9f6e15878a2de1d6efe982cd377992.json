{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, APP_INITIALIZER, NgModule } from '@angular/core';\nimport * as i3 from '@spartacus/core';\nimport { Config, provideDefaultConfig } from '@spartacus/core';\nimport * as i2 from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nclass SmartEditConfig {}\n\nSmartEditConfig.ɵfac = function SmartEditConfig_Factory(t) {\n  return new (t || SmartEditConfig)();\n};\n\nSmartEditConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SmartEditConfig,\n  factory: function SmartEditConfig_Factory(t) {\n    let r = null;\n\n    if (t) {\n      r = new (t || SmartEditConfig)();\n    } else {\n      r = i0.ɵɵinject(Config);\n    }\n\n    return r;\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SmartEditConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: Config\n    }]\n  }], null, null);\n})();\n\nconst SMART_EDIT_FEATURE = 'smartEdit';\n/**\n * The SmartEditLauncherService is used to check whether Spartacus is launched inside Smart Edit;\n * it also gets cmsTicketId sent from Smart Edit.\n */\n\nclass SmartEditLauncherService {\n  constructor(config, location, featureModules) {\n    this.config = config;\n    this.location = location;\n    this.featureModules = featureModules;\n  }\n\n  get cmsTicketId() {\n    return this._cmsTicketId;\n  }\n  /**\n   * Lazy loads modules when Spartacus launced inside Smart Edit\n   */\n\n\n  load() {\n    if (this.isLaunchedInSmartEdit() && this.featureModules.isConfigured('smartEdit')) {\n      this.featureModules.resolveFeature('smartEdit').subscribe();\n    }\n  }\n  /**\n   * Indicates whether Spartacus is launched in SmartEdit\n   */\n\n\n  isLaunchedInSmartEdit() {\n    var _a;\n\n    const path = this.location.path().split('?')[0];\n    const params = this.location.path().split('?')[1];\n    const cmsToken = params === null || params === void 0 ? void 0 : params.split('&').find(param => param.startsWith('cmsTicketId='));\n    this._cmsTicketId = cmsToken === null || cmsToken === void 0 ? void 0 : cmsToken.split('=')[1];\n    return path.split('/').pop() === ((_a = this.config.smartEdit) === null || _a === void 0 ? void 0 : _a.storefrontPreviewRoute) && !!this._cmsTicketId;\n  }\n\n}\n\nSmartEditLauncherService.ɵfac = function SmartEditLauncherService_Factory(t) {\n  return new (t || SmartEditLauncherService)(i0.ɵɵinject(SmartEditConfig), i0.ɵɵinject(i2.Location), i0.ɵɵinject(i3.FeatureModulesService));\n};\n\nSmartEditLauncherService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SmartEditLauncherService,\n  factory: SmartEditLauncherService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SmartEditLauncherService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: SmartEditConfig\n    }, {\n      type: i2.Location\n    }, {\n      type: i3.FeatureModulesService\n    }];\n  }, null);\n})();\n\nconst defaultSmartEditConfig = {\n  smartEdit: {\n    storefrontPreviewRoute: 'cx-preview',\n    allowOrigin: 'localhost:9002'\n  }\n};\n\nclass CmsTicketInterceptor {\n  constructor(service) {\n    this.service = service;\n  }\n\n  intercept(request, next) {\n    if (this.service.cmsTicketId && request.url.includes('/cms/')) {\n      request = request.clone({\n        setParams: {\n          cmsTicketId: this.service.cmsTicketId\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n\n}\n\nCmsTicketInterceptor.ɵfac = function CmsTicketInterceptor_Factory(t) {\n  return new (t || CmsTicketInterceptor)(i0.ɵɵinject(SmartEditLauncherService));\n};\n\nCmsTicketInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CmsTicketInterceptor,\n  factory: CmsTicketInterceptor.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CmsTicketInterceptor, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: SmartEditLauncherService\n    }];\n  }, null);\n})();\n\nconst interceptors = [{\n  provide: HTTP_INTERCEPTORS,\n  useExisting: CmsTicketInterceptor,\n  multi: true\n}];\n\nfunction smartEditFactory(smartEditLauncherService) {\n  const isReady = () => {\n    smartEditLauncherService.load();\n  };\n\n  return isReady;\n}\n\nclass SmartEditRootModule {}\n\nSmartEditRootModule.ɵfac = function SmartEditRootModule_Factory(t) {\n  return new (t || SmartEditRootModule)();\n};\n\nSmartEditRootModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SmartEditRootModule\n});\nSmartEditRootModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [...interceptors, provideDefaultConfig(defaultSmartEditConfig), {\n    provide: APP_INITIALIZER,\n    useFactory: smartEditFactory,\n    deps: [SmartEditLauncherService],\n    multi: true\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SmartEditRootModule, [{\n    type: NgModule,\n    args: [{\n      providers: [...interceptors, provideDefaultConfig(defaultSmartEditConfig), {\n        provide: APP_INITIALIZER,\n        useFactory: smartEditFactory,\n        deps: [SmartEditLauncherService],\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { SMART_EDIT_FEATURE, SmartEditConfig, SmartEditLauncherService, SmartEditRootModule, smartEditFactory }; //# sourceMappingURL=spartacus-smartedit-root.js.map","map":{"version":3,"sources":["D:/spartacus/front-store/node_modules/@spartacus/smartedit/fesm2015/spartacus-smartedit-root.js"],"names":["i0","Injectable","APP_INITIALIZER","NgModule","i3","Config","provideDefaultConfig","i2","HTTP_INTERCEPTORS","SmartEditConfig","ɵfac","ɵprov","type","args","providedIn","useExisting","SMART_EDIT_FEATURE","SmartEditLauncherService","constructor","config","location","featureModules","cmsTicketId","_cmsTicketId","load","isLaunchedInSmartEdit","isConfigured","resolveFeature","subscribe","_a","path","split","params","cmsToken","find","param","startsWith","pop","smartEdit","storefrontPreviewRoute","Location","FeatureModulesService","defaultSmartEditConfig","allowOrigin","CmsTicketInterceptor","service","intercept","request","next","url","includes","clone","setParams","handle","interceptors","provide","multi","smartEditFactory","smartEditLauncherService","isReady","SmartEditRootModule","ɵmod","ɵinj","useFactory","deps","providers"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, APP_INITIALIZER, NgModule } from '@angular/core';\nimport * as i3 from '@spartacus/core';\nimport { Config, provideDefaultConfig } from '@spartacus/core';\nimport * as i2 from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nclass SmartEditConfig {\n}\nSmartEditConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SmartEditConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSmartEditConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SmartEditConfig, providedIn: 'root', useExisting: Config });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SmartEditConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useExisting: Config,\n                }]\n        }] });\n\nconst SMART_EDIT_FEATURE = 'smartEdit';\n\n/**\n * The SmartEditLauncherService is used to check whether Spartacus is launched inside Smart Edit;\n * it also gets cmsTicketId sent from Smart Edit.\n */\nclass SmartEditLauncherService {\n    constructor(config, location, featureModules) {\n        this.config = config;\n        this.location = location;\n        this.featureModules = featureModules;\n    }\n    get cmsTicketId() {\n        return this._cmsTicketId;\n    }\n    /**\n     * Lazy loads modules when Spartacus launced inside Smart Edit\n     */\n    load() {\n        if (this.isLaunchedInSmartEdit() &&\n            this.featureModules.isConfigured('smartEdit')) {\n            this.featureModules.resolveFeature('smartEdit').subscribe();\n        }\n    }\n    /**\n     * Indicates whether Spartacus is launched in SmartEdit\n     */\n    isLaunchedInSmartEdit() {\n        var _a;\n        const path = this.location.path().split('?')[0];\n        const params = this.location.path().split('?')[1];\n        const cmsToken = params === null || params === void 0 ? void 0 : params.split('&').find((param) => param.startsWith('cmsTicketId='));\n        this._cmsTicketId = cmsToken === null || cmsToken === void 0 ? void 0 : cmsToken.split('=')[1];\n        return (path.split('/').pop() === ((_a = this.config.smartEdit) === null || _a === void 0 ? void 0 : _a.storefrontPreviewRoute) &&\n            !!this._cmsTicketId);\n    }\n}\nSmartEditLauncherService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SmartEditLauncherService, deps: [{ token: SmartEditConfig }, { token: i2.Location }, { token: i3.FeatureModulesService }], target: i0.ɵɵFactoryTarget.Injectable });\nSmartEditLauncherService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SmartEditLauncherService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SmartEditLauncherService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: SmartEditConfig }, { type: i2.Location }, { type: i3.FeatureModulesService }]; } });\n\nconst defaultSmartEditConfig = {\n    smartEdit: {\n        storefrontPreviewRoute: 'cx-preview',\n        allowOrigin: 'localhost:9002',\n    },\n};\n\nclass CmsTicketInterceptor {\n    constructor(service) {\n        this.service = service;\n    }\n    intercept(request, next) {\n        if (this.service.cmsTicketId && request.url.includes('/cms/')) {\n            request = request.clone({\n                setParams: {\n                    cmsTicketId: this.service.cmsTicketId,\n                },\n            });\n        }\n        return next.handle(request);\n    }\n}\nCmsTicketInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CmsTicketInterceptor, deps: [{ token: SmartEditLauncherService }], target: i0.ɵɵFactoryTarget.Injectable });\nCmsTicketInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CmsTicketInterceptor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CmsTicketInterceptor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: SmartEditLauncherService }]; } });\n\nconst interceptors = [\n    {\n        provide: HTTP_INTERCEPTORS,\n        useExisting: CmsTicketInterceptor,\n        multi: true,\n    },\n];\n\nfunction smartEditFactory(smartEditLauncherService) {\n    const isReady = () => {\n        smartEditLauncherService.load();\n    };\n    return isReady;\n}\nclass SmartEditRootModule {\n}\nSmartEditRootModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SmartEditRootModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSmartEditRootModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SmartEditRootModule });\nSmartEditRootModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SmartEditRootModule, providers: [\n        ...interceptors,\n        provideDefaultConfig(defaultSmartEditConfig),\n        {\n            provide: APP_INITIALIZER,\n            useFactory: smartEditFactory,\n            deps: [SmartEditLauncherService],\n            multi: true,\n        },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SmartEditRootModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        ...interceptors,\n                        provideDefaultConfig(defaultSmartEditConfig),\n                        {\n                            provide: APP_INITIALIZER,\n                            useFactory: smartEditFactory,\n                            deps: [SmartEditLauncherService],\n                            multi: true,\n                        },\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SMART_EDIT_FEATURE, SmartEditConfig, SmartEditLauncherService, SmartEditRootModule, smartEditFactory };\n//# sourceMappingURL=spartacus-smartedit-root.js.map\n"]},"metadata":{},"sourceType":"module"}