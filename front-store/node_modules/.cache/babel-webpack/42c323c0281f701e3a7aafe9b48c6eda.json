{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, HostBinding, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { FormGroup, FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i1 from '@spartacus/core';\nimport { GlobalMessageType, UrlModule, I18nModule, provideDefaultConfig, NotAuthGuard, AuthService, GlobalMessageService, WindowRef } from '@spartacus/core';\nimport * as i2 from '@spartacus/storefront';\nimport { CustomFormValidators, FormErrorsModule, SpinnerModule, PageSlotModule } from '@spartacus/storefront';\nimport { BehaviorSubject, from, of } from 'rxjs';\nimport { tap, withLatestFrom, switchMap } from 'rxjs/operators';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i2$1 from '@spartacus/user/account/root';\n\nfunction LoginFormComponent_cx_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"cx-spinner\", 8);\n  }\n}\n\nconst _c0 = function () {\n  return {\n    cxRoute: \"forgotPassword\"\n  };\n};\n\nconst _c1 = function () {\n  return {\n    cxRoute: \"register\"\n  };\n};\n\nfunction LoginRegisterComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 3);\n    i0.ɵɵpipe(2, \"cxUrl\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"cxTranslate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpipeBind1(2, 2, i0.ɵɵpureFunction0(6, _c1)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"loginForm.register\"));\n  }\n}\n\nconst _c2 = function () {\n  return {\n    cxRoute: \"checkoutLogin\"\n  };\n};\n\nfunction LoginRegisterComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 4);\n    i0.ɵɵpipe(2, \"cxUrl\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"cxTranslate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpipeBind1(2, 2, i0.ɵɵpureFunction0(6, _c2)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"loginForm.guestCheckout\"));\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    name: a0\n  };\n};\n\nfunction LoginComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"cxTranslate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"cx-page-slot\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const user_r3 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(3, 1, \"miniLogin.userGreeting\", i0.ɵɵpureFunction1(4, _c3, user_r3.name)), \" \");\n  }\n}\n\nconst _c4 = function () {\n  return {\n    cxRoute: \"login\"\n  };\n};\n\nfunction LoginComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 4);\n    i0.ɵɵpipe(1, \"cxUrl\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"cxTranslate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpipeBind1(1, 2, i0.ɵɵpureFunction0(6, _c4)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 4, \"miniLogin.signInRegister\"));\n  }\n}\n\nclass LoginFormComponentService {\n  constructor(auth, globalMessage, winRef) {\n    this.auth = auth;\n    this.globalMessage = globalMessage;\n    this.winRef = winRef;\n    this.busy$ = new BehaviorSubject(false);\n    this.isUpdating$ = this.busy$.pipe(tap(state => {\n      var _a, _b, _c;\n\n      const userId = (_c = (_b = (_a = this.winRef.nativeWindow) === null || _a === void 0 ? void 0 : _a.history) === null || _b === void 0 ? void 0 : _b.state) === null || _c === void 0 ? void 0 : _c['newUid'];\n\n      if (userId) {\n        this.form.patchValue({\n          userId\n        });\n      }\n\n      state === true ? this.form.disable() : this.form.enable();\n    }));\n    this.form = new FormGroup({\n      userId: new FormControl('', [Validators.required, CustomFormValidators.emailValidator]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  login() {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.busy$.next(true);\n    from(this.auth.loginWithCredentials( // TODO: consider dropping toLowerCase as this should not be part of the UI,\n    // as it's too opinionated and doesn't work with other AUTH services\n    this.form.value.userId.toLowerCase(), this.form.value.password)).pipe(withLatestFrom(this.auth.isUserLoggedIn()), tap(([_, isLoggedIn]) => this.onSuccess(isLoggedIn))).subscribe();\n  }\n\n  onSuccess(isLoggedIn) {\n    if (isLoggedIn) {\n      // We want to remove error messages on successful login (primary the bad\n      // username/password combination)\n      this.globalMessage.remove(GlobalMessageType.MSG_TYPE_ERROR);\n      this.form.reset();\n    }\n\n    this.busy$.next(false);\n  }\n\n}\n\nLoginFormComponentService.ɵfac = function LoginFormComponentService_Factory(t) {\n  return new (t || LoginFormComponentService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i1.GlobalMessageService), i0.ɵɵinject(i1.WindowRef));\n};\n\nLoginFormComponentService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LoginFormComponentService,\n  factory: LoginFormComponentService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginFormComponentService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.AuthService\n    }, {\n      type: i1.GlobalMessageService\n    }, {\n      type: i1.WindowRef\n    }];\n  }, null);\n})();\n\nclass LoginFormComponent {\n  constructor(service) {\n    this.service = service;\n    this.form = this.service.form;\n    this.isUpdating$ = this.service.isUpdating$;\n    this.style = true;\n  }\n\n  onSubmit() {\n    this.service.login();\n  }\n\n}\n\nLoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n  return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(LoginFormComponentService));\n};\n\nLoginFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LoginFormComponent,\n  selectors: [[\"cx-login-form\"]],\n  hostVars: 2,\n  hostBindings: function LoginFormComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"user-form\", ctx.style);\n    }\n  },\n  decls: 24,\n  vars: 29,\n  consts: [[\"class\", \"overlay\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"label-content\"], [\"aria-required\", \"true\", \"type\", \"email\", \"formControlName\", \"userId\", 1, \"form-control\", 3, \"placeholder\"], [\"aria-live\", \"assertive\", \"aria-atomic\", \"true\", 3, \"control\"], [\"aria-required\", \"true\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"placeholder\"], [1, \"btn-link\", 3, \"routerLink\"], [\"type\", \"submit\", 1, \"btn\", \"btn-block\", \"btn-primary\", 3, \"disabled\"], [1, \"overlay\"]],\n  template: function LoginFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginFormComponent_cx_spinner_0_Template, 1, 0, \"cx-spinner\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"label\");\n      i0.ɵɵelementStart(4, \"span\", 2);\n      i0.ɵɵtext(5);\n      i0.ɵɵpipe(6, \"cxTranslate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵpipe(8, \"cxTranslate\");\n      i0.ɵɵelement(9, \"cx-form-errors\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\");\n      i0.ɵɵelementStart(11, \"span\", 2);\n      i0.ɵɵtext(12);\n      i0.ɵɵpipe(13, \"cxTranslate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 5);\n      i0.ɵɵpipe(15, \"cxTranslate\");\n      i0.ɵɵelement(16, \"cx-form-errors\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"a\", 6);\n      i0.ɵɵpipe(18, \"cxUrl\");\n      i0.ɵɵtext(19);\n      i0.ɵɵpipe(20, \"cxTranslate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 7);\n      i0.ɵɵtext(22);\n      i0.ɵɵpipe(23, \"cxTranslate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 12, ctx.isUpdating$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 14, \"loginForm.emailAddress.label\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(8, 16, \"loginForm.emailAddress.placeholder\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"control\", ctx.form.get(\"userId\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 18, \"loginForm.password.label\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(15, 20, \"loginForm.password.placeholder\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"control\", ctx.form.get(\"password\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpipeBind1(18, 22, i0.ɵɵpureFunction0(28, _c0)));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(20, 24, \"loginForm.forgotPassword\"), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.form.disabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(23, 26, \"loginForm.signIn\"), \" \");\n    }\n  },\n  directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i2.FormErrorsComponent, i1$1.RouterLinkWithHref, i2.SpinnerComponent],\n  pipes: [i3.AsyncPipe, i1.TranslatePipe, i1.UrlPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginFormComponent, [{\n    type: Component,\n    args: [{\n      selector: 'cx-login-form',\n      templateUrl: './login-form.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: LoginFormComponentService\n    }];\n  }, {\n    style: [{\n      type: HostBinding,\n      args: ['class.user-form']\n    }]\n  });\n})();\n\nclass LoginFormModule {}\n\nLoginFormModule.ɵfac = function LoginFormModule_Factory(t) {\n  return new (t || LoginFormModule)();\n};\n\nLoginFormModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LoginFormModule\n});\nLoginFormModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [provideDefaultConfig({\n    cmsComponents: {\n      ReturningCustomerLoginComponent: {\n        component: LoginFormComponent,\n        guards: [NotAuthGuard],\n        providers: [{\n          provide: LoginFormComponentService,\n          useClass: LoginFormComponentService,\n          deps: [AuthService, GlobalMessageService, WindowRef]\n        }]\n      }\n    }\n  })],\n  imports: [[CommonModule, FormsModule, ReactiveFormsModule, RouterModule, UrlModule, I18nModule, FormErrorsModule, SpinnerModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginFormModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule, UrlModule, I18nModule, FormErrorsModule, SpinnerModule],\n      providers: [provideDefaultConfig({\n        cmsComponents: {\n          ReturningCustomerLoginComponent: {\n            component: LoginFormComponent,\n            guards: [NotAuthGuard],\n            providers: [{\n              provide: LoginFormComponentService,\n              useClass: LoginFormComponentService,\n              deps: [AuthService, GlobalMessageService, WindowRef]\n            }]\n          }\n        }\n      })],\n      declarations: [LoginFormComponent]\n    }]\n  }], null, null);\n})();\n\nclass LoginRegisterComponent {\n  constructor(activatedRoute) {\n    this.activatedRoute = activatedRoute;\n    this.loginAsGuest = false;\n  }\n\n  ngOnInit() {\n    this.loginAsGuest = this.activatedRoute.snapshot.queryParams['forced'];\n  }\n\n}\n\nLoginRegisterComponent.ɵfac = function LoginRegisterComponent_Factory(t) {\n  return new (t || LoginRegisterComponent)(i0.ɵɵdirectiveInject(i1$1.ActivatedRoute));\n};\n\nLoginRegisterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LoginRegisterComponent,\n  selectors: [[\"cx-login-register\"]],\n  decls: 6,\n  vars: 5,\n  consts: [[1, \"register\"], [1, \"cx-section-title\"], [4, \"ngIf\"], [1, \"btn\", \"btn-block\", \"btn-secondary\", \"btn-register\", 3, \"routerLink\"], [1, \"btn\", \"btn-block\", \"btn-secondary\", \"btn-guest\", 3, \"routerLink\"]],\n  template: function LoginRegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"p\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵpipe(3, \"cxTranslate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, LoginRegisterComponent_ng_container_4_Template, 5, 7, \"ng-container\", 2);\n      i0.ɵɵtemplate(5, LoginRegisterComponent_ng_container_5_Template, 5, 7, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 3, \"loginForm.dontHaveAccount\"), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loginAsGuest);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginAsGuest);\n    }\n  },\n  directives: [i3.NgIf, i1$1.RouterLinkWithHref],\n  pipes: [i1.TranslatePipe, i1.UrlPipe],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginRegisterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'cx-login-register',\n      templateUrl: './login-register.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.ActivatedRoute\n    }];\n  }, null);\n})();\n\nclass LoginRegisterModule {}\n\nLoginRegisterModule.ɵfac = function LoginRegisterModule_Factory(t) {\n  return new (t || LoginRegisterModule)();\n};\n\nLoginRegisterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LoginRegisterModule\n});\nLoginRegisterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [provideDefaultConfig({\n    cmsComponents: {\n      ReturningCustomerRegisterComponent: {\n        component: LoginRegisterComponent,\n        guards: [NotAuthGuard]\n      }\n    }\n  })],\n  imports: [[CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginRegisterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n      providers: [provideDefaultConfig({\n        cmsComponents: {\n          ReturningCustomerRegisterComponent: {\n            component: LoginRegisterComponent,\n            guards: [NotAuthGuard]\n          }\n        }\n      })],\n      declarations: [LoginRegisterComponent]\n    }]\n  }], null, null);\n})();\n\nclass LoginComponent {\n  constructor(auth, userAccount) {\n    this.auth = auth;\n    this.userAccount = userAccount;\n  }\n\n  ngOnInit() {\n    this.user$ = this.auth.isUserLoggedIn().pipe(switchMap(isUserLoggedIn => {\n      if (isUserLoggedIn) {\n        return this.userAccount.get();\n      } else {\n        return of(undefined);\n      }\n    }));\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2$1.UserAccountFacade));\n};\n\nLoginComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"cx-login\"]],\n  decls: 4,\n  vars: 4,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"login\", \"\"], [1, \"cx-login-greet\"], [\"position\", \"HeaderLinks\"], [\"role\", \"link\", 3, \"routerLink\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginComponent_ng_container_0_Template, 5, 6, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, LoginComponent_ng_template_2_Template, 4, 7, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.user$))(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i3.NgIf, i2.PageSlotComponent, i1$1.RouterLinkWithHref],\n  pipes: [i3.AsyncPipe, i1.TranslatePipe, i1.UrlPipe],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginComponent, [{\n    type: Component,\n    args: [{\n      selector: 'cx-login',\n      templateUrl: './login.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i1.AuthService\n    }, {\n      type: i2$1.UserAccountFacade\n    }];\n  }, null);\n})();\n\nclass LoginModule {}\n\nLoginModule.ɵfac = function LoginModule_Factory(t) {\n  return new (t || LoginModule)();\n};\n\nLoginModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LoginModule\n});\nLoginModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [provideDefaultConfig({\n    cmsComponents: {\n      LoginComponent: {\n        component: LoginComponent\n      }\n    }\n  })],\n  imports: [[CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n      providers: [provideDefaultConfig({\n        cmsComponents: {\n          LoginComponent: {\n            component: LoginComponent\n          }\n        }\n      })],\n      declarations: [LoginComponent]\n    }]\n  }], null, null);\n})();\n\nclass UserAccountComponentsModule {}\n\nUserAccountComponentsModule.ɵfac = function UserAccountComponentsModule_Factory(t) {\n  return new (t || UserAccountComponentsModule)();\n};\n\nUserAccountComponentsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: UserAccountComponentsModule\n});\nUserAccountComponentsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[LoginModule, LoginFormModule, LoginRegisterModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserAccountComponentsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [LoginModule, LoginFormModule, LoginRegisterModule]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LoginComponent, LoginFormComponent, LoginFormComponentService, LoginFormModule, LoginModule, LoginRegisterComponent, LoginRegisterModule, UserAccountComponentsModule }; //# sourceMappingURL=spartacus-user-account-components.js.map","map":{"version":3,"sources":["D:/spartacus/front-store/node_modules/@spartacus/user/fesm2015/spartacus-user-account-components.js","D:/spartacus/front-store/node_modules/feature-libs/user/account/components/login-form/login-form.component.html","D:/spartacus/front-store/node_modules/feature-libs/user/account/components/login-register/login-register.component.html","D:/spartacus/front-store/node_modules/feature-libs/user/account/components/login/login.component.html"],"names":["i0","Injectable","Component","ChangeDetectionStrategy","HostBinding","NgModule","i4","FormGroup","FormControl","Validators","FormsModule","ReactiveFormsModule","i1","GlobalMessageType","UrlModule","I18nModule","provideDefaultConfig","NotAuthGuard","AuthService","GlobalMessageService","WindowRef","i2","CustomFormValidators","FormErrorsModule","SpinnerModule","PageSlotModule","BehaviorSubject","from","of","tap","withLatestFrom","switchMap","i3","CommonModule","i1$1","RouterModule","i2$1","LoginFormComponentService","constructor","auth","globalMessage","winRef","busy$","isUpdating$","pipe","state","_a","_b","_c","userId","nativeWindow","history","form","patchValue","disable","enable","required","emailValidator","password","login","valid","markAllAsTouched","next","loginWithCredentials","value","toLowerCase","isUserLoggedIn","_","isLoggedIn","onSuccess","subscribe","remove","MSG_TYPE_ERROR","reset","ɵfac","ɵprov","type","LoginFormComponent","service","style","onSubmit","ɵcmp","NgIf","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","DefaultValueAccessor","NgControlStatus","FormControlName","FormErrorsComponent","RouterLinkWithHref","SpinnerComponent","AsyncPipe","TranslatePipe","UrlPipe","args","selector","templateUrl","changeDetection","OnPush","LoginFormModule","ɵmod","ɵinj","cmsComponents","ReturningCustomerLoginComponent","component","guards","providers","provide","useClass","deps","imports","declarations","LoginRegisterComponent","activatedRoute","loginAsGuest","ngOnInit","snapshot","queryParams","ActivatedRoute","LoginRegisterModule","ReturningCustomerRegisterComponent","LoginComponent","userAccount","user$","get","undefined","UserAccountFacade","PageSlotComponent","LoginModule","UserAccountComponentsModule"],"mappings":"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5G;AAlB4GA,MAAAA,EC3D5G,6BD6EA;AAlB4GA,MAAAA,EC3DtG;AAAA,eAAY,cAAZ;AAAA,QD6EN;AAlB4GA,MAAAA,EC1D1G,2BD4EF;AAlB4GA,MAAAA,ECzDxG,6BD2EJ;AAlB4GA,MAAAA,ECzD5E,UD2EhC;AAlB4GA,MAAAA,EAkB5G;AAlB4GA,MAAAA,ECvDtG,eDyEN;AAlB4GA,MAAAA,ECtDxG,yBDwEJ;AAlB4GA,MAAAA,EAkB5G;AAlB4GA,MAAAA,EC/CxG,kCDiEJ;AAlB4GA,MAAAA,EC1C1G,eD4DF;AAlB4GA,MAAAA,ECxC1G,4BD0DF;AAlB4GA,MAAAA,ECvCxG,8BDyDJ;AAlB4GA,MAAAA,ECvC5E,WDyDhC;AAlB4GA,MAAAA,EAkB5G;AAlB4GA,MAAAA,ECrCtG,eDuDN;AAlB4GA,MAAAA,ECpCxG,0BDsDJ;AAlB4GA,MAAAA,EAkB5G;AAlB4GA,MAAAA,EC7BxG,mCD+CJ;AAlB4GA,MAAAA,ECxB1G,eD0CF;AAlB4GA,MAAAA,ECtB1G,2BDwCF;AAlB4GA,MAAAA,EAkB5G;AAlB4GA,MAAAA,ECrBxG,WDuCJ;AAlB4GA,MAAAA,EAkB5G;AAlB4GA,MAAAA,ECpB1G,eDsCF;AAlB4GA,MAAAA,EClB1G,gCDoCF;AAlB4GA,MAAAA,ECbxG,WD+BJ;AAlB4GA,MAAAA,EAkB5G;AAlB4GA,MAAAA,ECZ1G,eD8BF;AAlB4GA,MAAAA,ECX5G,eD6BA;AAAA;;AAAA;AAlB4GA,MAAAA,EC7D/E,oBD6D+EA,EC7D/E,qCD+E7B;AAlB4GA,MAAAA,EC3D9E,aD6E9B;AAlB4GA,MAAAA,EC3D9E,kCD6E9B;AAlB4GA,MAAAA,ECzD5E,aD2EhC;AAlB4GA,MAAAA,ECzD5E,mBDyD4EA,ECzD5E,oDD2EhC;AAlB4GA,MAAAA,ECjDtG,aDmEN;AAlB4GA,MAAAA,ECjDtG,sCDiDsGA,ECjDtG,0DDmEN;AAlB4GA,MAAAA,EC5CtG,aD8DN;AAlB4GA,MAAAA,EC5CtG,8CD8DN;AAlB4GA,MAAAA,ECvC5E,aDyDhC;AAlB4GA,MAAAA,ECvC5E,mBDuC4EA,ECvC5E,iDDyDhC;AAlB4GA,MAAAA,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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, HostBinding, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { FormGroup, FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i1 from '@spartacus/core';\nimport { GlobalMessageType, UrlModule, I18nModule, provideDefaultConfig, NotAuthGuard, AuthService, GlobalMessageService, WindowRef } from '@spartacus/core';\nimport * as i2 from '@spartacus/storefront';\nimport { CustomFormValidators, FormErrorsModule, SpinnerModule, PageSlotModule } from '@spartacus/storefront';\nimport { BehaviorSubject, from, of } from 'rxjs';\nimport { tap, withLatestFrom, switchMap } from 'rxjs/operators';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i2$1 from '@spartacus/user/account/root';\n\nclass LoginFormComponentService {\n    constructor(auth, globalMessage, winRef) {\n        this.auth = auth;\n        this.globalMessage = globalMessage;\n        this.winRef = winRef;\n        this.busy$ = new BehaviorSubject(false);\n        this.isUpdating$ = this.busy$.pipe(tap((state) => {\n            var _a, _b, _c;\n            const userId = (_c = (_b = (_a = this.winRef.nativeWindow) === null || _a === void 0 ? void 0 : _a.history) === null || _b === void 0 ? void 0 : _b.state) === null || _c === void 0 ? void 0 : _c['newUid'];\n            if (userId) {\n                this.form.patchValue({ userId });\n            }\n            state === true ? this.form.disable() : this.form.enable();\n        }));\n        this.form = new FormGroup({\n            userId: new FormControl('', [\n                Validators.required,\n                CustomFormValidators.emailValidator,\n            ]),\n            password: new FormControl('', Validators.required),\n        });\n    }\n    login() {\n        if (!this.form.valid) {\n            this.form.markAllAsTouched();\n            return;\n        }\n        this.busy$.next(true);\n        from(this.auth.loginWithCredentials(\n        // TODO: consider dropping toLowerCase as this should not be part of the UI,\n        // as it's too opinionated and doesn't work with other AUTH services\n        this.form.value.userId.toLowerCase(), this.form.value.password))\n            .pipe(withLatestFrom(this.auth.isUserLoggedIn()), tap(([_, isLoggedIn]) => this.onSuccess(isLoggedIn)))\n            .subscribe();\n    }\n    onSuccess(isLoggedIn) {\n        if (isLoggedIn) {\n            // We want to remove error messages on successful login (primary the bad\n            // username/password combination)\n            this.globalMessage.remove(GlobalMessageType.MSG_TYPE_ERROR);\n            this.form.reset();\n        }\n        this.busy$.next(false);\n    }\n}\nLoginFormComponentService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormComponentService, deps: [{ token: i1.AuthService }, { token: i1.GlobalMessageService }, { token: i1.WindowRef }], target: i0.ɵɵFactoryTarget.Injectable });\nLoginFormComponentService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormComponentService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormComponentService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.AuthService }, { type: i1.GlobalMessageService }, { type: i1.WindowRef }]; } });\n\nclass LoginFormComponent {\n    constructor(service) {\n        this.service = service;\n        this.form = this.service.form;\n        this.isUpdating$ = this.service.isUpdating$;\n        this.style = true;\n    }\n    onSubmit() {\n        this.service.login();\n    }\n}\nLoginFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormComponent, deps: [{ token: LoginFormComponentService }], target: i0.ɵɵFactoryTarget.Component });\nLoginFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: LoginFormComponent, selector: \"cx-login-form\", host: { properties: { \"class.user-form\": \"this.style\" } }, ngImport: i0, template: \"<cx-spinner class=\\\"overlay\\\" *ngIf=\\\"isUpdating$ | async\\\"> </cx-spinner>\\n\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\">\\n  <label>\\n    <span class=\\\"label-content\\\">{{\\n      'loginForm.emailAddress.label' | cxTranslate\\n    }}</span>\\n    <input\\n      aria-required=\\\"true\\\"\\n      type=\\\"email\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"userId\\\"\\n      placeholder=\\\"{{ 'loginForm.emailAddress.placeholder' | cxTranslate }}\\\"\\n    />\\n    <cx-form-errors\\n      aria-live=\\\"assertive\\\"\\n      aria-atomic=\\\"true\\\"\\n      [control]=\\\"form.get('userId')\\\"\\n    ></cx-form-errors>\\n  </label>\\n\\n  <label>\\n    <span class=\\\"label-content\\\">{{\\n      'loginForm.password.label' | cxTranslate\\n    }}</span>\\n    <input\\n      aria-required=\\\"true\\\"\\n      type=\\\"password\\\"\\n      class=\\\"form-control\\\"\\n      placeholder=\\\"{{ 'loginForm.password.placeholder' | cxTranslate }}\\\"\\n      formControlName=\\\"password\\\"\\n    />\\n    <cx-form-errors\\n      aria-live=\\\"assertive\\\"\\n      aria-atomic=\\\"true\\\"\\n      [control]=\\\"form.get('password')\\\"\\n    ></cx-form-errors>\\n  </label>\\n\\n  <a [routerLink]=\\\"{ cxRoute: 'forgotPassword' } | cxUrl\\\" class=\\\"btn-link\\\">\\n    {{ 'loginForm.forgotPassword' | cxTranslate }}\\n  </a>\\n\\n  <button\\n    type=\\\"submit\\\"\\n    class=\\\"btn btn-block btn-primary\\\"\\n    [disabled]=\\\"form.disabled\\\"\\n  >\\n    {{ 'loginForm.signIn' | cxTranslate }}\\n  </button>\\n</form>\\n\", components: [{ type: i2.SpinnerComponent, selector: \"cx-spinner\" }, { type: i2.FormErrorsComponent, selector: \"cx-form-errors\", inputs: [\"prefix\", \"translationParams\", \"control\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i4.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.FormControlName, selector: \"[formControlName]\", inputs: [\"disabled\", \"formControlName\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { type: i1$1.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"routerLink\", \"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"relativeTo\"] }], pipes: { \"async\": i3.AsyncPipe, \"cxTranslate\": i1.TranslatePipe, \"cxUrl\": i1.UrlPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cx-login-form',\n                    templateUrl: './login-form.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: LoginFormComponentService }]; }, propDecorators: { style: [{\n                type: HostBinding,\n                args: ['class.user-form']\n            }] } });\n\nclass LoginFormModule {\n}\nLoginFormModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoginFormModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormModule, declarations: [LoginFormComponent], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n        UrlModule,\n        I18nModule,\n        FormErrorsModule,\n        SpinnerModule] });\nLoginFormModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormModule, providers: [\n        provideDefaultConfig({\n            cmsComponents: {\n                ReturningCustomerLoginComponent: {\n                    component: LoginFormComponent,\n                    guards: [NotAuthGuard],\n                    providers: [\n                        {\n                            provide: LoginFormComponentService,\n                            useClass: LoginFormComponentService,\n                            deps: [AuthService, GlobalMessageService, WindowRef],\n                        },\n                    ],\n                },\n            },\n        }),\n    ], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n            RouterModule,\n            UrlModule,\n            I18nModule,\n            FormErrorsModule,\n            SpinnerModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule,\n                        RouterModule,\n                        UrlModule,\n                        I18nModule,\n                        FormErrorsModule,\n                        SpinnerModule,\n                    ],\n                    providers: [\n                        provideDefaultConfig({\n                            cmsComponents: {\n                                ReturningCustomerLoginComponent: {\n                                    component: LoginFormComponent,\n                                    guards: [NotAuthGuard],\n                                    providers: [\n                                        {\n                                            provide: LoginFormComponentService,\n                                            useClass: LoginFormComponentService,\n                                            deps: [AuthService, GlobalMessageService, WindowRef],\n                                        },\n                                    ],\n                                },\n                            },\n                        }),\n                    ],\n                    declarations: [LoginFormComponent],\n                }]\n        }] });\n\nclass LoginRegisterComponent {\n    constructor(activatedRoute) {\n        this.activatedRoute = activatedRoute;\n        this.loginAsGuest = false;\n    }\n    ngOnInit() {\n        this.loginAsGuest = this.activatedRoute.snapshot.queryParams['forced'];\n    }\n}\nLoginRegisterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginRegisterComponent, deps: [{ token: i1$1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });\nLoginRegisterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: LoginRegisterComponent, selector: \"cx-login-register\", ngImport: i0, template: \"<div class=\\\"register\\\">\\n  <p class=\\\"cx-section-title\\\">\\n    {{ 'loginForm.dontHaveAccount' | cxTranslate }}\\n  </p>\\n\\n  <ng-container *ngIf=\\\"!loginAsGuest\\\">\\n    <a\\n      [routerLink]=\\\"{ cxRoute: 'register' } | cxUrl\\\"\\n      class=\\\"btn btn-block btn-secondary btn-register\\\"\\n      >{{ 'loginForm.register' | cxTranslate }}</a\\n    >\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"loginAsGuest\\\">\\n    <a\\n      [routerLink]=\\\"{ cxRoute: 'checkoutLogin' } | cxUrl\\\"\\n      class=\\\"btn btn-block btn-secondary btn-guest\\\"\\n      >{{ 'loginForm.guestCheckout' | cxTranslate }}</a\\n    >\\n  </ng-container>\\n</div>\\n\", directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"routerLink\", \"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"relativeTo\"] }], pipes: { \"cxTranslate\": i1.TranslatePipe, \"cxUrl\": i1.UrlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginRegisterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cx-login-register',\n                    templateUrl: './login-register.component.html',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.ActivatedRoute }]; } });\n\nclass LoginRegisterModule {\n}\nLoginRegisterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginRegisterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoginRegisterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginRegisterModule, declarations: [LoginRegisterComponent], imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule] });\nLoginRegisterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginRegisterModule, providers: [\n        provideDefaultConfig({\n            cmsComponents: {\n                ReturningCustomerRegisterComponent: {\n                    component: LoginRegisterComponent,\n                    guards: [NotAuthGuard],\n                },\n            },\n        }),\n    ], imports: [[CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginRegisterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n                    providers: [\n                        provideDefaultConfig({\n                            cmsComponents: {\n                                ReturningCustomerRegisterComponent: {\n                                    component: LoginRegisterComponent,\n                                    guards: [NotAuthGuard],\n                                },\n                            },\n                        }),\n                    ],\n                    declarations: [LoginRegisterComponent],\n                }]\n        }] });\n\nclass LoginComponent {\n    constructor(auth, userAccount) {\n        this.auth = auth;\n        this.userAccount = userAccount;\n    }\n    ngOnInit() {\n        this.user$ = this.auth.isUserLoggedIn().pipe(switchMap((isUserLoggedIn) => {\n            if (isUserLoggedIn) {\n                return this.userAccount.get();\n            }\n            else {\n                return of(undefined);\n            }\n        }));\n    }\n}\nLoginComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginComponent, deps: [{ token: i1.AuthService }, { token: i2$1.UserAccountFacade }], target: i0.ɵɵFactoryTarget.Component });\nLoginComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: LoginComponent, selector: \"cx-login\", ngImport: i0, template: \"<ng-container *ngIf=\\\"user$ | async as user; else login\\\">\\n  <div class=\\\"cx-login-greet\\\">\\n    {{ 'miniLogin.userGreeting' | cxTranslate: { name: user.name } }}\\n  </div>\\n  <cx-page-slot position=\\\"HeaderLinks\\\"></cx-page-slot>\\n</ng-container>\\n\\n<ng-template #login>\\n  <a role=\\\"link\\\" [routerLink]=\\\"{ cxRoute: 'login' } | cxUrl\\\">{{\\n    'miniLogin.signInRegister' | cxTranslate\\n  }}</a>\\n</ng-template>\\n\", components: [{ type: i2.PageSlotComponent, selector: \"cx-page-slot,[cx-page-slot]\", inputs: [\"position\", \"class\", \"isPageFold\", \"hasComponents\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"routerLink\", \"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"relativeTo\"] }], pipes: { \"async\": i3.AsyncPipe, \"cxTranslate\": i1.TranslatePipe, \"cxUrl\": i1.UrlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cx-login',\n                    templateUrl: './login.component.html',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.AuthService }, { type: i2$1.UserAccountFacade }]; } });\n\nclass LoginModule {\n}\nLoginModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoginModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginModule, declarations: [LoginComponent], imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule] });\nLoginModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginModule, providers: [\n        provideDefaultConfig({\n            cmsComponents: {\n                LoginComponent: {\n                    component: LoginComponent,\n                },\n            },\n        }),\n    ], imports: [[CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n                    providers: [\n                        provideDefaultConfig({\n                            cmsComponents: {\n                                LoginComponent: {\n                                    component: LoginComponent,\n                                },\n                            },\n                        }),\n                    ],\n                    declarations: [LoginComponent],\n                }]\n        }] });\n\nclass UserAccountComponentsModule {\n}\nUserAccountComponentsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserAccountComponentsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nUserAccountComponentsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserAccountComponentsModule, imports: [LoginModule, LoginFormModule, LoginRegisterModule] });\nUserAccountComponentsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserAccountComponentsModule, imports: [[LoginModule, LoginFormModule, LoginRegisterModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserAccountComponentsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [LoginModule, LoginFormModule, LoginRegisterModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoginComponent, LoginFormComponent, LoginFormComponentService, LoginFormModule, LoginModule, LoginRegisterComponent, LoginRegisterModule, UserAccountComponentsModule };\n//# sourceMappingURL=spartacus-user-account-components.js.map\n",null,null,null]},"metadata":{},"sourceType":"module"}