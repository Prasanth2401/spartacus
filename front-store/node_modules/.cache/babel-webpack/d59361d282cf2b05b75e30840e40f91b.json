{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i2 from '@spartacus/core';\nimport { facadeFactory, provideDefaultConfigFactory, provideDefaultConfig, AuthGuard, CartEvent } from '@spartacus/core';\nimport { CartOrderEntriesContext, OrderEntriesSource, CmsPageGuard, PageLayoutComponent, ORDER_ENTRIES_CONTEXT } from '@spartacus/storefront';\nimport { combineLatest, queueScheduler } from 'rxjs';\nimport { map, distinctUntilChanged, switchMap, tap, take, filter, observeOn, delayWhen } from 'rxjs/operators';\nimport * as i1 from '@ngrx/store';\nconst CART_SAVED_CART_FEATURE = 'cartSavedCart';\nconst CART_SAVED_CART_CORE_FEATURE = 'cartSavedCartCore';\n\nclass SavedCartFacade {}\n\nSavedCartFacade.ɵfac = function SavedCartFacade_Factory(t) {\n  return new (t || SavedCartFacade)();\n};\n\nSavedCartFacade.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SavedCartFacade,\n  factory: function () {\n    return (() => facadeFactory({\n      facade: SavedCartFacade,\n      feature: CART_SAVED_CART_CORE_FEATURE,\n      methods: ['editSavedCart', 'deleteSavedCart', 'getSavedCart', 'getSavedCartList', 'loadSavedCart', 'clearCloneSavedCart', 'clearRestoreSavedCart', 'clearSaveCart', 'clearSavedCarts', 'get', 'getList', 'getCloneSavedCartProcessError', 'getCloneSavedCartProcessLoading', 'getCloneSavedCartProcessSuccess', 'getRestoreSavedCartProcessError', 'getRestoreSavedCartProcessLoading', 'getRestoreSavedCartProcessSuccess', 'getSaveCartProcessError', 'getSaveCartProcessLoading', 'getSaveCartProcessSuccess', 'getSavedCartListProcess', 'getSavedCartListProcessLoading', 'isStable', 'cloneSavedCart', 'loadSavedCarts', 'restoreSavedCart', 'saveCart'],\n      async: true\n    }))();\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SavedCartFacade, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => facadeFactory({\n        facade: SavedCartFacade,\n        feature: CART_SAVED_CART_CORE_FEATURE,\n        methods: ['editSavedCart', 'deleteSavedCart', 'getSavedCart', 'getSavedCartList', 'loadSavedCart', 'clearCloneSavedCart', 'clearRestoreSavedCart', 'clearSaveCart', 'clearSavedCarts', 'get', 'getList', 'getCloneSavedCartProcessError', 'getCloneSavedCartProcessLoading', 'getCloneSavedCartProcessSuccess', 'getRestoreSavedCartProcessError', 'getRestoreSavedCartProcessLoading', 'getRestoreSavedCartProcessSuccess', 'getSaveCartProcessError', 'getSaveCartProcessLoading', 'getSaveCartProcessSuccess', 'getSavedCartListProcess', 'getSavedCartListProcessLoading', 'isStable', 'cloneSavedCart', 'loadSavedCarts', 'restoreSavedCart', 'saveCart'],\n        async: true\n      })\n    }]\n  }], null, null);\n})();\n\nclass SavedCartOrderEntriesContext extends CartOrderEntriesContext {\n  constructor(actionsSubject, userIdService, multiCartService, savedCartService, routingService) {\n    super(actionsSubject);\n    this.actionsSubject = actionsSubject;\n    this.userIdService = userIdService;\n    this.multiCartService = multiCartService;\n    this.savedCartService = savedCartService;\n    this.routingService = routingService;\n    this.type = OrderEntriesSource.SAVED_CART;\n    this.savedCartId$ = this.routingService.getRouterState().pipe(map(routingData => routingData.state.params.savedCartId), distinctUntilChanged());\n  }\n\n  getEntries() {\n    return this.savedCartId$.pipe(switchMap(cartId => this.savedCartService.get(cartId)), map(cart => {\n      var _a;\n\n      return (_a = cart === null || cart === void 0 ? void 0 : cart.entries) !== null && _a !== void 0 ? _a : [];\n    }));\n  }\n\n  add(products) {\n    return combineLatest([this.userIdService.takeUserId(), this.savedCartId$]).pipe(tap(([userId, cartId]) => this.multiCartService.addEntries(userId, cartId, products)), map(([_userId, cartId]) => cartId));\n  }\n\n}\n\nSavedCartOrderEntriesContext.ɵfac = function SavedCartOrderEntriesContext_Factory(t) {\n  return new (t || SavedCartOrderEntriesContext)(i0.ɵɵinject(i1.ActionsSubject), i0.ɵɵinject(i2.UserIdService), i0.ɵɵinject(i2.MultiCartService), i0.ɵɵinject(SavedCartFacade), i0.ɵɵinject(i2.RoutingService));\n};\n\nSavedCartOrderEntriesContext.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SavedCartOrderEntriesContext,\n  factory: SavedCartOrderEntriesContext.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SavedCartOrderEntriesContext, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.ActionsSubject\n    }, {\n      type: i2.UserIdService\n    }, {\n      type: i2.MultiCartService\n    }, {\n      type: SavedCartFacade\n    }, {\n      type: i2.RoutingService\n    }];\n  }, null);\n})();\n\nclass NewSavedCartOrderEntriesContext extends CartOrderEntriesContext {\n  constructor(actionsSubject, userIdService, multiCartService, savedCartService) {\n    super(actionsSubject);\n    this.actionsSubject = actionsSubject;\n    this.userIdService = userIdService;\n    this.multiCartService = multiCartService;\n    this.savedCartService = savedCartService;\n    this.type = OrderEntriesSource.NEW_SAVED_CART;\n  }\n\n  addEntries(products, savedCartInfo) {\n    return this.add(products, savedCartInfo).pipe(switchMap(cartId => this.getResults(cartId)), take(products.length));\n  }\n\n  add(products, savedCartInfo) {\n    return this.userIdService.takeUserId().pipe(switchMap(userId => this.multiCartService.createCart({\n      userId,\n      extraData: {\n        active: false\n      }\n    }).pipe(filter(cartData => {\n      var _a;\n\n      return Boolean((_a = cartData.value) === null || _a === void 0 ? void 0 : _a.code);\n    }), map(cartData => {\n      var _a;\n\n      return (_a = cartData.value) === null || _a === void 0 ? void 0 : _a.code;\n    }), tap(cartId => {\n      this.savedCartService.saveCart({\n        cartId,\n        saveCartName: savedCartInfo === null || savedCartInfo === void 0 ? void 0 : savedCartInfo.name,\n        saveCartDescription: savedCartInfo === null || savedCartInfo === void 0 ? void 0 : savedCartInfo.description\n      });\n      this.savedCartService.loadSavedCarts();\n    }), observeOn(queueScheduler), delayWhen(() => this.savedCartService.getSaveCartProcessLoading().pipe(filter(loading => !loading))), tap(cartId => this.multiCartService.addEntries(userId, cartId, products)))));\n  }\n\n}\n\nNewSavedCartOrderEntriesContext.ɵfac = function NewSavedCartOrderEntriesContext_Factory(t) {\n  return new (t || NewSavedCartOrderEntriesContext)(i0.ɵɵinject(i1.ActionsSubject), i0.ɵɵinject(i2.UserIdService), i0.ɵɵinject(i2.MultiCartService), i0.ɵɵinject(SavedCartFacade));\n};\n\nNewSavedCartOrderEntriesContext.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NewSavedCartOrderEntriesContext,\n  factory: NewSavedCartOrderEntriesContext.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NewSavedCartOrderEntriesContext, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.ActionsSubject\n    }, {\n      type: i2.UserIdService\n    }, {\n      type: i2.MultiCartService\n    }, {\n      type: SavedCartFacade\n    }];\n  }, null);\n})(); // TODO: Inline this factory when we start releasing Ivy compiled libraries\n\n\nfunction defaultCartSavedCartComponentsConfig() {\n  const config = {\n    featureModules: {\n      [CART_SAVED_CART_FEATURE]: {\n        cmsComponents: ['AddToSavedCartsComponent', 'AccountSavedCartHistoryComponent', 'SavedCartDetailsOverviewComponent', 'SavedCartDetailsItemsComponent', 'SavedCartDetailsActionComponent']\n      },\n      // by default core is bundled together with components\n      [CART_SAVED_CART_CORE_FEATURE]: CART_SAVED_CART_FEATURE\n    }\n  };\n  return config;\n}\n\nclass SavedCartRootModule {}\n\nSavedCartRootModule.ɵfac = function SavedCartRootModule_Factory(t) {\n  return new (t || SavedCartRootModule)();\n};\n\nSavedCartRootModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SavedCartRootModule\n});\nSavedCartRootModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [provideDefaultConfigFactory(defaultCartSavedCartComponentsConfig), provideDefaultConfig({\n    routing: {\n      routes: {\n        savedCarts: {\n          paths: ['my-account/saved-carts']\n        },\n        savedCartsDetails: {\n          paths: ['my-account/saved-cart/:savedCartId'],\n          paramsMapping: {\n            savedCartId: 'savedCartId'\n          }\n        }\n      }\n    }\n  })],\n  imports: [[RouterModule.forChild([{\n    // @ts-ignore\n    path: null,\n    canActivate: [AuthGuard, CmsPageGuard],\n    component: PageLayoutComponent,\n    data: {\n      cxRoute: 'savedCartsDetails',\n      cxContext: {\n        [ORDER_ENTRIES_CONTEXT]: SavedCartOrderEntriesContext\n      }\n    }\n  }, {\n    // @ts-ignore\n    path: null,\n    canActivate: [AuthGuard, CmsPageGuard],\n    component: PageLayoutComponent,\n    data: {\n      cxRoute: 'savedCarts',\n      cxContext: {\n        [ORDER_ENTRIES_CONTEXT]: NewSavedCartOrderEntriesContext\n      }\n    }\n  }])]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SavedCartRootModule, [{\n    type: NgModule,\n    args: [{\n      imports: [RouterModule.forChild([{\n        // @ts-ignore\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'savedCartsDetails',\n          cxContext: {\n            [ORDER_ENTRIES_CONTEXT]: SavedCartOrderEntriesContext\n          }\n        }\n      }, {\n        // @ts-ignore\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'savedCarts',\n          cxContext: {\n            [ORDER_ENTRIES_CONTEXT]: NewSavedCartOrderEntriesContext\n          }\n        }\n      }])],\n      providers: [provideDefaultConfigFactory(defaultCartSavedCartComponentsConfig), provideDefaultConfig({\n        routing: {\n          routes: {\n            savedCarts: {\n              paths: ['my-account/saved-carts']\n            },\n            savedCartsDetails: {\n              paths: ['my-account/saved-cart/:savedCartId'],\n              paramsMapping: {\n                savedCartId: 'savedCartId'\n              }\n            }\n          }\n        }\n      })]\n    }]\n  }], null, null);\n})();\n/**\n * Base saved cart event. Most cart events should have these properties.\n */\n\n\nclass SavedCartEvent extends CartEvent {} // =====================================================================\n\n\nclass DeleteSavedCartEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nDeleteSavedCartEvent.type = 'DeleteSavedCartEvent';\n\nclass DeleteSavedCartSuccessEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nDeleteSavedCartSuccessEvent.type = 'DeleteSavedCartSuccessEvent';\n\nclass DeleteSavedCartFailEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nDeleteSavedCartFailEvent.type = 'DeleteSavedCartFailEvent';\n\nclass SaveCartEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nSaveCartEvent.type = 'SaveCartEvent';\n\nclass SaveCartSuccessEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nSaveCartSuccessEvent.type = 'SaveCartSuccessEvent';\n\nclass SaveCartFailEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nSaveCartFailEvent.type = 'SaveCartEvent';\n\nclass RestoreSavedCartEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nRestoreSavedCartEvent.type = 'RestoreSavedCartEvent';\n\nclass RestoreSavedCartSuccessEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nRestoreSavedCartSuccessEvent.type = 'RestoreSavedCartSuccessEvent';\n\nclass RestoreSavedCartFailEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nRestoreSavedCartFailEvent.type = 'RestoreSavedCartFailEvent';\n\nclass EditSavedCartEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nEditSavedCartEvent.type = 'EditSavedCartEvent';\n\nclass EditSavedCartSuccessEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nEditSavedCartSuccessEvent.type = 'EditSavedCartSuccessEvent';\n\nclass EditSavedCartFailEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nEditSavedCartFailEvent.type = 'EditSavedCartFailEvent';\n\nclass CloneSavedCartEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nCloneSavedCartEvent.type = 'CloneSavedCartEvent';\n\nclass CloneSavedCartSuccessEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nCloneSavedCartSuccessEvent.type = 'CloneSavedCartSuccessEvent';\n\nclass CloneSavedCartFailEvent extends SavedCartEvent {}\n/**\n * Event's type\n */\n\n\nCloneSavedCartFailEvent.type = 'CloneSavedCartFailEvent';\nvar SavedCartFormType;\n\n(function (SavedCartFormType) {\n  SavedCartFormType[\"EDIT\"] = \"edit\";\n  SavedCartFormType[\"DELETE\"] = \"delete\";\n  SavedCartFormType[\"SAVE\"] = \"save\";\n  SavedCartFormType[\"RESTORE\"] = \"restore\";\n})(SavedCartFormType || (SavedCartFormType = {}));\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CART_SAVED_CART_CORE_FEATURE, CART_SAVED_CART_FEATURE, CloneSavedCartEvent, CloneSavedCartFailEvent, CloneSavedCartSuccessEvent, DeleteSavedCartEvent, DeleteSavedCartFailEvent, DeleteSavedCartSuccessEvent, EditSavedCartEvent, EditSavedCartFailEvent, EditSavedCartSuccessEvent, NewSavedCartOrderEntriesContext, RestoreSavedCartEvent, RestoreSavedCartFailEvent, RestoreSavedCartSuccessEvent, SaveCartEvent, SaveCartFailEvent, SaveCartSuccessEvent, SavedCartEvent, SavedCartFacade, SavedCartFormType, SavedCartOrderEntriesContext, SavedCartRootModule, defaultCartSavedCartComponentsConfig }; //# sourceMappingURL=spartacus-cart-saved-cart-root.js.map","map":{"version":3,"sources":["D:/spartacus/front-store/node_modules/@spartacus/cart/fesm2015/spartacus-cart-saved-cart-root.js"],"names":["i0","Injectable","NgModule","i1$1","RouterModule","i2","facadeFactory","provideDefaultConfigFactory","provideDefaultConfig","AuthGuard","CartEvent","CartOrderEntriesContext","OrderEntriesSource","CmsPageGuard","PageLayoutComponent","ORDER_ENTRIES_CONTEXT","combineLatest","queueScheduler","map","distinctUntilChanged","switchMap","tap","take","filter","observeOn","delayWhen","i1","CART_SAVED_CART_FEATURE","CART_SAVED_CART_CORE_FEATURE","SavedCartFacade","ɵfac","ɵprov","facade","feature","methods","async","type","args","providedIn","useFactory","SavedCartOrderEntriesContext","constructor","actionsSubject","userIdService","multiCartService","savedCartService","routingService","SAVED_CART","savedCartId$","getRouterState","pipe","routingData","state","params","savedCartId","getEntries","cartId","get","cart","_a","entries","add","products","takeUserId","userId","addEntries","_userId","ActionsSubject","UserIdService","MultiCartService","RoutingService","NewSavedCartOrderEntriesContext","NEW_SAVED_CART","savedCartInfo","getResults","length","createCart","extraData","active","cartData","Boolean","value","code","saveCart","saveCartName","name","saveCartDescription","description","loadSavedCarts","getSaveCartProcessLoading","loading","defaultCartSavedCartComponentsConfig","config","featureModules","cmsComponents","SavedCartRootModule","ɵmod","ɵinj","routing","routes","savedCarts","paths","savedCartsDetails","paramsMapping","forChild","path","canActivate","component","data","cxRoute","cxContext","imports","providers","SavedCartEvent","DeleteSavedCartEvent","DeleteSavedCartSuccessEvent","DeleteSavedCartFailEvent","SaveCartEvent","SaveCartSuccessEvent","SaveCartFailEvent","RestoreSavedCartEvent","RestoreSavedCartSuccessEvent","RestoreSavedCartFailEvent","EditSavedCartEvent","EditSavedCartSuccessEvent","EditSavedCartFailEvent","CloneSavedCartEvent","CloneSavedCartSuccessEvent","CloneSavedCartFailEvent","SavedCartFormType"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i2 from '@spartacus/core';\nimport { facadeFactory, provideDefaultConfigFactory, provideDefaultConfig, AuthGuard, CartEvent } from '@spartacus/core';\nimport { CartOrderEntriesContext, OrderEntriesSource, CmsPageGuard, PageLayoutComponent, ORDER_ENTRIES_CONTEXT } from '@spartacus/storefront';\nimport { combineLatest, queueScheduler } from 'rxjs';\nimport { map, distinctUntilChanged, switchMap, tap, take, filter, observeOn, delayWhen } from 'rxjs/operators';\nimport * as i1 from '@ngrx/store';\n\nconst CART_SAVED_CART_FEATURE = 'cartSavedCart';\nconst CART_SAVED_CART_CORE_FEATURE = 'cartSavedCartCore';\n\nclass SavedCartFacade {\n}\nSavedCartFacade.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SavedCartFacade, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSavedCartFacade.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SavedCartFacade, providedIn: 'root', useFactory: () => facadeFactory({\n        facade: SavedCartFacade,\n        feature: CART_SAVED_CART_CORE_FEATURE,\n        methods: [\n            'editSavedCart',\n            'deleteSavedCart',\n            'getSavedCart',\n            'getSavedCartList',\n            'loadSavedCart',\n            'clearCloneSavedCart',\n            'clearRestoreSavedCart',\n            'clearSaveCart',\n            'clearSavedCarts',\n            'get',\n            'getList',\n            'getCloneSavedCartProcessError',\n            'getCloneSavedCartProcessLoading',\n            'getCloneSavedCartProcessSuccess',\n            'getRestoreSavedCartProcessError',\n            'getRestoreSavedCartProcessLoading',\n            'getRestoreSavedCartProcessSuccess',\n            'getSaveCartProcessError',\n            'getSaveCartProcessLoading',\n            'getSaveCartProcessSuccess',\n            'getSavedCartListProcess',\n            'getSavedCartListProcessLoading',\n            'isStable',\n            'cloneSavedCart',\n            'loadSavedCarts',\n            'restoreSavedCart',\n            'saveCart',\n        ],\n        async: true,\n    }) });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SavedCartFacade, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => facadeFactory({\n                        facade: SavedCartFacade,\n                        feature: CART_SAVED_CART_CORE_FEATURE,\n                        methods: [\n                            'editSavedCart',\n                            'deleteSavedCart',\n                            'getSavedCart',\n                            'getSavedCartList',\n                            'loadSavedCart',\n                            'clearCloneSavedCart',\n                            'clearRestoreSavedCart',\n                            'clearSaveCart',\n                            'clearSavedCarts',\n                            'get',\n                            'getList',\n                            'getCloneSavedCartProcessError',\n                            'getCloneSavedCartProcessLoading',\n                            'getCloneSavedCartProcessSuccess',\n                            'getRestoreSavedCartProcessError',\n                            'getRestoreSavedCartProcessLoading',\n                            'getRestoreSavedCartProcessSuccess',\n                            'getSaveCartProcessError',\n                            'getSaveCartProcessLoading',\n                            'getSaveCartProcessSuccess',\n                            'getSavedCartListProcess',\n                            'getSavedCartListProcessLoading',\n                            'isStable',\n                            'cloneSavedCart',\n                            'loadSavedCarts',\n                            'restoreSavedCart',\n                            'saveCart',\n                        ],\n                        async: true,\n                    }),\n                }]\n        }] });\n\nclass SavedCartOrderEntriesContext extends CartOrderEntriesContext {\n    constructor(actionsSubject, userIdService, multiCartService, savedCartService, routingService) {\n        super(actionsSubject);\n        this.actionsSubject = actionsSubject;\n        this.userIdService = userIdService;\n        this.multiCartService = multiCartService;\n        this.savedCartService = savedCartService;\n        this.routingService = routingService;\n        this.type = OrderEntriesSource.SAVED_CART;\n        this.savedCartId$ = this.routingService.getRouterState().pipe(map((routingData) => routingData.state.params.savedCartId), distinctUntilChanged());\n    }\n    getEntries() {\n        return this.savedCartId$.pipe(switchMap((cartId) => this.savedCartService.get(cartId)), map((cart) => { var _a; return (_a = cart === null || cart === void 0 ? void 0 : cart.entries) !== null && _a !== void 0 ? _a : []; }));\n    }\n    add(products) {\n        return combineLatest([\n            this.userIdService.takeUserId(),\n            this.savedCartId$,\n        ]).pipe(tap(([userId, cartId]) => this.multiCartService.addEntries(userId, cartId, products)), map(([_userId, cartId]) => cartId));\n    }\n}\nSavedCartOrderEntriesContext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SavedCartOrderEntriesContext, deps: [{ token: i1.ActionsSubject }, { token: i2.UserIdService }, { token: i2.MultiCartService }, { token: SavedCartFacade }, { token: i2.RoutingService }], target: i0.ɵɵFactoryTarget.Injectable });\nSavedCartOrderEntriesContext.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SavedCartOrderEntriesContext, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SavedCartOrderEntriesContext, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.ActionsSubject }, { type: i2.UserIdService }, { type: i2.MultiCartService }, { type: SavedCartFacade }, { type: i2.RoutingService }]; } });\n\nclass NewSavedCartOrderEntriesContext extends CartOrderEntriesContext {\n    constructor(actionsSubject, userIdService, multiCartService, savedCartService) {\n        super(actionsSubject);\n        this.actionsSubject = actionsSubject;\n        this.userIdService = userIdService;\n        this.multiCartService = multiCartService;\n        this.savedCartService = savedCartService;\n        this.type = OrderEntriesSource.NEW_SAVED_CART;\n    }\n    addEntries(products, savedCartInfo) {\n        return this.add(products, savedCartInfo).pipe(switchMap((cartId) => this.getResults(cartId)), take(products.length));\n    }\n    add(products, savedCartInfo) {\n        return this.userIdService.takeUserId().pipe(switchMap((userId) => this.multiCartService\n            .createCart({\n            userId,\n            extraData: { active: false },\n        })\n            .pipe(filter((cartData) => { var _a; return Boolean((_a = cartData.value) === null || _a === void 0 ? void 0 : _a.code); }), map((cartData) => { var _a; return (_a = cartData.value) === null || _a === void 0 ? void 0 : _a.code; }), tap((cartId) => {\n            this.savedCartService.saveCart({\n                cartId,\n                saveCartName: savedCartInfo === null || savedCartInfo === void 0 ? void 0 : savedCartInfo.name,\n                saveCartDescription: savedCartInfo === null || savedCartInfo === void 0 ? void 0 : savedCartInfo.description,\n            });\n            this.savedCartService.loadSavedCarts();\n        }), observeOn(queueScheduler), delayWhen(() => this.savedCartService\n            .getSaveCartProcessLoading()\n            .pipe(filter((loading) => !loading))), tap((cartId) => this.multiCartService.addEntries(userId, cartId, products)))));\n    }\n}\nNewSavedCartOrderEntriesContext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: NewSavedCartOrderEntriesContext, deps: [{ token: i1.ActionsSubject }, { token: i2.UserIdService }, { token: i2.MultiCartService }, { token: SavedCartFacade }], target: i0.ɵɵFactoryTarget.Injectable });\nNewSavedCartOrderEntriesContext.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: NewSavedCartOrderEntriesContext, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: NewSavedCartOrderEntriesContext, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.ActionsSubject }, { type: i2.UserIdService }, { type: i2.MultiCartService }, { type: SavedCartFacade }]; } });\n\n// TODO: Inline this factory when we start releasing Ivy compiled libraries\nfunction defaultCartSavedCartComponentsConfig() {\n    const config = {\n        featureModules: {\n            [CART_SAVED_CART_FEATURE]: {\n                cmsComponents: [\n                    'AddToSavedCartsComponent',\n                    'AccountSavedCartHistoryComponent',\n                    'SavedCartDetailsOverviewComponent',\n                    'SavedCartDetailsItemsComponent',\n                    'SavedCartDetailsActionComponent',\n                ],\n            },\n            // by default core is bundled together with components\n            [CART_SAVED_CART_CORE_FEATURE]: CART_SAVED_CART_FEATURE,\n        },\n    };\n    return config;\n}\nclass SavedCartRootModule {\n}\nSavedCartRootModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SavedCartRootModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSavedCartRootModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SavedCartRootModule, imports: [i1$1.RouterModule] });\nSavedCartRootModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SavedCartRootModule, providers: [\n        provideDefaultConfigFactory(defaultCartSavedCartComponentsConfig),\n        provideDefaultConfig({\n            routing: {\n                routes: {\n                    savedCarts: {\n                        paths: ['my-account/saved-carts'],\n                    },\n                    savedCartsDetails: {\n                        paths: ['my-account/saved-cart/:savedCartId'],\n                        paramsMapping: { savedCartId: 'savedCartId' },\n                    },\n                },\n            },\n        }),\n    ], imports: [[\n            RouterModule.forChild([\n                {\n                    // @ts-ignore\n                    path: null,\n                    canActivate: [AuthGuard, CmsPageGuard],\n                    component: PageLayoutComponent,\n                    data: {\n                        cxRoute: 'savedCartsDetails',\n                        cxContext: {\n                            [ORDER_ENTRIES_CONTEXT]: SavedCartOrderEntriesContext,\n                        },\n                    },\n                },\n                {\n                    // @ts-ignore\n                    path: null,\n                    canActivate: [AuthGuard, CmsPageGuard],\n                    component: PageLayoutComponent,\n                    data: {\n                        cxRoute: 'savedCarts',\n                        cxContext: {\n                            [ORDER_ENTRIES_CONTEXT]: NewSavedCartOrderEntriesContext,\n                        },\n                    },\n                },\n            ]),\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SavedCartRootModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        RouterModule.forChild([\n                            {\n                                // @ts-ignore\n                                path: null,\n                                canActivate: [AuthGuard, CmsPageGuard],\n                                component: PageLayoutComponent,\n                                data: {\n                                    cxRoute: 'savedCartsDetails',\n                                    cxContext: {\n                                        [ORDER_ENTRIES_CONTEXT]: SavedCartOrderEntriesContext,\n                                    },\n                                },\n                            },\n                            {\n                                // @ts-ignore\n                                path: null,\n                                canActivate: [AuthGuard, CmsPageGuard],\n                                component: PageLayoutComponent,\n                                data: {\n                                    cxRoute: 'savedCarts',\n                                    cxContext: {\n                                        [ORDER_ENTRIES_CONTEXT]: NewSavedCartOrderEntriesContext,\n                                    },\n                                },\n                            },\n                        ]),\n                    ],\n                    providers: [\n                        provideDefaultConfigFactory(defaultCartSavedCartComponentsConfig),\n                        provideDefaultConfig({\n                            routing: {\n                                routes: {\n                                    savedCarts: {\n                                        paths: ['my-account/saved-carts'],\n                                    },\n                                    savedCartsDetails: {\n                                        paths: ['my-account/saved-cart/:savedCartId'],\n                                        paramsMapping: { savedCartId: 'savedCartId' },\n                                    },\n                                },\n                            },\n                        }),\n                    ],\n                }]\n        }] });\n\n/**\n * Base saved cart event. Most cart events should have these properties.\n */\nclass SavedCartEvent extends CartEvent {\n}\n// =====================================================================\nclass DeleteSavedCartEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nDeleteSavedCartEvent.type = 'DeleteSavedCartEvent';\nclass DeleteSavedCartSuccessEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nDeleteSavedCartSuccessEvent.type = 'DeleteSavedCartSuccessEvent';\nclass DeleteSavedCartFailEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nDeleteSavedCartFailEvent.type = 'DeleteSavedCartFailEvent';\nclass SaveCartEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nSaveCartEvent.type = 'SaveCartEvent';\nclass SaveCartSuccessEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nSaveCartSuccessEvent.type = 'SaveCartSuccessEvent';\nclass SaveCartFailEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nSaveCartFailEvent.type = 'SaveCartEvent';\nclass RestoreSavedCartEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nRestoreSavedCartEvent.type = 'RestoreSavedCartEvent';\nclass RestoreSavedCartSuccessEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nRestoreSavedCartSuccessEvent.type = 'RestoreSavedCartSuccessEvent';\nclass RestoreSavedCartFailEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nRestoreSavedCartFailEvent.type = 'RestoreSavedCartFailEvent';\nclass EditSavedCartEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nEditSavedCartEvent.type = 'EditSavedCartEvent';\nclass EditSavedCartSuccessEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nEditSavedCartSuccessEvent.type = 'EditSavedCartSuccessEvent';\nclass EditSavedCartFailEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nEditSavedCartFailEvent.type = 'EditSavedCartFailEvent';\nclass CloneSavedCartEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nCloneSavedCartEvent.type = 'CloneSavedCartEvent';\nclass CloneSavedCartSuccessEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nCloneSavedCartSuccessEvent.type = 'CloneSavedCartSuccessEvent';\nclass CloneSavedCartFailEvent extends SavedCartEvent {\n}\n/**\n * Event's type\n */\nCloneSavedCartFailEvent.type = 'CloneSavedCartFailEvent';\n\nvar SavedCartFormType;\n(function (SavedCartFormType) {\n    SavedCartFormType[\"EDIT\"] = \"edit\";\n    SavedCartFormType[\"DELETE\"] = \"delete\";\n    SavedCartFormType[\"SAVE\"] = \"save\";\n    SavedCartFormType[\"RESTORE\"] = \"restore\";\n})(SavedCartFormType || (SavedCartFormType = {}));\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CART_SAVED_CART_CORE_FEATURE, CART_SAVED_CART_FEATURE, CloneSavedCartEvent, CloneSavedCartFailEvent, CloneSavedCartSuccessEvent, DeleteSavedCartEvent, DeleteSavedCartFailEvent, DeleteSavedCartSuccessEvent, EditSavedCartEvent, EditSavedCartFailEvent, EditSavedCartSuccessEvent, NewSavedCartOrderEntriesContext, RestoreSavedCartEvent, RestoreSavedCartFailEvent, RestoreSavedCartSuccessEvent, SaveCartEvent, SaveCartFailEvent, SaveCartSuccessEvent, SavedCartEvent, SavedCartFacade, SavedCartFormType, SavedCartOrderEntriesContext, SavedCartRootModule, defaultCartSavedCartComponentsConfig };\n//# sourceMappingURL=spartacus-cart-saved-cart-root.js.map\n"]},"metadata":{},"sourceType":"module"}