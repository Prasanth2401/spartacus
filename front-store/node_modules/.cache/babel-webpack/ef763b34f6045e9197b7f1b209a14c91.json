{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { Config, provideDefaultConfig } from '@spartacus/core';\nimport { OrderEntriesSource } from '@spartacus/storefront';\n\nclass ImportExportConfig {}\n\nImportExportConfig.ɵfac = function ImportExportConfig_Factory(t) {\n  return new (t || ImportExportConfig)();\n};\n\nImportExportConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ImportExportConfig,\n  factory: function ImportExportConfig_Factory(t) {\n    let r = null;\n\n    if (t) {\n      r = new (t || ImportExportConfig)();\n    } else {\n      r = i0.ɵɵinject(Config);\n    }\n\n    return r;\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImportExportConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: Config\n    }]\n  }], null, null);\n})();\n/**\n * Indicates from which source the new saved cart name\n * should be taken.\n */\n\n\nvar CartNameSource;\n\n(function (CartNameSource) {\n  CartNameSource[\"FILE_NAME\"] = \"fileName\";\n  CartNameSource[\"DATE_TIME\"] = \"dateTime\";\n})(CartNameSource || (CartNameSource = {}));\n\nconst defaultImportExportConfig = {\n  cartImportExport: {\n    file: {\n      separator: ','\n    },\n    import: {\n      fileValidity: {\n        maxSize: 1,\n        maxEntries: {\n          [OrderEntriesSource.NEW_SAVED_CART]: 100,\n          [OrderEntriesSource.SAVED_CART]: 100,\n          [OrderEntriesSource.ACTIVE_CART]: 10,\n          [OrderEntriesSource.QUICK_ORDER]: 10\n        },\n        allowedTypes: ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel', 'text/csv', '.csv']\n      },\n      cartNameGeneration: {\n        source: CartNameSource.FILE_NAME\n      }\n    },\n    export: {\n      additionalColumns: [{\n        name: {\n          key: 'name'\n        },\n        value: 'product.name'\n      }, {\n        name: {\n          key: 'price'\n        },\n        value: 'totalPrice.formattedValue'\n      }],\n      messageEnabled: true,\n      downloadDelay: 1000,\n      maxEntries: 1000,\n      fileOptions: {\n        fileName: 'cart',\n        extension: 'csv',\n        type: 'text/csv'\n      }\n    }\n  }\n};\n\nclass ImportExportCoreModule {\n  static forRoot() {\n    return {\n      ngModule: ImportExportCoreModule,\n      providers: [provideDefaultConfig(defaultImportExportConfig)]\n    };\n  }\n\n}\n\nImportExportCoreModule.ɵfac = function ImportExportCoreModule_Factory(t) {\n  return new (t || ImportExportCoreModule)();\n};\n\nImportExportCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ImportExportCoreModule\n});\nImportExportCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImportExportCoreModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CartNameSource, ImportExportConfig, ImportExportCoreModule, defaultImportExportConfig }; //# sourceMappingURL=spartacus-cart-import-export-core.js.map","map":{"version":3,"sources":["D:/spartacus/front-store/node_modules/@spartacus/cart/fesm2015/spartacus-cart-import-export-core.js"],"names":["i0","Injectable","NgModule","Config","provideDefaultConfig","OrderEntriesSource","ImportExportConfig","ɵfac","ɵprov","type","args","providedIn","useExisting","CartNameSource","defaultImportExportConfig","cartImportExport","file","separator","import","fileValidity","maxSize","maxEntries","NEW_SAVED_CART","SAVED_CART","ACTIVE_CART","QUICK_ORDER","allowedTypes","cartNameGeneration","source","FILE_NAME","export","additionalColumns","name","key","value","messageEnabled","downloadDelay","fileOptions","fileName","extension","ImportExportCoreModule","forRoot","ngModule","providers","ɵmod","ɵinj"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,eAArC;AACA,SAASC,MAAT,EAAiBC,oBAAjB,QAA6C,iBAA7C;AACA,SAASC,kBAAT,QAAmC,uBAAnC;;AAEA,MAAMC,kBAAN,CAAyB;;AAEzBA,kBAAkB,CAACC,IAAnB;AAAA,mBAA+GD,kBAA/G;AAAA;;AACAA,kBAAkB,CAACE,KAAnB,kBADqGR,EACrG;AAAA,SAAmHM,kBAAnH;AAAA;AAAA;;AAAA;AAAA,oBAAmHA,kBAAnH;AAAA;AAAA,UADqGN,EACrG,UAAwKG,MAAxK;AAAA;;AAAA;AAAA;AAAA,cAAmJ;AAAnJ;;AACA;AAAA,qDAFqGH,EAErG,mBAA2FM,kBAA3F,EAA2H,CAAC;AAChHG,IAAAA,IAAI,EAAER,UAD0G;AAEhHS,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,UAAU,EAAE,MADb;AAECC,MAAAA,WAAW,EAAET;AAFd,KAAD;AAF0G,GAAD,CAA3H;AAAA;AAQA;AACA;AACA;AACA;;;AACA,IAAIU,cAAJ;;AACA,CAAC,UAAUA,cAAV,EAA0B;AACvBA,EAAAA,cAAc,CAAC,WAAD,CAAd,GAA8B,UAA9B;AACAA,EAAAA,cAAc,CAAC,WAAD,CAAd,GAA8B,UAA9B;AACH,CAHD,EAGGA,cAAc,KAAKA,cAAc,GAAG,EAAtB,CAHjB;;AAKA,MAAMC,yBAAyB,GAAG;AAC9BC,EAAAA,gBAAgB,EAAE;AACdC,IAAAA,IAAI,EAAE;AACFC,MAAAA,SAAS,EAAE;AADT,KADQ;AAIdC,IAAAA,MAAM,EAAE;AACJC,MAAAA,YAAY,EAAE;AACVC,QAAAA,OAAO,EAAE,CADC;AAEVC,QAAAA,UAAU,EAAE;AACR,WAAChB,kBAAkB,CAACiB,cAApB,GAAqC,GAD7B;AAER,WAACjB,kBAAkB,CAACkB,UAApB,GAAiC,GAFzB;AAGR,WAAClB,kBAAkB,CAACmB,WAApB,GAAkC,EAH1B;AAIR,WAACnB,kBAAkB,CAACoB,WAApB,GAAkC;AAJ1B,SAFF;AAQVC,QAAAA,YAAY,EAAE,CACV,mEADU,EAEV,0BAFU,EAGV,UAHU,EAIV,MAJU;AARJ,OADV;AAgBJC,MAAAA,kBAAkB,EAAE;AAChBC,QAAAA,MAAM,EAAEf,cAAc,CAACgB;AADP;AAhBhB,KAJM;AAwBdC,IAAAA,MAAM,EAAE;AACJC,MAAAA,iBAAiB,EAAE,CACf;AACIC,QAAAA,IAAI,EAAE;AACFC,UAAAA,GAAG,EAAE;AADH,SADV;AAIIC,QAAAA,KAAK,EAAE;AAJX,OADe,EAOf;AACIF,QAAAA,IAAI,EAAE;AACFC,UAAAA,GAAG,EAAE;AADH,SADV;AAIIC,QAAAA,KAAK,EAAE;AAJX,OAPe,CADf;AAeJC,MAAAA,cAAc,EAAE,IAfZ;AAgBJC,MAAAA,aAAa,EAAE,IAhBX;AAiBJf,MAAAA,UAAU,EAAE,IAjBR;AAkBJgB,MAAAA,WAAW,EAAE;AACTC,QAAAA,QAAQ,EAAE,MADD;AAETC,QAAAA,SAAS,EAAE,KAFF;AAGT9B,QAAAA,IAAI,EAAE;AAHG;AAlBT;AAxBM;AADY,CAAlC;;AAoDA,MAAM+B,sBAAN,CAA6B;AACX,SAAPC,OAAO,GAAG;AACb,WAAO;AACHC,MAAAA,QAAQ,EAAEF,sBADP;AAEHG,MAAAA,SAAS,EAAE,CAACvC,oBAAoB,CAACU,yBAAD,CAArB;AAFR,KAAP;AAIH;;AANwB;;AAQ7B0B,sBAAsB,CAACjC,IAAvB;AAAA,mBAAmHiC,sBAAnH;AAAA;;AACAA,sBAAsB,CAACI,IAAvB,kBAjFqG5C,EAiFrG;AAAA,QAAoHwC;AAApH;AACAA,sBAAsB,CAACK,IAAvB,kBAlFqG7C,EAkFrG;;AACA;AAAA,qDAnFqGA,EAmFrG,mBAA2FwC,sBAA3F,EAA+H,CAAC;AACpH/B,IAAAA,IAAI,EAAEP,QAD8G;AAEpHQ,IAAAA,IAAI,EAAE,CAAC,EAAD;AAF8G,GAAD,CAA/H;AAAA;AAKA;AACA;AACA;;;AAEA,SAASG,cAAT,EAAyBP,kBAAzB,EAA6CkC,sBAA7C,EAAqE1B,yBAArE,G,CACA","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { Config, provideDefaultConfig } from '@spartacus/core';\nimport { OrderEntriesSource } from '@spartacus/storefront';\n\nclass ImportExportConfig {\n}\nImportExportConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nImportExportConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportConfig, providedIn: 'root', useExisting: Config });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useExisting: Config,\n                }]\n        }] });\n\n/**\n * Indicates from which source the new saved cart name\n * should be taken.\n */\nvar CartNameSource;\n(function (CartNameSource) {\n    CartNameSource[\"FILE_NAME\"] = \"fileName\";\n    CartNameSource[\"DATE_TIME\"] = \"dateTime\";\n})(CartNameSource || (CartNameSource = {}));\n\nconst defaultImportExportConfig = {\n    cartImportExport: {\n        file: {\n            separator: ',',\n        },\n        import: {\n            fileValidity: {\n                maxSize: 1,\n                maxEntries: {\n                    [OrderEntriesSource.NEW_SAVED_CART]: 100,\n                    [OrderEntriesSource.SAVED_CART]: 100,\n                    [OrderEntriesSource.ACTIVE_CART]: 10,\n                    [OrderEntriesSource.QUICK_ORDER]: 10,\n                },\n                allowedTypes: [\n                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                    'application/vnd.ms-excel',\n                    'text/csv',\n                    '.csv',\n                ],\n            },\n            cartNameGeneration: {\n                source: CartNameSource.FILE_NAME,\n            },\n        },\n        export: {\n            additionalColumns: [\n                {\n                    name: {\n                        key: 'name',\n                    },\n                    value: 'product.name',\n                },\n                {\n                    name: {\n                        key: 'price',\n                    },\n                    value: 'totalPrice.formattedValue',\n                },\n            ],\n            messageEnabled: true,\n            downloadDelay: 1000,\n            maxEntries: 1000,\n            fileOptions: {\n                fileName: 'cart',\n                extension: 'csv',\n                type: 'text/csv',\n            },\n        },\n    },\n};\n\nclass ImportExportCoreModule {\n    static forRoot() {\n        return {\n            ngModule: ImportExportCoreModule,\n            providers: [provideDefaultConfig(defaultImportExportConfig)],\n        };\n    }\n}\nImportExportCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nImportExportCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportCoreModule });\nImportExportCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportCoreModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportCoreModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CartNameSource, ImportExportConfig, ImportExportCoreModule, defaultImportExportConfig };\n//# sourceMappingURL=spartacus-cart-import-export-core.js.map\n"]},"metadata":{},"sourceType":"module"}