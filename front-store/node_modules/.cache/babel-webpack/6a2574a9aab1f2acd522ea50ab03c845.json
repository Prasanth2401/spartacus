{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { NgModule, isDevMode, Injectable } from '@angular/core';\nimport { EMPTY } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport * as i1 from '@spartacus/tracking/personalization/root';\nimport * as i2 from '@spartacus/core';\n\nclass PersonalizationCoreModule {}\n\nPersonalizationCoreModule.ɵfac = function PersonalizationCoreModule_Factory(t) {\n  return new (t || PersonalizationCoreModule)();\n};\n\nPersonalizationCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PersonalizationCoreModule\n});\nPersonalizationCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersonalizationCoreModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\nclass PersonalizationContextService {\n  constructor(config, cmsService) {\n    this.config = config;\n    this.cmsService = cmsService;\n  }\n\n  getPersonalizationContext() {\n    var _a;\n\n    if (!((_a = this.config.personalization) === null || _a === void 0 ? void 0 : _a.context)) {\n      if (isDevMode()) {\n        console.warn(`There is no context configured in Personalization.`);\n      }\n\n      return EMPTY;\n    } else {\n      const context = this.config.personalization.context;\n      return this.cmsService.getCurrentPage().pipe(filter(Boolean), map(page => {\n        var _a;\n\n        return (_a = page.slots) === null || _a === void 0 ? void 0 : _a[context.slotPosition];\n      }), filter(Boolean), map(slot => {\n        var _a, _b, _c;\n\n        const scriptComponent = (_a = slot.components) === null || _a === void 0 ? void 0 : _a.find(i => i.uid === context.componentId);\n        return this.buildPersonalizationContext((_c = (_b = scriptComponent === null || scriptComponent === void 0 ? void 0 : scriptComponent.properties) === null || _b === void 0 ? void 0 : _b.script) === null || _c === void 0 ? void 0 : _c.data);\n      }));\n    }\n  }\n\n  buildPersonalizationContext(data) {\n    if (data) {\n      const context = JSON.parse(atob(data));\n      context.actions.forEach(action => {\n        Object.keys(action).forEach(key => {\n          action[key] = atob(action[key]);\n        });\n      });\n\n      for (let i = 0; i < context.segments.length; i++) {\n        context.segments[i] = atob(context.segments[i]);\n      }\n\n      return context;\n    }\n  }\n\n}\n\nPersonalizationContextService.ɵfac = function PersonalizationContextService_Factory(t) {\n  return new (t || PersonalizationContextService)(i0.ɵɵinject(i1.PersonalizationConfig), i0.ɵɵinject(i2.CmsService));\n};\n\nPersonalizationContextService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PersonalizationContextService,\n  factory: PersonalizationContextService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersonalizationContextService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.PersonalizationConfig\n    }, {\n      type: i2.CmsService\n    }];\n  }, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { PersonalizationContextService, PersonalizationCoreModule }; //# sourceMappingURL=spartacus-tracking-personalization-core.js.map","map":{"version":3,"sources":["D:/spartacus/front-store/node_modules/@spartacus/tracking/fesm2015/spartacus-tracking-personalization-core.js"],"names":["i0","NgModule","isDevMode","Injectable","EMPTY","filter","map","i1","i2","PersonalizationCoreModule","ɵfac","ɵmod","ɵinj","type","args","PersonalizationContextService","constructor","config","cmsService","getPersonalizationContext","_a","personalization","context","console","warn","getCurrentPage","pipe","Boolean","page","slots","slotPosition","slot","_b","_c","scriptComponent","components","find","i","uid","componentId","buildPersonalizationContext","properties","script","data","JSON","parse","atob","actions","forEach","action","Object","keys","key","segments","length","PersonalizationConfig","CmsService","ɵprov","providedIn"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { NgModule, isDevMode, Injectable } from '@angular/core';\nimport { EMPTY } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport * as i1 from '@spartacus/tracking/personalization/root';\nimport * as i2 from '@spartacus/core';\n\nclass PersonalizationCoreModule {\n}\nPersonalizationCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PersonalizationCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPersonalizationCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PersonalizationCoreModule });\nPersonalizationCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PersonalizationCoreModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PersonalizationCoreModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\nclass PersonalizationContextService {\n    constructor(config, cmsService) {\n        this.config = config;\n        this.cmsService = cmsService;\n    }\n    getPersonalizationContext() {\n        var _a;\n        if (!((_a = this.config.personalization) === null || _a === void 0 ? void 0 : _a.context)) {\n            if (isDevMode()) {\n                console.warn(`There is no context configured in Personalization.`);\n            }\n            return EMPTY;\n        }\n        else {\n            const context = this.config.personalization.context;\n            return this.cmsService.getCurrentPage().pipe(filter(Boolean), map((page) => { var _a; return (_a = page.slots) === null || _a === void 0 ? void 0 : _a[context.slotPosition]; }), filter(Boolean), map((slot) => {\n                var _a, _b, _c;\n                const scriptComponent = (_a = slot.components) === null || _a === void 0 ? void 0 : _a.find((i) => i.uid === context.componentId);\n                return this.buildPersonalizationContext((_c = (_b = scriptComponent === null || scriptComponent === void 0 ? void 0 : scriptComponent.properties) === null || _b === void 0 ? void 0 : _b.script) === null || _c === void 0 ? void 0 : _c.data);\n            }));\n        }\n    }\n    buildPersonalizationContext(data) {\n        if (data) {\n            const context = JSON.parse(atob(data));\n            context.actions.forEach((action) => {\n                Object.keys(action).forEach((key) => {\n                    action[key] = atob(action[key]);\n                });\n            });\n            for (let i = 0; i < context.segments.length; i++) {\n                context.segments[i] = atob(context.segments[i]);\n            }\n            return context;\n        }\n    }\n}\nPersonalizationContextService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PersonalizationContextService, deps: [{ token: i1.PersonalizationConfig }, { token: i2.CmsService }], target: i0.ɵɵFactoryTarget.Injectable });\nPersonalizationContextService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PersonalizationContextService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PersonalizationContextService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.PersonalizationConfig }, { type: i2.CmsService }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PersonalizationContextService, PersonalizationCoreModule };\n//# sourceMappingURL=spartacus-tracking-personalization-core.js.map\n"]},"metadata":{},"sourceType":"module"}