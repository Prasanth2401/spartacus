{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@ngrx/store';\nimport { createFeatureSelector, createSelector, select, StoreModule } from '@ngrx/store';\nimport * as i2 from '@spartacus/core';\nimport { StateUtils, PROCESS_FEATURE, ProcessSelectors, normalizeHttpError, GlobalMessageType, SiteContextActions } from '@spartacus/core';\nimport { tap, map, take, switchMap, catchError } from 'rxjs/operators';\nimport { OrderReturnRequestFacade, OrderFacade, ReplenishmentOrderFacade } from '@spartacus/order/root';\nimport * as i1$1 from '@ngrx/effects';\nimport { ofType, Effect, EffectsModule } from '@ngrx/effects';\nimport { __decorate } from 'tslib';\nimport { of } from 'rxjs';\nconst ORDER_HISTORY_NORMALIZER = new InjectionToken('OrderHistoryNormalizer');\nconst CONSIGNMENT_TRACKING_NORMALIZER = new InjectionToken('ConsignmentTrackingNormalizer');\nconst ORDER_RETURN_REQUEST_NORMALIZER = new InjectionToken('OrderReturnRequestNormalizer');\nconst ORDER_RETURN_REQUEST_INPUT_SERIALIZER = new InjectionToken('OrderReturnRequestInputSerializer');\nconst ORDER_RETURNS_NORMALIZER = new InjectionToken('OrderReturnsNormalizer');\nconst REPLENISHMENT_ORDER_HISTORY_NORMALIZER = new InjectionToken('ReplenishmentOrderHistoryNormalizer');\n\nclass OrderAdapter {}\n\nclass OrderConnector {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n\n  get(userId, orderCode) {\n    return this.adapter.load(userId, orderCode);\n  }\n\n  getHistory(userId, pageSize, currentPage, sort) {\n    return this.adapter.loadHistory(userId, pageSize, currentPage, sort);\n  }\n\n  getConsignmentTracking(orderCode, consignmentCode, userId) {\n    return this.adapter.getConsignmentTracking(orderCode, consignmentCode, userId);\n  }\n\n  cancel(userId, orderCode, cancelRequestInput) {\n    return this.adapter.cancel(userId, orderCode, cancelRequestInput);\n  }\n\n  return(userId, returnRequestInput) {\n    return this.adapter.createReturnRequest(userId, returnRequestInput);\n  }\n\n  getReturnRequestDetail(userId, returnRequestCode) {\n    return this.adapter.loadReturnRequestDetail(userId, returnRequestCode);\n  }\n\n  getReturnRequestList(userId, pageSize, currentPage, sort) {\n    return this.adapter.loadReturnRequestList(userId, pageSize, currentPage, sort);\n  }\n\n  cancelReturnRequest(userId, returnRequestCode, returnRequestModification) {\n    return this.adapter.cancelReturnRequest(userId, returnRequestCode, returnRequestModification);\n  }\n\n}\n\nOrderConnector.ɵfac = function OrderConnector_Factory(t) {\n  return new (t || OrderConnector)(i0.ɵɵinject(OrderAdapter));\n};\n\nOrderConnector.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrderConnector,\n  factory: OrderConnector.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrderConnector, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: OrderAdapter\n    }];\n  }, null);\n})();\n\nclass ReplenishmentOrderAdapter {}\n\nclass ReplenishmentOrderConnector {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n\n  load(userId, replenishmentOrderCode) {\n    return this.adapter.load(userId, replenishmentOrderCode);\n  }\n\n  loadReplenishmentDetailsHistory(userId, replenishmentOrderCode, pageSize, currentPage, sort) {\n    return this.adapter.loadReplenishmentDetailsHistory(userId, replenishmentOrderCode, pageSize, currentPage, sort);\n  }\n\n  cancelReplenishmentOrder(userId, replenishmentOrderCode) {\n    return this.adapter.cancelReplenishmentOrder(userId, replenishmentOrderCode);\n  }\n\n  loadHistory(userId, pageSize, currentPage, sort) {\n    return this.adapter.loadHistory(userId, pageSize, currentPage, sort);\n  }\n\n}\n\nReplenishmentOrderConnector.ɵfac = function ReplenishmentOrderConnector_Factory(t) {\n  return new (t || ReplenishmentOrderConnector)(i0.ɵɵinject(ReplenishmentOrderAdapter));\n};\n\nReplenishmentOrderConnector.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ReplenishmentOrderConnector,\n  factory: ReplenishmentOrderConnector.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReplenishmentOrderConnector, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ReplenishmentOrderAdapter\n    }];\n  }, null);\n})();\n\nconst LOAD_CONSIGNMENT_TRACKING = '[Order] Load Consignment Tracking';\nconst LOAD_CONSIGNMENT_TRACKING_FAIL = '[Order] Load Consignment Tracking Fail';\nconst LOAD_CONSIGNMENT_TRACKING_SUCCESS = '[Order] Load Consignment Tracking Success';\nconst CLEAR_CONSIGNMENT_TRACKING = '[Order] Clear Consignment Tracking';\n\nclass LoadConsignmentTracking {\n  constructor(payload) {\n    this.payload = payload;\n    this.type = LOAD_CONSIGNMENT_TRACKING;\n  }\n\n}\n\nclass LoadConsignmentTrackingFail {\n  constructor(payload) {\n    this.payload = payload;\n    this.type = LOAD_CONSIGNMENT_TRACKING_FAIL;\n  }\n\n}\n\nclass LoadConsignmentTrackingSuccess {\n  constructor(payload) {\n    this.payload = payload;\n    this.type = LOAD_CONSIGNMENT_TRACKING_SUCCESS;\n  }\n\n}\n\nclass ClearConsignmentTracking {\n  constructor() {\n    this.type = CLEAR_CONSIGNMENT_TRACKING;\n  }\n\n}\n\nconst ORDER_FEATURE = 'order';\nconst CANCEL_ORDER_PROCESS_ID = 'cancelOrder';\nconst CANCEL_RETURN_PROCESS_ID = 'cancelReturn';\nconst CANCEL_REPLENISHMENT_ORDER_PROCESS_ID = 'cancelReplenishmentOrder';\nconst ORDERS = '[Order] User Orders';\nconst RETURN_REQUESTS = '[Order] Order Return Requests';\nconst RETURN_REQUEST_DETAILS = '[Order] Return Request Details';\nconst ORDER_DETAILS = '[Order] User Order Details';\nconst REPLENISHMENT_ORDERS = '[Order] User Replenishment Orders';\nconst REPLENISHMENT_ORDER_DETAILS = '[Order] User Replenishment Order Details';\nconst LOAD_ORDER_DETAILS = '[Order] Load Order Details';\nconst LOAD_ORDER_DETAILS_FAIL = '[Order] Load Order Details Fail';\nconst LOAD_ORDER_DETAILS_SUCCESS = '[Order] Load Order Details Success';\nconst CLEAR_ORDER_DETAILS = '[Order] Clear Order Details';\nconst CANCEL_ORDER = '[Order] Cancel Order';\nconst CANCEL_ORDER_FAIL = '[Order] Cancel Order Fail';\nconst CANCEL_ORDER_SUCCESS = '[Order] Cancel Order Success';\nconst RESET_CANCEL_ORDER_PROCESS = '[Order] Reset Cancel Order Process';\n\nclass LoadOrderDetails extends StateUtils.LoaderLoadAction {\n  constructor(payload) {\n    super(ORDER_DETAILS);\n    this.payload = payload;\n    this.type = LOAD_ORDER_DETAILS;\n  }\n\n}\n\nclass LoadOrderDetailsFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(ORDER_DETAILS, payload);\n    this.payload = payload;\n    this.type = LOAD_ORDER_DETAILS_FAIL;\n  }\n\n}\n\nclass LoadOrderDetailsSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(ORDER_DETAILS);\n    this.payload = payload;\n    this.type = LOAD_ORDER_DETAILS_SUCCESS;\n  }\n\n}\n\nclass ClearOrderDetails extends StateUtils.LoaderResetAction {\n  constructor() {\n    super(ORDER_DETAILS);\n    this.type = CLEAR_ORDER_DETAILS;\n  }\n\n}\n\nclass CancelOrder extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID);\n    this.payload = payload;\n    this.type = CANCEL_ORDER;\n  }\n\n}\n\nclass CancelOrderFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID, payload);\n    this.payload = payload;\n    this.type = CANCEL_ORDER_FAIL;\n  }\n\n}\n\nclass CancelOrderSuccess extends StateUtils.EntitySuccessAction {\n  constructor() {\n    super(PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID);\n    this.type = CANCEL_ORDER_SUCCESS;\n  }\n\n}\n\nclass ResetCancelOrderProcess extends StateUtils.EntityLoaderResetAction {\n  constructor() {\n    super(PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID);\n    this.type = RESET_CANCEL_ORDER_PROCESS;\n  }\n\n}\n\nconst CREATE_ORDER_RETURN_REQUEST = '[Order] Create Order Return Request';\nconst CREATE_ORDER_RETURN_REQUEST_FAIL = '[Order] Create Order Return Request Fail';\nconst CREATE_ORDER_RETURN_REQUEST_SUCCESS = '[Order] Create Order Return Request Success';\nconst LOAD_ORDER_RETURN_REQUEST = '[Order] Load Order Return Request details';\nconst LOAD_ORDER_RETURN_REQUEST_FAIL = '[Order] Load Order Return Request details Fail';\nconst LOAD_ORDER_RETURN_REQUEST_SUCCESS = '[Order] Load Order Return Request details Success';\nconst CANCEL_ORDER_RETURN_REQUEST = '[Order] Cancel Order Return Request';\nconst CANCEL_ORDER_RETURN_REQUEST_FAIL = '[Order] Cancel Order Return Request Fail';\nconst CANCEL_ORDER_RETURN_REQUEST_SUCCESS = '[Order] Cancel Order Return Request Success';\nconst LOAD_ORDER_RETURN_REQUEST_LIST = '[Order] Load User Order Return Request List';\nconst LOAD_ORDER_RETURN_REQUEST_LIST_FAIL = '[Order] Load User Order Return Request List Fail';\nconst LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS = '[Order] Load User Order Return Request List Success';\nconst CLEAR_ORDER_RETURN_REQUEST = '[Order] Clear Order Return Request Details';\nconst CLEAR_ORDER_RETURN_REQUEST_LIST = '[Order] Clear Order Return Request List';\nconst RESET_CANCEL_RETURN_PROCESS = '[Order] Reset Cancel Return Request Process';\n\nclass CreateOrderReturnRequest extends StateUtils.LoaderLoadAction {\n  constructor(payload) {\n    super(RETURN_REQUEST_DETAILS);\n    this.payload = payload;\n    this.type = CREATE_ORDER_RETURN_REQUEST;\n  }\n\n}\n\nclass CreateOrderReturnRequestFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(RETURN_REQUEST_DETAILS, payload);\n    this.payload = payload;\n    this.type = CREATE_ORDER_RETURN_REQUEST_FAIL;\n  }\n\n}\n\nclass CreateOrderReturnRequestSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(RETURN_REQUEST_DETAILS);\n    this.payload = payload;\n    this.type = CREATE_ORDER_RETURN_REQUEST_SUCCESS;\n  }\n\n}\n\nclass LoadOrderReturnRequest extends StateUtils.LoaderLoadAction {\n  constructor(payload) {\n    super(RETURN_REQUEST_DETAILS);\n    this.payload = payload;\n    this.type = LOAD_ORDER_RETURN_REQUEST;\n  }\n\n}\n\nclass LoadOrderReturnRequestFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(RETURN_REQUEST_DETAILS, payload);\n    this.payload = payload;\n    this.type = LOAD_ORDER_RETURN_REQUEST_FAIL;\n  }\n\n}\n\nclass LoadOrderReturnRequestSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(RETURN_REQUEST_DETAILS);\n    this.payload = payload;\n    this.type = LOAD_ORDER_RETURN_REQUEST_SUCCESS;\n  }\n\n}\n\nclass CancelOrderReturnRequest extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID);\n    this.payload = payload;\n    this.type = CANCEL_ORDER_RETURN_REQUEST;\n  }\n\n}\n\nclass CancelOrderReturnRequestFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID, payload);\n    this.payload = payload;\n    this.type = CANCEL_ORDER_RETURN_REQUEST_FAIL;\n  }\n\n}\n\nclass CancelOrderReturnRequestSuccess extends StateUtils.EntitySuccessAction {\n  constructor() {\n    super(PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID);\n    this.type = CANCEL_ORDER_RETURN_REQUEST_SUCCESS;\n  }\n\n}\n\nclass LoadOrderReturnRequestList extends StateUtils.LoaderLoadAction {\n  constructor(payload) {\n    super(RETURN_REQUESTS);\n    this.payload = payload;\n    this.type = LOAD_ORDER_RETURN_REQUEST_LIST;\n  }\n\n}\n\nclass LoadOrderReturnRequestListFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(RETURN_REQUESTS, payload);\n    this.payload = payload;\n    this.type = LOAD_ORDER_RETURN_REQUEST_LIST_FAIL;\n  }\n\n}\n\nclass LoadOrderReturnRequestListSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(RETURN_REQUESTS);\n    this.payload = payload;\n    this.type = LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS;\n  }\n\n}\n\nclass ClearOrderReturnRequest extends StateUtils.LoaderResetAction {\n  constructor() {\n    super(RETURN_REQUEST_DETAILS);\n    this.type = CLEAR_ORDER_RETURN_REQUEST;\n  }\n\n}\n\nclass ClearOrderReturnRequestList extends StateUtils.LoaderResetAction {\n  constructor() {\n    super(RETURN_REQUESTS);\n    this.type = CLEAR_ORDER_RETURN_REQUEST_LIST;\n  }\n\n}\n\nclass ResetCancelReturnProcess extends StateUtils.EntityLoaderResetAction {\n  constructor() {\n    super(PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID);\n    this.type = RESET_CANCEL_RETURN_PROCESS;\n  }\n\n}\n\nconst LOAD_USER_ORDERS = '[Order] Load User Orders';\nconst LOAD_USER_ORDERS_FAIL = '[Order] Load User Orders Fail';\nconst LOAD_USER_ORDERS_SUCCESS = '[Order] Load User Orders Success';\nconst CLEAR_USER_ORDERS = '[Order] Clear User Orders';\n\nclass LoadUserOrders extends StateUtils.LoaderLoadAction {\n  constructor(payload) {\n    super(ORDERS);\n    this.payload = payload;\n    this.type = LOAD_USER_ORDERS;\n  }\n\n}\n\nclass LoadUserOrdersFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(ORDERS, payload);\n    this.payload = payload;\n    this.type = LOAD_USER_ORDERS_FAIL;\n  }\n\n}\n\nclass LoadUserOrdersSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(ORDERS);\n    this.payload = payload;\n    this.type = LOAD_USER_ORDERS_SUCCESS;\n  }\n\n}\n\nclass ClearUserOrders extends StateUtils.LoaderResetAction {\n  constructor() {\n    super(ORDERS);\n    this.type = CLEAR_USER_ORDERS;\n  }\n\n}\n\nconst LOAD_REPLENISHMENT_ORDER_DETAILS = '[Order] Load Replenishment Order Details';\nconst LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS = '[Order] Load Replenishment Order Details Success';\nconst LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL = '[Order] Load Replenishment Order Details Fail';\nconst ClEAR_REPLENISHMENT_ORDER_DETAILS = '[Order] Clear Replenishment Order Details';\nconst CANCEL_REPLENISHMENT_ORDER = '[Order] Cancel Replenishment Order';\nconst CANCEL_REPLENISHMENT_ORDER_SUCCESS = '[Order] Cancel Replenishment Order Success';\nconst CANCEL_REPLENISHMENT_ORDER_FAIL = '[Order] Cancel Replenishment Order Fail';\nconst CLEAR_CANCEL_REPLENISHMENT_ORDER = '[Order] Clear Cancel Replenishment Order';\n\nclass LoadReplenishmentOrderDetails extends StateUtils.LoaderLoadAction {\n  constructor(payload) {\n    super(REPLENISHMENT_ORDER_DETAILS);\n    this.payload = payload;\n    this.type = LOAD_REPLENISHMENT_ORDER_DETAILS;\n  }\n\n}\n\nclass LoadReplenishmentOrderDetailsSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(REPLENISHMENT_ORDER_DETAILS);\n    this.payload = payload;\n    this.type = LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS;\n  }\n\n}\n\nclass LoadReplenishmentOrderDetailsFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(REPLENISHMENT_ORDER_DETAILS, payload);\n    this.payload = payload;\n    this.type = LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL;\n  }\n\n}\n\nclass ClearReplenishmentOrderDetails extends StateUtils.LoaderResetAction {\n  constructor() {\n    super(REPLENISHMENT_ORDER_DETAILS);\n    this.type = ClEAR_REPLENISHMENT_ORDER_DETAILS;\n  }\n\n}\n\nclass CancelReplenishmentOrder extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);\n    this.payload = payload;\n    this.type = CANCEL_REPLENISHMENT_ORDER;\n  }\n\n}\n\nclass CancelReplenishmentOrderSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);\n    this.payload = payload;\n    this.type = CANCEL_REPLENISHMENT_ORDER_SUCCESS;\n  }\n\n}\n\nclass CancelReplenishmentOrderFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID, payload);\n    this.payload = payload;\n    this.type = CANCEL_REPLENISHMENT_ORDER_FAIL;\n  }\n\n}\n\nclass ClearCancelReplenishmentOrder extends StateUtils.EntityLoaderResetAction {\n  constructor() {\n    super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);\n    this.type = CLEAR_CANCEL_REPLENISHMENT_ORDER;\n  }\n\n}\n\nconst LOAD_USER_REPLENISHMENT_ORDERS = '[Order] Load User Replenishment Orders';\nconst LOAD_USER_REPLENISHMENT_ORDERS_FAIL = '[Order] Load User Replenishment Orders Fail';\nconst LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS = '[Order] Load User Replenishment Orders Success';\nconst CLEAR_USER_REPLENISHMENT_ORDERS = '[Order] Clear User Replenishment Orders';\n\nclass LoadUserReplenishmentOrders extends StateUtils.LoaderLoadAction {\n  constructor(payload) {\n    super(REPLENISHMENT_ORDERS);\n    this.payload = payload;\n    this.type = LOAD_USER_REPLENISHMENT_ORDERS;\n  }\n\n}\n\nclass LoadUserReplenishmentOrdersFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(REPLENISHMENT_ORDERS, payload);\n    this.payload = payload;\n    this.type = LOAD_USER_REPLENISHMENT_ORDERS_FAIL;\n  }\n\n}\n\nclass LoadUserReplenishmentOrdersSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(REPLENISHMENT_ORDERS);\n    this.payload = payload;\n    this.type = LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS;\n  }\n\n}\n\nclass ClearUserReplenishmentOrders extends StateUtils.LoaderResetAction {\n  constructor() {\n    super(REPLENISHMENT_ORDERS);\n    this.type = CLEAR_USER_REPLENISHMENT_ORDERS;\n  }\n\n}\n\nvar orderGroup_actions = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LOAD_CONSIGNMENT_TRACKING: LOAD_CONSIGNMENT_TRACKING,\n  LOAD_CONSIGNMENT_TRACKING_FAIL: LOAD_CONSIGNMENT_TRACKING_FAIL,\n  LOAD_CONSIGNMENT_TRACKING_SUCCESS: LOAD_CONSIGNMENT_TRACKING_SUCCESS,\n  CLEAR_CONSIGNMENT_TRACKING: CLEAR_CONSIGNMENT_TRACKING,\n  LoadConsignmentTracking: LoadConsignmentTracking,\n  LoadConsignmentTrackingFail: LoadConsignmentTrackingFail,\n  LoadConsignmentTrackingSuccess: LoadConsignmentTrackingSuccess,\n  ClearConsignmentTracking: ClearConsignmentTracking,\n  LOAD_ORDER_DETAILS: LOAD_ORDER_DETAILS,\n  LOAD_ORDER_DETAILS_FAIL: LOAD_ORDER_DETAILS_FAIL,\n  LOAD_ORDER_DETAILS_SUCCESS: LOAD_ORDER_DETAILS_SUCCESS,\n  CLEAR_ORDER_DETAILS: CLEAR_ORDER_DETAILS,\n  CANCEL_ORDER: CANCEL_ORDER,\n  CANCEL_ORDER_FAIL: CANCEL_ORDER_FAIL,\n  CANCEL_ORDER_SUCCESS: CANCEL_ORDER_SUCCESS,\n  RESET_CANCEL_ORDER_PROCESS: RESET_CANCEL_ORDER_PROCESS,\n  LoadOrderDetails: LoadOrderDetails,\n  LoadOrderDetailsFail: LoadOrderDetailsFail,\n  LoadOrderDetailsSuccess: LoadOrderDetailsSuccess,\n  ClearOrderDetails: ClearOrderDetails,\n  CancelOrder: CancelOrder,\n  CancelOrderFail: CancelOrderFail,\n  CancelOrderSuccess: CancelOrderSuccess,\n  ResetCancelOrderProcess: ResetCancelOrderProcess,\n  CREATE_ORDER_RETURN_REQUEST: CREATE_ORDER_RETURN_REQUEST,\n  CREATE_ORDER_RETURN_REQUEST_FAIL: CREATE_ORDER_RETURN_REQUEST_FAIL,\n  CREATE_ORDER_RETURN_REQUEST_SUCCESS: CREATE_ORDER_RETURN_REQUEST_SUCCESS,\n  LOAD_ORDER_RETURN_REQUEST: LOAD_ORDER_RETURN_REQUEST,\n  LOAD_ORDER_RETURN_REQUEST_FAIL: LOAD_ORDER_RETURN_REQUEST_FAIL,\n  LOAD_ORDER_RETURN_REQUEST_SUCCESS: LOAD_ORDER_RETURN_REQUEST_SUCCESS,\n  CANCEL_ORDER_RETURN_REQUEST: CANCEL_ORDER_RETURN_REQUEST,\n  CANCEL_ORDER_RETURN_REQUEST_FAIL: CANCEL_ORDER_RETURN_REQUEST_FAIL,\n  CANCEL_ORDER_RETURN_REQUEST_SUCCESS: CANCEL_ORDER_RETURN_REQUEST_SUCCESS,\n  LOAD_ORDER_RETURN_REQUEST_LIST: LOAD_ORDER_RETURN_REQUEST_LIST,\n  LOAD_ORDER_RETURN_REQUEST_LIST_FAIL: LOAD_ORDER_RETURN_REQUEST_LIST_FAIL,\n  LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS: LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS,\n  CLEAR_ORDER_RETURN_REQUEST: CLEAR_ORDER_RETURN_REQUEST,\n  CLEAR_ORDER_RETURN_REQUEST_LIST: CLEAR_ORDER_RETURN_REQUEST_LIST,\n  RESET_CANCEL_RETURN_PROCESS: RESET_CANCEL_RETURN_PROCESS,\n  CreateOrderReturnRequest: CreateOrderReturnRequest,\n  CreateOrderReturnRequestFail: CreateOrderReturnRequestFail,\n  CreateOrderReturnRequestSuccess: CreateOrderReturnRequestSuccess,\n  LoadOrderReturnRequest: LoadOrderReturnRequest,\n  LoadOrderReturnRequestFail: LoadOrderReturnRequestFail,\n  LoadOrderReturnRequestSuccess: LoadOrderReturnRequestSuccess,\n  CancelOrderReturnRequest: CancelOrderReturnRequest,\n  CancelOrderReturnRequestFail: CancelOrderReturnRequestFail,\n  CancelOrderReturnRequestSuccess: CancelOrderReturnRequestSuccess,\n  LoadOrderReturnRequestList: LoadOrderReturnRequestList,\n  LoadOrderReturnRequestListFail: LoadOrderReturnRequestListFail,\n  LoadOrderReturnRequestListSuccess: LoadOrderReturnRequestListSuccess,\n  ClearOrderReturnRequest: ClearOrderReturnRequest,\n  ClearOrderReturnRequestList: ClearOrderReturnRequestList,\n  ResetCancelReturnProcess: ResetCancelReturnProcess,\n  LOAD_USER_ORDERS: LOAD_USER_ORDERS,\n  LOAD_USER_ORDERS_FAIL: LOAD_USER_ORDERS_FAIL,\n  LOAD_USER_ORDERS_SUCCESS: LOAD_USER_ORDERS_SUCCESS,\n  CLEAR_USER_ORDERS: CLEAR_USER_ORDERS,\n  LoadUserOrders: LoadUserOrders,\n  LoadUserOrdersFail: LoadUserOrdersFail,\n  LoadUserOrdersSuccess: LoadUserOrdersSuccess,\n  ClearUserOrders: ClearUserOrders,\n  LOAD_REPLENISHMENT_ORDER_DETAILS: LOAD_REPLENISHMENT_ORDER_DETAILS,\n  LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS: LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS,\n  LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL: LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL,\n  ClEAR_REPLENISHMENT_ORDER_DETAILS: ClEAR_REPLENISHMENT_ORDER_DETAILS,\n  CANCEL_REPLENISHMENT_ORDER: CANCEL_REPLENISHMENT_ORDER,\n  CANCEL_REPLENISHMENT_ORDER_SUCCESS: CANCEL_REPLENISHMENT_ORDER_SUCCESS,\n  CANCEL_REPLENISHMENT_ORDER_FAIL: CANCEL_REPLENISHMENT_ORDER_FAIL,\n  CLEAR_CANCEL_REPLENISHMENT_ORDER: CLEAR_CANCEL_REPLENISHMENT_ORDER,\n  LoadReplenishmentOrderDetails: LoadReplenishmentOrderDetails,\n  LoadReplenishmentOrderDetailsSuccess: LoadReplenishmentOrderDetailsSuccess,\n  LoadReplenishmentOrderDetailsFail: LoadReplenishmentOrderDetailsFail,\n  ClearReplenishmentOrderDetails: ClearReplenishmentOrderDetails,\n  CancelReplenishmentOrder: CancelReplenishmentOrder,\n  CancelReplenishmentOrderSuccess: CancelReplenishmentOrderSuccess,\n  CancelReplenishmentOrderFail: CancelReplenishmentOrderFail,\n  ClearCancelReplenishmentOrder: ClearCancelReplenishmentOrder,\n  LOAD_USER_REPLENISHMENT_ORDERS: LOAD_USER_REPLENISHMENT_ORDERS,\n  LOAD_USER_REPLENISHMENT_ORDERS_FAIL: LOAD_USER_REPLENISHMENT_ORDERS_FAIL,\n  LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS: LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS,\n  CLEAR_USER_REPLENISHMENT_ORDERS: CLEAR_USER_REPLENISHMENT_ORDERS,\n  LoadUserReplenishmentOrders: LoadUserReplenishmentOrders,\n  LoadUserReplenishmentOrdersFail: LoadUserReplenishmentOrdersFail,\n  LoadUserReplenishmentOrdersSuccess: LoadUserReplenishmentOrdersSuccess,\n  ClearUserReplenishmentOrders: ClearUserReplenishmentOrders\n});\nconst getOrderState = createFeatureSelector(ORDER_FEATURE);\nconst getConsignmentTrackingState = createSelector(getOrderState, state => state.consignmentTracking);\nconst getConsignmentTracking = createSelector(getConsignmentTrackingState, state => state.tracking);\nconst getOrderDetailState = createSelector(getOrderState, state => state.orderDetail);\nconst getOrderDetails = createSelector(getOrderDetailState, state => StateUtils.loaderValueSelector(state));\nconst getOrderReturnRequestState = createSelector(getOrderState, state => state.orderReturn);\nconst getOrderReturnRequest = createSelector(getOrderReturnRequestState, state => StateUtils.loaderValueSelector(state));\nconst getOrderReturnRequestLoading = createSelector(getOrderReturnRequestState, state => StateUtils.loaderLoadingSelector(state));\nconst getOrderReturnRequestSuccess = createSelector(getOrderReturnRequestState, state => StateUtils.loaderSuccessSelector(state) && !StateUtils.loaderLoadingSelector(state));\nconst getOrderReturnRequestListState = createSelector(getOrderState, state => state.orderReturnList);\nconst getOrderReturnRequestList = createSelector(getOrderReturnRequestListState, state => StateUtils.loaderValueSelector(state));\nconst getOrdersState = createSelector(getOrderState, state => state.orders);\nconst getOrdersLoaded = createSelector(getOrdersState, state => StateUtils.loaderSuccessSelector(state));\nconst getOrders = createSelector(getOrdersState, state => StateUtils.loaderValueSelector(state));\nconst getReplenishmentOrderState = createSelector(getOrderState, state => state.replenishmentOrder);\nconst getReplenishmentOrderDetailsValue = createSelector(getReplenishmentOrderState, state => StateUtils.loaderValueSelector(state));\nconst getReplenishmentOrderDetailsLoading = createSelector(getReplenishmentOrderState, state => StateUtils.loaderLoadingSelector(state));\nconst getReplenishmentOrderDetailsSuccess = createSelector(getReplenishmentOrderState, state => StateUtils.loaderSuccessSelector(state));\nconst getReplenishmentOrderDetailsError = createSelector(getReplenishmentOrderState, state => StateUtils.loaderErrorSelector(state));\nconst getReplenishmentOrdersState = createSelector(getOrderState, state => state.replenishmentOrders);\nconst getReplenishmentOrders = createSelector(getReplenishmentOrdersState, state => StateUtils.loaderValueSelector(state));\nconst getReplenishmentOrdersLoading = createSelector(getReplenishmentOrdersState, state => StateUtils.loaderLoadingSelector(state));\nconst getReplenishmentOrdersError = createSelector(getReplenishmentOrdersState, state => StateUtils.loaderErrorSelector(state));\nconst getReplenishmentOrdersSuccess = createSelector(getReplenishmentOrdersState, state => StateUtils.loaderSuccessSelector(state));\nvar orderGroup_selectors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getConsignmentTrackingState: getConsignmentTrackingState,\n  getConsignmentTracking: getConsignmentTracking,\n  getOrderState: getOrderState,\n  getOrderDetailState: getOrderDetailState,\n  getOrderDetails: getOrderDetails,\n  getOrderReturnRequestState: getOrderReturnRequestState,\n  getOrderReturnRequest: getOrderReturnRequest,\n  getOrderReturnRequestLoading: getOrderReturnRequestLoading,\n  getOrderReturnRequestSuccess: getOrderReturnRequestSuccess,\n  getOrderReturnRequestListState: getOrderReturnRequestListState,\n  getOrderReturnRequestList: getOrderReturnRequestList,\n  getOrdersState: getOrdersState,\n  getOrdersLoaded: getOrdersLoaded,\n  getOrders: getOrders,\n  getReplenishmentOrderState: getReplenishmentOrderState,\n  getReplenishmentOrderDetailsValue: getReplenishmentOrderDetailsValue,\n  getReplenishmentOrderDetailsLoading: getReplenishmentOrderDetailsLoading,\n  getReplenishmentOrderDetailsSuccess: getReplenishmentOrderDetailsSuccess,\n  getReplenishmentOrderDetailsError: getReplenishmentOrderDetailsError,\n  getReplenishmentOrdersState: getReplenishmentOrdersState,\n  getReplenishmentOrders: getReplenishmentOrders,\n  getReplenishmentOrdersLoading: getReplenishmentOrdersLoading,\n  getReplenishmentOrdersError: getReplenishmentOrdersError,\n  getReplenishmentOrdersSuccess: getReplenishmentOrdersSuccess\n});\n\nclass OrderReturnRequestService {\n  constructor(store, processStateStore, userIdService) {\n    this.store = store;\n    this.processStateStore = processStateStore;\n    this.userIdService = userIdService;\n  }\n  /**\n   * Create order return request\n   * @param orderCode an order code\n   * @param returnRequestInput order return request entry input\n   */\n\n\n  createOrderReturnRequest(returnRequestInput) {\n    this.userIdService.takeUserId().subscribe(userId => {\n      this.store.dispatch(new CreateOrderReturnRequest({\n        userId,\n        returnRequestInput\n      }));\n    });\n  }\n  /**\n   * Return an order return request\n   */\n\n\n  getOrderReturnRequest() {\n    return this.store.pipe(select(getOrderReturnRequest));\n  }\n  /**\n   * Gets order return request list\n   */\n\n\n  getOrderReturnRequestList(pageSize) {\n    return this.store.pipe(select(getOrderReturnRequestListState), tap(returnListState => {\n      const attemptedLoad = returnListState.loading || returnListState.success || returnListState.error;\n\n      if (!attemptedLoad) {\n        this.loadOrderReturnRequestList(pageSize);\n      }\n    }), map(returnListState => returnListState.value));\n  }\n  /**\n   * Loads order return request detail\n   * @param returnRequestCode\n   */\n\n\n  loadOrderReturnRequestDetail(returnRequestCode) {\n    this.userIdService.takeUserId().subscribe(userId => {\n      this.store.dispatch(new LoadOrderReturnRequest({\n        userId,\n        returnRequestCode\n      }));\n    });\n  }\n  /**\n   * Loads order return request list\n   * @param pageSize page size\n   * @param currentPage current page\n   * @param sort sort\n   */\n\n\n  loadOrderReturnRequestList(pageSize, currentPage, sort) {\n    this.userIdService.takeUserId(true).subscribe(userId => {\n      this.store.dispatch(new LoadOrderReturnRequestList({\n        userId,\n        pageSize,\n        currentPage,\n        sort\n      }));\n    }, () => {// TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  /**\n   * Cleaning order return request list\n   */\n\n\n  clearOrderReturnRequestList() {\n    this.store.dispatch(new ClearOrderReturnRequestList());\n  }\n  /**\n   * Get the order return request loading flag\n   */\n\n\n  getReturnRequestLoading() {\n    return this.store.pipe(select(getOrderReturnRequestLoading));\n  }\n  /**\n   * Get the order return request success flag\n   */\n\n\n  getReturnRequestSuccess() {\n    return this.store.pipe(select(getOrderReturnRequestSuccess));\n  }\n  /**\n   * Cleaning order return request details\n   */\n\n\n  clearOrderReturnRequestDetail() {\n    this.store.dispatch(new ClearOrderReturnRequest());\n  }\n  /*\n   * Cancel order return request\n   */\n\n\n  cancelOrderReturnRequest(returnRequestCode, returnRequestModification) {\n    this.userIdService.takeUserId().subscribe(userId => {\n      this.store.dispatch(new CancelOrderReturnRequest({\n        userId,\n        returnRequestCode,\n        returnRequestModification\n      }));\n    });\n  }\n  /**\n   * Returns the cancel return request loading flag\n   */\n\n\n  getCancelReturnRequestLoading() {\n    return this.processStateStore.pipe(select(ProcessSelectors.getProcessLoadingFactory(CANCEL_RETURN_PROCESS_ID)));\n  }\n  /**\n   * Returns the cancel return request success flag\n   */\n\n\n  getCancelReturnRequestSuccess() {\n    return this.processStateStore.pipe(select(ProcessSelectors.getProcessSuccessFactory(CANCEL_RETURN_PROCESS_ID)));\n  }\n  /**\n   * Resets the cancel return request process flags\n   */\n\n\n  resetCancelReturnRequestProcessState() {\n    return this.store.dispatch(new ResetCancelReturnProcess());\n  }\n\n}\n\nOrderReturnRequestService.ɵfac = function OrderReturnRequestService_Factory(t) {\n  return new (t || OrderReturnRequestService)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.UserIdService));\n};\n\nOrderReturnRequestService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrderReturnRequestService,\n  factory: OrderReturnRequestService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrderReturnRequestService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Store\n    }, {\n      type: i1.Store\n    }, {\n      type: i2.UserIdService\n    }];\n  }, null);\n})();\n\nclass OrderService {\n  constructor(store, processStateStore, userIdService, routingService) {\n    this.store = store;\n    this.processStateStore = processStateStore;\n    this.userIdService = userIdService;\n    this.routingService = routingService;\n  }\n  /**\n   * Returns an order's detail\n   */\n\n\n  getOrderDetails() {\n    return this.store.pipe(select(getOrderDetails));\n  }\n  /**\n   * Retrieves order's details\n   *\n   * @param orderCode an order code\n   */\n\n\n  loadOrderDetails(orderCode) {\n    this.userIdService.takeUserId().subscribe(userId => {\n      this.store.dispatch(new LoadOrderDetails({\n        userId,\n        orderCode\n      }));\n    });\n  }\n  /**\n   * Clears order's details\n   */\n\n\n  clearOrderDetails() {\n    this.store.dispatch(new ClearOrderDetails());\n  }\n  /**\n   * Returns order history list\n   */\n\n\n  getOrderHistoryList(pageSize) {\n    return this.store.pipe(select(getOrdersState), tap(orderListState => {\n      const attemptedLoad = orderListState.loading || orderListState.success || orderListState.error;\n\n      if (!attemptedLoad) {\n        this.loadOrderList(pageSize);\n      }\n    }), map(orderListState => orderListState.value));\n  }\n  /**\n   * Returns a loaded flag for order history list\n   */\n\n\n  getOrderHistoryListLoaded() {\n    return this.store.pipe(select(getOrdersLoaded));\n  }\n  /**\n   * Retrieves an order list\n   * @param pageSize page size\n   * @param currentPage current page\n   * @param sort sort\n   */\n\n\n  loadOrderList(pageSize, currentPage, sort) {\n    this.userIdService.takeUserId(true).subscribe(userId => {\n      let replenishmentOrderCode;\n      this.routingService.getRouterState().pipe(take(1)).subscribe(data => {\n        var _a, _b;\n\n        replenishmentOrderCode = (_b = (_a = data === null || data === void 0 ? void 0 : data.state) === null || _a === void 0 ? void 0 : _a.params) === null || _b === void 0 ? void 0 : _b.replenishmentOrderCode;\n      }).unsubscribe();\n      this.store.dispatch(new LoadUserOrders({\n        userId,\n        pageSize,\n        currentPage,\n        sort,\n        replenishmentOrderCode\n      }));\n    }, () => {// TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  /**\n   * Cleaning order list\n   */\n\n\n  clearOrderList() {\n    this.store.dispatch(new ClearUserOrders());\n  }\n  /**\n   *  Returns a consignment tracking detail\n   */\n\n\n  getConsignmentTracking() {\n    return this.store.pipe(select(getConsignmentTracking));\n  }\n  /**\n   * Retrieves consignment tracking details\n   * @param orderCode an order code\n   * @param consignmentCode a consignment code\n   */\n\n\n  loadConsignmentTracking(orderCode, consignmentCode) {\n    this.userIdService.takeUserId().subscribe(userId => {\n      this.store.dispatch(new LoadConsignmentTracking({\n        userId,\n        orderCode,\n        consignmentCode\n      }));\n    });\n  }\n  /**\n   * Cleaning consignment tracking\n   */\n\n\n  clearConsignmentTracking() {\n    this.store.dispatch(new ClearConsignmentTracking());\n  }\n  /*\n   * Cancel an order\n   */\n\n\n  cancelOrder(orderCode, cancelRequestInput) {\n    this.userIdService.takeUserId().subscribe(userId => {\n      this.store.dispatch(new CancelOrder({\n        userId,\n        orderCode,\n        cancelRequestInput\n      }));\n    });\n  }\n  /**\n   * Returns the cancel order loading flag\n   */\n\n\n  getCancelOrderLoading() {\n    return this.processStateStore.pipe(select(ProcessSelectors.getProcessLoadingFactory(CANCEL_ORDER_PROCESS_ID)));\n  }\n  /**\n   * Returns the cancel order success flag\n   */\n\n\n  getCancelOrderSuccess() {\n    return this.processStateStore.pipe(select(ProcessSelectors.getProcessSuccessFactory(CANCEL_ORDER_PROCESS_ID)));\n  }\n  /**\n   * Resets the cancel order process flags\n   */\n\n\n  resetCancelOrderProcessState() {\n    return this.store.dispatch(new ResetCancelOrderProcess());\n  }\n\n}\n\nOrderService.ɵfac = function OrderService_Factory(t) {\n  return new (t || OrderService)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.UserIdService), i0.ɵɵinject(i2.RoutingService));\n};\n\nOrderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrderService,\n  factory: OrderService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrderService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Store\n    }, {\n      type: i1.Store\n    }, {\n      type: i2.UserIdService\n    }, {\n      type: i2.RoutingService\n    }];\n  }, null);\n})();\n\nclass ReplenishmentOrderService {\n  constructor(store, processStateStore, userIdService) {\n    this.store = store;\n    this.processStateStore = processStateStore;\n    this.userIdService = userIdService;\n  }\n  /**\n   * Returns replenishment order details for a given 'current' user\n   *\n   * @param replenishmentOrderCode a replenishment order code\n   */\n\n\n  loadReplenishmentOrderDetails(replenishmentOrderCode) {\n    this.userIdService.takeUserId(true).subscribe(userId => {\n      this.store.dispatch(new LoadReplenishmentOrderDetails({\n        userId,\n        replenishmentOrderCode\n      }));\n    }, () => {// TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  /**\n   * Returns a replenishment order details\n   */\n\n\n  getReplenishmentOrderDetails() {\n    return this.store.pipe(select(getReplenishmentOrderDetailsValue));\n  }\n  /**\n   * Returns a replenishment order details loading flag\n   */\n\n\n  getReplenishmentOrderDetailsLoading() {\n    return this.store.pipe(select(getReplenishmentOrderDetailsLoading));\n  }\n  /**\n   * Returns a replenishment order details success flag\n   */\n\n\n  getReplenishmentOrderDetailsSuccess() {\n    return this.store.pipe(select(getReplenishmentOrderDetailsSuccess));\n  }\n  /**\n   * Returns a replenishment order details error flag\n   */\n\n\n  getReplenishmentOrderDetailsError() {\n    return this.store.pipe(select(getReplenishmentOrderDetailsError));\n  }\n  /**\n   * Clears the replenishment orders details state\n   */\n\n\n  clearReplenishmentOrderDetails() {\n    this.store.dispatch(new ClearReplenishmentOrderDetails());\n  }\n  /**\n   * Cancels a specific replenishment order for a given 'current' user\n   *\n   * @param replenishmentOrderCode a replenishment order code\n   */\n\n\n  cancelReplenishmentOrder(replenishmentOrderCode) {\n    this.userIdService.takeUserId(true).subscribe(userId => {\n      this.store.dispatch(new CancelReplenishmentOrder({\n        userId,\n        replenishmentOrderCode\n      }));\n    }, () => {// TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  /**\n   * Returns the cancel replenishment order loading flag\n   */\n\n\n  getCancelReplenishmentOrderLoading() {\n    return this.processStateStore.pipe(select(ProcessSelectors.getProcessLoadingFactory(CANCEL_REPLENISHMENT_ORDER_PROCESS_ID)));\n  }\n  /**\n   * Returns the cancel replenishment order success flag\n   */\n\n\n  getCancelReplenishmentOrderSuccess() {\n    return this.processStateStore.pipe(select(ProcessSelectors.getProcessSuccessFactory(CANCEL_REPLENISHMENT_ORDER_PROCESS_ID)));\n  }\n  /**\n   * Returns the cancel replenishment order error flag\n   */\n\n\n  getCancelReplenishmentOrderError() {\n    return this.processStateStore.pipe(select(ProcessSelectors.getProcessErrorFactory(CANCEL_REPLENISHMENT_ORDER_PROCESS_ID)));\n  }\n  /**\n   * Clears the cancel replenishment order processing state\n   */\n\n\n  clearCancelReplenishmentOrderProcessState() {\n    this.store.dispatch(new ClearCancelReplenishmentOrder());\n  }\n  /**\n   * Returns replenishment order history list\n   */\n\n\n  getReplenishmentOrderHistoryList(pageSize) {\n    return this.store.pipe(select(getReplenishmentOrdersState), tap(replenishmentOrderListState => {\n      const attemptedLoad = replenishmentOrderListState.loading || replenishmentOrderListState.success || replenishmentOrderListState.error;\n\n      if (!attemptedLoad) {\n        this.loadReplenishmentOrderList(pageSize);\n      }\n    }), map(replenishmentOrderListState => replenishmentOrderListState.value));\n  }\n  /**\n   * Returns a loading flag for replenishment order history list\n   */\n\n\n  getReplenishmentOrderHistoryListLoading() {\n    return this.store.pipe(select(getReplenishmentOrdersLoading));\n  }\n  /**\n   * Returns a error flag for replenishment order history list\n   */\n\n\n  getReplenishmentOrderHistoryListError() {\n    return this.store.pipe(select(getReplenishmentOrdersError));\n  }\n  /**\n   * Returns a success flag for replenishment order history list\n   */\n\n\n  getReplenishmentOrderHistoryListSuccess() {\n    return this.store.pipe(select(getReplenishmentOrdersSuccess));\n  }\n  /**\n   * Retrieves a replenishment order list\n   * @param pageSize page size\n   * @param currentPage current page\n   * @param sort sort\n   */\n\n\n  loadReplenishmentOrderList(pageSize, currentPage, sort) {\n    this.userIdService.takeUserId(true).subscribe(userId => {\n      this.store.dispatch(new LoadUserReplenishmentOrders({\n        userId,\n        pageSize,\n        currentPage,\n        sort\n      }));\n    }, () => {// TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  /**\n   * Cleaning replenishment order list\n   */\n\n\n  clearReplenishmentOrderList() {\n    this.store.dispatch(new ClearUserReplenishmentOrders());\n  }\n\n}\n\nReplenishmentOrderService.ɵfac = function ReplenishmentOrderService_Factory(t) {\n  return new (t || ReplenishmentOrderService)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.UserIdService));\n};\n\nReplenishmentOrderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ReplenishmentOrderService,\n  factory: ReplenishmentOrderService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReplenishmentOrderService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Store\n    }, {\n      type: i1.Store\n    }, {\n      type: i2.UserIdService\n    }];\n  }, null);\n})();\n\nconst facadeProviders = [OrderReturnRequestService, {\n  provide: OrderReturnRequestFacade,\n  useExisting: OrderReturnRequestService\n}, OrderService, {\n  provide: OrderFacade,\n  useExisting: OrderService\n}, ReplenishmentOrderService, {\n  provide: ReplenishmentOrderFacade,\n  useExisting: ReplenishmentOrderService\n}];\n\nclass ConsignmentTrackingEffects {\n  constructor(actions$, orderConnector) {\n    this.actions$ = actions$;\n    this.orderConnector = orderConnector;\n    this.loadConsignmentTracking$ = this.actions$.pipe(ofType(LOAD_CONSIGNMENT_TRACKING), map(action => action.payload), switchMap(payload => {\n      return this.orderConnector.getConsignmentTracking(payload.orderCode, payload.consignmentCode, payload.userId).pipe(map(tracking => new LoadConsignmentTrackingSuccess(tracking)), catchError(error => of(new LoadConsignmentTrackingFail(normalizeHttpError(error)))));\n    }));\n  }\n\n}\n\nConsignmentTrackingEffects.ɵfac = function ConsignmentTrackingEffects_Factory(t) {\n  return new (t || ConsignmentTrackingEffects)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(OrderConnector));\n};\n\nConsignmentTrackingEffects.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ConsignmentTrackingEffects,\n  factory: ConsignmentTrackingEffects.ɵfac\n});\n\n__decorate([Effect()], ConsignmentTrackingEffects.prototype, \"loadConsignmentTracking$\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ConsignmentTrackingEffects, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: OrderConnector\n    }];\n  }, {\n    loadConsignmentTracking$: []\n  });\n})();\n\nclass OrderDetailsEffect {\n  constructor(actions$, orderConnector, globalMessageService) {\n    this.actions$ = actions$;\n    this.orderConnector = orderConnector;\n    this.globalMessageService = globalMessageService;\n    this.loadOrderDetails$ = this.actions$.pipe(ofType(LOAD_ORDER_DETAILS), map(action => action.payload), switchMap(payload => {\n      return this.orderConnector.get(payload.userId, payload.orderCode).pipe(map(order => {\n        return new LoadOrderDetailsSuccess(order);\n      }), catchError(error => of(new LoadOrderDetailsFail(normalizeHttpError(error)))));\n    }));\n    this.cancelOrder$ = this.actions$.pipe(ofType(CANCEL_ORDER), map(action => action.payload), switchMap(payload => {\n      return this.orderConnector.cancel(payload.userId, payload.orderCode, payload.cancelRequestInput).pipe(map(() => new CancelOrderSuccess()), catchError(error => {\n        var _a;\n\n        (_a = error.error) === null || _a === void 0 ? void 0 : _a.errors.forEach(err => this.globalMessageService.add(err.message, GlobalMessageType.MSG_TYPE_ERROR));\n        return of(new CancelOrderFail(normalizeHttpError(error)));\n      }));\n    }));\n  }\n\n}\n\nOrderDetailsEffect.ɵfac = function OrderDetailsEffect_Factory(t) {\n  return new (t || OrderDetailsEffect)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(OrderConnector), i0.ɵɵinject(i2.GlobalMessageService));\n};\n\nOrderDetailsEffect.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrderDetailsEffect,\n  factory: OrderDetailsEffect.ɵfac\n});\n\n__decorate([Effect()], OrderDetailsEffect.prototype, \"loadOrderDetails$\", void 0);\n\n__decorate([Effect()], OrderDetailsEffect.prototype, \"cancelOrder$\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrderDetailsEffect, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: OrderConnector\n    }, {\n      type: i2.GlobalMessageService\n    }];\n  }, {\n    loadOrderDetails$: [],\n    cancelOrder$: []\n  });\n})();\n\nclass OrderReturnRequestEffect {\n  constructor(actions$, orderConnector) {\n    this.actions$ = actions$;\n    this.orderConnector = orderConnector;\n    this.createReturnRequest$ = this.actions$.pipe(ofType(CREATE_ORDER_RETURN_REQUEST), map(action => action.payload), switchMap(payload => {\n      return this.orderConnector.return(payload.userId, payload.returnRequestInput).pipe(map(returnRequest => new CreateOrderReturnRequestSuccess(returnRequest)), catchError(error => of(new CreateOrderReturnRequestFail(normalizeHttpError(error)))));\n    }));\n    this.loadReturnRequest$ = this.actions$.pipe(ofType(LOAD_ORDER_RETURN_REQUEST), map(action => action.payload), switchMap(payload => {\n      return this.orderConnector.getReturnRequestDetail(payload.userId, payload.returnRequestCode).pipe(map(returnRequest => new LoadOrderReturnRequestSuccess(returnRequest)), catchError(error => of(new LoadOrderReturnRequestFail(normalizeHttpError(error)))));\n    }));\n    this.cancelReturnRequest$ = this.actions$.pipe(ofType(CANCEL_ORDER_RETURN_REQUEST), map(action => action.payload), switchMap(payload => {\n      return this.orderConnector.cancelReturnRequest(payload.userId, payload.returnRequestCode, payload.returnRequestModification).pipe(map(() => new CancelOrderReturnRequestSuccess()), catchError(error => of(new CancelOrderReturnRequestFail(normalizeHttpError(error)))));\n    }));\n    this.loadReturnRequestList$ = this.actions$.pipe(ofType(LOAD_ORDER_RETURN_REQUEST_LIST), map(action => action.payload), switchMap(payload => {\n      return this.orderConnector.getReturnRequestList(payload.userId, payload.pageSize, payload.currentPage, payload.sort).pipe(map(returnRequestList => new LoadOrderReturnRequestListSuccess(returnRequestList)), catchError(error => of(new LoadOrderReturnRequestListFail(normalizeHttpError(error)))));\n    }));\n  }\n\n}\n\nOrderReturnRequestEffect.ɵfac = function OrderReturnRequestEffect_Factory(t) {\n  return new (t || OrderReturnRequestEffect)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(OrderConnector));\n};\n\nOrderReturnRequestEffect.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrderReturnRequestEffect,\n  factory: OrderReturnRequestEffect.ɵfac\n});\n\n__decorate([Effect()], OrderReturnRequestEffect.prototype, \"createReturnRequest$\", void 0);\n\n__decorate([Effect()], OrderReturnRequestEffect.prototype, \"loadReturnRequest$\", void 0);\n\n__decorate([Effect()], OrderReturnRequestEffect.prototype, \"cancelReturnRequest$\", void 0);\n\n__decorate([Effect()], OrderReturnRequestEffect.prototype, \"loadReturnRequestList$\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrderReturnRequestEffect, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: OrderConnector\n    }];\n  }, {\n    createReturnRequest$: [],\n    loadReturnRequest$: [],\n    cancelReturnRequest$: [],\n    loadReturnRequestList$: []\n  });\n})();\n\nclass OrdersEffect {\n  constructor(actions$, orderConnector, replenishmentOrderConnector) {\n    this.actions$ = actions$;\n    this.orderConnector = orderConnector;\n    this.replenishmentOrderConnector = replenishmentOrderConnector;\n    this.loadUserOrders$ = this.actions$.pipe(ofType(LOAD_USER_ORDERS), map(action => action.payload), switchMap(payload => {\n      var _a;\n\n      return (Boolean(payload.replenishmentOrderCode) ? this.replenishmentOrderConnector.loadReplenishmentDetailsHistory(payload.userId, (_a = payload.replenishmentOrderCode) !== null && _a !== void 0 ? _a : '', payload.pageSize, payload.currentPage, payload.sort) : this.orderConnector.getHistory(payload.userId, payload.pageSize, payload.currentPage, payload.sort)).pipe(map(orders => {\n        return new LoadUserOrdersSuccess(orders);\n      }), catchError(error => of(new LoadUserOrdersFail(normalizeHttpError(error)))));\n    }));\n    this.resetUserOrders$ = this.actions$.pipe(ofType(SiteContextActions.LANGUAGE_CHANGE), map(() => {\n      return new ClearUserOrders();\n    }));\n  }\n\n}\n\nOrdersEffect.ɵfac = function OrdersEffect_Factory(t) {\n  return new (t || OrdersEffect)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(OrderConnector), i0.ɵɵinject(ReplenishmentOrderConnector));\n};\n\nOrdersEffect.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrdersEffect,\n  factory: OrdersEffect.ɵfac\n});\n\n__decorate([Effect()], OrdersEffect.prototype, \"loadUserOrders$\", void 0);\n\n__decorate([Effect()], OrdersEffect.prototype, \"resetUserOrders$\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrdersEffect, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: OrderConnector\n    }, {\n      type: ReplenishmentOrderConnector\n    }];\n  }, {\n    loadUserOrders$: [],\n    resetUserOrders$: []\n  });\n})();\n\nclass ReplenishmentOrderDetailsEffect {\n  constructor(actions$, replenishmentOrderConnector, globalMessageService) {\n    this.actions$ = actions$;\n    this.replenishmentOrderConnector = replenishmentOrderConnector;\n    this.globalMessageService = globalMessageService;\n    this.loadReplenishmentOrderDetails$ = this.actions$.pipe(ofType(LOAD_REPLENISHMENT_ORDER_DETAILS), map(action => action.payload), switchMap(payload => {\n      return this.replenishmentOrderConnector.load(payload.userId, payload.replenishmentOrderCode).pipe(map(replenishmentOrder => {\n        return new LoadReplenishmentOrderDetailsSuccess(replenishmentOrder);\n      }), catchError(error => of(new LoadReplenishmentOrderDetailsFail(normalizeHttpError(error)))));\n    }));\n    this.cancelReplenishmentOrder$ = this.actions$.pipe(ofType(CANCEL_REPLENISHMENT_ORDER), map(action => action.payload), switchMap(payload => {\n      return this.replenishmentOrderConnector.cancelReplenishmentOrder(payload.userId, payload.replenishmentOrderCode).pipe(map(replenishmentOrder => new CancelReplenishmentOrderSuccess(replenishmentOrder)), catchError(error => {\n        var _a;\n\n        (_a = error === null || error === void 0 ? void 0 : error.error) === null || _a === void 0 ? void 0 : _a.errors.forEach(err => this.globalMessageService.add(err.message, GlobalMessageType.MSG_TYPE_ERROR));\n        return of(new CancelReplenishmentOrderFail(normalizeHttpError(error)));\n      }));\n    }));\n  }\n\n}\n\nReplenishmentOrderDetailsEffect.ɵfac = function ReplenishmentOrderDetailsEffect_Factory(t) {\n  return new (t || ReplenishmentOrderDetailsEffect)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(ReplenishmentOrderConnector), i0.ɵɵinject(i2.GlobalMessageService));\n};\n\nReplenishmentOrderDetailsEffect.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ReplenishmentOrderDetailsEffect,\n  factory: ReplenishmentOrderDetailsEffect.ɵfac\n});\n\n__decorate([Effect()], ReplenishmentOrderDetailsEffect.prototype, \"loadReplenishmentOrderDetails$\", void 0);\n\n__decorate([Effect()], ReplenishmentOrderDetailsEffect.prototype, \"cancelReplenishmentOrder$\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReplenishmentOrderDetailsEffect, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: ReplenishmentOrderConnector\n    }, {\n      type: i2.GlobalMessageService\n    }];\n  }, {\n    loadReplenishmentOrderDetails$: [],\n    cancelReplenishmentOrder$: []\n  });\n})();\n\nclass ReplenishmentOrdersEffect {\n  constructor(actions$, replenishmentOrderConnector) {\n    this.actions$ = actions$;\n    this.replenishmentOrderConnector = replenishmentOrderConnector;\n    this.loadUserReplenishmentOrders$ = this.actions$.pipe(ofType(LOAD_USER_REPLENISHMENT_ORDERS), map(action => action.payload), switchMap(payload => {\n      return this.replenishmentOrderConnector.loadHistory(payload.userId, payload.pageSize, payload.currentPage, payload.sort).pipe(map(orders => {\n        return new LoadUserReplenishmentOrdersSuccess(orders);\n      }), catchError(error => of(new LoadUserReplenishmentOrdersFail(normalizeHttpError(error)))));\n    }));\n  }\n\n}\n\nReplenishmentOrdersEffect.ɵfac = function ReplenishmentOrdersEffect_Factory(t) {\n  return new (t || ReplenishmentOrdersEffect)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(ReplenishmentOrderConnector));\n};\n\nReplenishmentOrdersEffect.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ReplenishmentOrdersEffect,\n  factory: ReplenishmentOrdersEffect.ɵfac\n});\n\n__decorate([Effect()], ReplenishmentOrdersEffect.prototype, \"loadUserReplenishmentOrders$\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReplenishmentOrdersEffect, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: ReplenishmentOrderConnector\n    }];\n  }, {\n    loadUserReplenishmentOrders$: []\n  });\n})();\n\nconst effects = [OrdersEffect, OrderDetailsEffect, ConsignmentTrackingEffects, OrderReturnRequestEffect, ReplenishmentOrderDetailsEffect, ReplenishmentOrdersEffect];\nconst initialState$5 = {\n  tracking: {}\n};\n\nfunction reducer$5(state = initialState$5, action) {\n  switch (action.type) {\n    case LOAD_CONSIGNMENT_TRACKING_SUCCESS:\n      {\n        const tracking = action.payload;\n        return {\n          tracking\n        };\n      }\n\n    case CLEAR_CONSIGNMENT_TRACKING:\n      {\n        return initialState$5;\n      }\n  }\n\n  return state;\n}\n\nconst initialState$4 = {};\n\nfunction reducer$4(state = initialState$4, action) {\n  switch (action.type) {\n    case LOAD_ORDER_DETAILS_SUCCESS:\n      {\n        const order = action.payload;\n        return order;\n      }\n  }\n\n  return state;\n}\n\nconst initialState$3 = {\n  returnRequests: [],\n  pagination: {},\n  sorts: []\n};\n\nfunction reducer$3(state = initialState$3, action) {\n  switch (action.type) {\n    case LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS:\n      {\n        return action.payload ? action.payload : initialState$3;\n      }\n  }\n\n  return state;\n}\n\nconst initialState$2 = {\n  orders: [],\n  pagination: {},\n  sorts: []\n};\n\nfunction reducer$2(state = initialState$2, action) {\n  switch (action.type) {\n    case LOAD_USER_ORDERS_SUCCESS:\n      {\n        return action.payload ? action.payload : initialState$2;\n      }\n\n    case LOAD_USER_ORDERS_FAIL:\n      {\n        return initialState$2;\n      }\n  }\n\n  return state;\n}\n\nconst initialState$1 = {};\n\nfunction reducer$1(state = initialState$1, action) {\n  switch (action.type) {\n    case LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS:\n    case CANCEL_REPLENISHMENT_ORDER_SUCCESS:\n      {\n        return action.payload ? action.payload : initialState$1;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\n\nconst initialState = {\n  replenishmentOrders: [],\n  pagination: {},\n  sorts: []\n};\n\nfunction reducer(state = initialState, action) {\n  var _a;\n\n  switch (action.type) {\n    case LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS:\n      {\n        return action.payload ? action.payload : initialState;\n      }\n\n    case CANCEL_REPLENISHMENT_ORDER_SUCCESS:\n      {\n        const cancelledReplenishmentOrder = action.payload;\n        const userReplenishmentOrders = [...((_a = state.replenishmentOrders) !== null && _a !== void 0 ? _a : [])];\n        const index = userReplenishmentOrders.findIndex(replenishmentOrder => replenishmentOrder.replenishmentOrderCode === cancelledReplenishmentOrder.replenishmentOrderCode);\n\n        if (index === -1) {\n          return initialState;\n        } else {\n          userReplenishmentOrders[index] = Object.assign({}, cancelledReplenishmentOrder);\n        }\n\n        return Object.assign(Object.assign({}, state), {\n          replenishmentOrders: userReplenishmentOrders\n        });\n      }\n  }\n\n  return state;\n}\n\nfunction getReducers() {\n  return {\n    orders: StateUtils.loaderReducer(ORDERS, reducer$2),\n    orderDetail: StateUtils.loaderReducer(ORDER_DETAILS, reducer$4),\n    replenishmentOrders: StateUtils.loaderReducer(REPLENISHMENT_ORDERS, reducer),\n    orderReturn: StateUtils.loaderReducer(RETURN_REQUEST_DETAILS),\n    orderReturnList: StateUtils.loaderReducer(RETURN_REQUESTS, reducer$3),\n    consignmentTracking: reducer$5,\n    replenishmentOrder: StateUtils.loaderReducer(REPLENISHMENT_ORDER_DETAILS, reducer$1)\n  };\n}\n\nconst reducerToken = new InjectionToken('OrderReducers');\nconst reducerProvider = {\n  provide: reducerToken,\n  useFactory: getReducers\n};\n\nclass OrderStoreModule {}\n\nOrderStoreModule.ɵfac = function OrderStoreModule_Factory(t) {\n  return new (t || OrderStoreModule)();\n};\n\nOrderStoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: OrderStoreModule\n});\nOrderStoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [reducerProvider],\n  imports: [[EffectsModule.forFeature(effects), StoreModule.forFeature(ORDER_FEATURE, reducerToken)]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrderStoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [EffectsModule.forFeature(effects), StoreModule.forFeature(ORDER_FEATURE, reducerToken)],\n      providers: [reducerProvider]\n    }]\n  }], null, null);\n})();\n\nclass OrderCoreModule {}\n\nOrderCoreModule.ɵfac = function OrderCoreModule_Factory(t) {\n  return new (t || OrderCoreModule)();\n};\n\nOrderCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: OrderCoreModule\n});\nOrderCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [OrderConnector, ReplenishmentOrderConnector, ...facadeProviders],\n  imports: [[OrderStoreModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrderCoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OrderStoreModule],\n      providers: [OrderConnector, ReplenishmentOrderConnector, ...facadeProviders]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CANCEL_ORDER_PROCESS_ID, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID, CANCEL_RETURN_PROCESS_ID, CONSIGNMENT_TRACKING_NORMALIZER, ORDERS, ORDER_DETAILS, ORDER_FEATURE, ORDER_HISTORY_NORMALIZER, ORDER_RETURNS_NORMALIZER, ORDER_RETURN_REQUEST_INPUT_SERIALIZER, ORDER_RETURN_REQUEST_NORMALIZER, orderGroup_actions as OrderActions, OrderAdapter, OrderConnector, OrderCoreModule, OrderReturnRequestService, orderGroup_selectors as OrderSelectors, OrderService, REPLENISHMENT_ORDERS, REPLENISHMENT_ORDER_DETAILS, REPLENISHMENT_ORDER_HISTORY_NORMALIZER, RETURN_REQUESTS, RETURN_REQUEST_DETAILS, ReplenishmentOrderAdapter, ReplenishmentOrderConnector, ReplenishmentOrderService }; //# sourceMappingURL=spartacus-order-core.js.map","map":{"version":3,"sources":["D:/spartacus/front-store/node_modules/@spartacus/order/fesm2015/spartacus-order-core.js"],"names":["i0","InjectionToken","Injectable","NgModule","i1","createFeatureSelector","createSelector","select","StoreModule","i2","StateUtils","PROCESS_FEATURE","ProcessSelectors","normalizeHttpError","GlobalMessageType","SiteContextActions","tap","map","take","switchMap","catchError","OrderReturnRequestFacade","OrderFacade","ReplenishmentOrderFacade","i1$1","ofType","Effect","EffectsModule","__decorate","of","ORDER_HISTORY_NORMALIZER","CONSIGNMENT_TRACKING_NORMALIZER","ORDER_RETURN_REQUEST_NORMALIZER","ORDER_RETURN_REQUEST_INPUT_SERIALIZER","ORDER_RETURNS_NORMALIZER","REPLENISHMENT_ORDER_HISTORY_NORMALIZER","OrderAdapter","OrderConnector","constructor","adapter","get","userId","orderCode","load","getHistory","pageSize","currentPage","sort","loadHistory","getConsignmentTracking","consignmentCode","cancel","cancelRequestInput","return","returnRequestInput","createReturnRequest","getReturnRequestDetail","returnRequestCode","loadReturnRequestDetail","getReturnRequestList","loadReturnRequestList","cancelReturnRequest","returnRequestModification","ɵfac","ɵprov","type","ReplenishmentOrderAdapter","ReplenishmentOrderConnector","replenishmentOrderCode","loadReplenishmentDetailsHistory","cancelReplenishmentOrder","LOAD_CONSIGNMENT_TRACKING","LOAD_CONSIGNMENT_TRACKING_FAIL","LOAD_CONSIGNMENT_TRACKING_SUCCESS","CLEAR_CONSIGNMENT_TRACKING","LoadConsignmentTracking","payload","LoadConsignmentTrackingFail","LoadConsignmentTrackingSuccess","ClearConsignmentTracking","ORDER_FEATURE","CANCEL_ORDER_PROCESS_ID","CANCEL_RETURN_PROCESS_ID","CANCEL_REPLENISHMENT_ORDER_PROCESS_ID","ORDERS","RETURN_REQUESTS","RETURN_REQUEST_DETAILS","ORDER_DETAILS","REPLENISHMENT_ORDERS","REPLENISHMENT_ORDER_DETAILS","LOAD_ORDER_DETAILS","LOAD_ORDER_DETAILS_FAIL","LOAD_ORDER_DETAILS_SUCCESS","CLEAR_ORDER_DETAILS","CANCEL_ORDER","CANCEL_ORDER_FAIL","CANCEL_ORDER_SUCCESS","RESET_CANCEL_ORDER_PROCESS","LoadOrderDetails","LoaderLoadAction","LoadOrderDetailsFail","LoaderFailAction","LoadOrderDetailsSuccess","LoaderSuccessAction","ClearOrderDetails","LoaderResetAction","CancelOrder","EntityLoadAction","CancelOrderFail","EntityFailAction","CancelOrderSuccess","EntitySuccessAction","ResetCancelOrderProcess","EntityLoaderResetAction","CREATE_ORDER_RETURN_REQUEST","CREATE_ORDER_RETURN_REQUEST_FAIL","CREATE_ORDER_RETURN_REQUEST_SUCCESS","LOAD_ORDER_RETURN_REQUEST","LOAD_ORDER_RETURN_REQUEST_FAIL","LOAD_ORDER_RETURN_REQUEST_SUCCESS","CANCEL_ORDER_RETURN_REQUEST","CANCEL_ORDER_RETURN_REQUEST_FAIL","CANCEL_ORDER_RETURN_REQUEST_SUCCESS","LOAD_ORDER_RETURN_REQUEST_LIST","LOAD_ORDER_RETURN_REQUEST_LIST_FAIL","LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS","CLEAR_ORDER_RETURN_REQUEST","CLEAR_ORDER_RETURN_REQUEST_LIST","RESET_CANCEL_RETURN_PROCESS","CreateOrderReturnRequest","CreateOrderReturnRequestFail","CreateOrderReturnRequestSuccess","LoadOrderReturnRequest","LoadOrderReturnRequestFail","LoadOrderReturnRequestSuccess","CancelOrderReturnRequest","CancelOrderReturnRequestFail","CancelOrderReturnRequestSuccess","LoadOrderReturnRequestList","LoadOrderReturnRequestListFail","LoadOrderReturnRequestListSuccess","ClearOrderReturnRequest","ClearOrderReturnRequestList","ResetCancelReturnProcess","LOAD_USER_ORDERS","LOAD_USER_ORDERS_FAIL","LOAD_USER_ORDERS_SUCCESS","CLEAR_USER_ORDERS","LoadUserOrders","LoadUserOrdersFail","LoadUserOrdersSuccess","ClearUserOrders","LOAD_REPLENISHMENT_ORDER_DETAILS","LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS","LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL","ClEAR_REPLENISHMENT_ORDER_DETAILS","CANCEL_REPLENISHMENT_ORDER","CANCEL_REPLENISHMENT_ORDER_SUCCESS","CANCEL_REPLENISHMENT_ORDER_FAIL","CLEAR_CANCEL_REPLENISHMENT_ORDER","LoadReplenishmentOrderDetails","LoadReplenishmentOrderDetailsSuccess","LoadReplenishmentOrderDetailsFail","ClearReplenishmentOrderDetails","CancelReplenishmentOrder","CancelReplenishmentOrderSuccess","CancelReplenishmentOrderFail","ClearCancelReplenishmentOrder","LOAD_USER_REPLENISHMENT_ORDERS","LOAD_USER_REPLENISHMENT_ORDERS_FAIL","LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS","CLEAR_USER_REPLENISHMENT_ORDERS","LoadUserReplenishmentOrders","LoadUserReplenishmentOrdersFail","LoadUserReplenishmentOrdersSuccess","ClearUserReplenishmentOrders","orderGroup_actions","Object","freeze","__proto__","getOrderState","getConsignmentTrackingState","state","consignmentTracking","tracking","getOrderDetailState","orderDetail","getOrderDetails","loaderValueSelector","getOrderReturnRequestState","orderReturn","getOrderReturnRequest","getOrderReturnRequestLoading","loaderLoadingSelector","getOrderReturnRequestSuccess","loaderSuccessSelector","getOrderReturnRequestListState","orderReturnList","getOrderReturnRequestList","getOrdersState","orders","getOrdersLoaded","getOrders","getReplenishmentOrderState","replenishmentOrder","getReplenishmentOrderDetailsValue","getReplenishmentOrderDetailsLoading","getReplenishmentOrderDetailsSuccess","getReplenishmentOrderDetailsError","loaderErrorSelector","getReplenishmentOrdersState","replenishmentOrders","getReplenishmentOrders","getReplenishmentOrdersLoading","getReplenishmentOrdersError","getReplenishmentOrdersSuccess","orderGroup_selectors","OrderReturnRequestService","store","processStateStore","userIdService","createOrderReturnRequest","takeUserId","subscribe","dispatch","pipe","returnListState","attemptedLoad","loading","success","error","loadOrderReturnRequestList","value","loadOrderReturnRequestDetail","clearOrderReturnRequestList","getReturnRequestLoading","getReturnRequestSuccess","clearOrderReturnRequestDetail","cancelOrderReturnRequest","getCancelReturnRequestLoading","getProcessLoadingFactory","getCancelReturnRequestSuccess","getProcessSuccessFactory","resetCancelReturnRequestProcessState","Store","UserIdService","OrderService","routingService","loadOrderDetails","clearOrderDetails","getOrderHistoryList","orderListState","loadOrderList","getOrderHistoryListLoaded","getRouterState","data","_a","_b","params","unsubscribe","clearOrderList","loadConsignmentTracking","clearConsignmentTracking","cancelOrder","getCancelOrderLoading","getCancelOrderSuccess","resetCancelOrderProcessState","RoutingService","ReplenishmentOrderService","loadReplenishmentOrderDetails","getReplenishmentOrderDetails","clearReplenishmentOrderDetails","getCancelReplenishmentOrderLoading","getCancelReplenishmentOrderSuccess","getCancelReplenishmentOrderError","getProcessErrorFactory","clearCancelReplenishmentOrderProcessState","getReplenishmentOrderHistoryList","replenishmentOrderListState","loadReplenishmentOrderList","getReplenishmentOrderHistoryListLoading","getReplenishmentOrderHistoryListError","getReplenishmentOrderHistoryListSuccess","clearReplenishmentOrderList","facadeProviders","provide","useExisting","ConsignmentTrackingEffects","actions$","orderConnector","loadConsignmentTracking$","action","Actions","prototype","OrderDetailsEffect","globalMessageService","loadOrderDetails$","order","cancelOrder$","errors","forEach","err","add","message","MSG_TYPE_ERROR","GlobalMessageService","OrderReturnRequestEffect","createReturnRequest$","returnRequest","loadReturnRequest$","cancelReturnRequest$","loadReturnRequestList$","returnRequestList","OrdersEffect","replenishmentOrderConnector","loadUserOrders$","Boolean","resetUserOrders$","LANGUAGE_CHANGE","ReplenishmentOrderDetailsEffect","loadReplenishmentOrderDetails$","cancelReplenishmentOrder$","ReplenishmentOrdersEffect","loadUserReplenishmentOrders$","effects","initialState$5","reducer$5","initialState$4","reducer$4","initialState$3","returnRequests","pagination","sorts","reducer$3","initialState$2","reducer$2","initialState$1","reducer$1","initialState","reducer","cancelledReplenishmentOrder","userReplenishmentOrders","index","findIndex","assign","getReducers","loaderReducer","reducerToken","reducerProvider","useFactory","OrderStoreModule","ɵmod","ɵinj","forFeature","args","imports","providers","OrderCoreModule","OrderActions","OrderSelectors"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@ngrx/store';\nimport { createFeatureSelector, createSelector, select, StoreModule } from '@ngrx/store';\nimport * as i2 from '@spartacus/core';\nimport { StateUtils, PROCESS_FEATURE, ProcessSelectors, normalizeHttpError, GlobalMessageType, SiteContextActions } from '@spartacus/core';\nimport { tap, map, take, switchMap, catchError } from 'rxjs/operators';\nimport { OrderReturnRequestFacade, OrderFacade, ReplenishmentOrderFacade } from '@spartacus/order/root';\nimport * as i1$1 from '@ngrx/effects';\nimport { ofType, Effect, EffectsModule } from '@ngrx/effects';\nimport { __decorate } from 'tslib';\nimport { of } from 'rxjs';\n\nconst ORDER_HISTORY_NORMALIZER = new InjectionToken('OrderHistoryNormalizer');\nconst CONSIGNMENT_TRACKING_NORMALIZER = new InjectionToken('ConsignmentTrackingNormalizer');\nconst ORDER_RETURN_REQUEST_NORMALIZER = new InjectionToken('OrderReturnRequestNormalizer');\nconst ORDER_RETURN_REQUEST_INPUT_SERIALIZER = new InjectionToken('OrderReturnRequestInputSerializer');\nconst ORDER_RETURNS_NORMALIZER = new InjectionToken('OrderReturnsNormalizer');\nconst REPLENISHMENT_ORDER_HISTORY_NORMALIZER = new InjectionToken('ReplenishmentOrderHistoryNormalizer');\n\nclass OrderAdapter {\n}\n\nclass OrderConnector {\n    constructor(adapter) {\n        this.adapter = adapter;\n    }\n    get(userId, orderCode) {\n        return this.adapter.load(userId, orderCode);\n    }\n    getHistory(userId, pageSize, currentPage, sort) {\n        return this.adapter.loadHistory(userId, pageSize, currentPage, sort);\n    }\n    getConsignmentTracking(orderCode, consignmentCode, userId) {\n        return this.adapter.getConsignmentTracking(orderCode, consignmentCode, userId);\n    }\n    cancel(userId, orderCode, cancelRequestInput) {\n        return this.adapter.cancel(userId, orderCode, cancelRequestInput);\n    }\n    return(userId, returnRequestInput) {\n        return this.adapter.createReturnRequest(userId, returnRequestInput);\n    }\n    getReturnRequestDetail(userId, returnRequestCode) {\n        return this.adapter.loadReturnRequestDetail(userId, returnRequestCode);\n    }\n    getReturnRequestList(userId, pageSize, currentPage, sort) {\n        return this.adapter.loadReturnRequestList(userId, pageSize, currentPage, sort);\n    }\n    cancelReturnRequest(userId, returnRequestCode, returnRequestModification) {\n        return this.adapter.cancelReturnRequest(userId, returnRequestCode, returnRequestModification);\n    }\n}\nOrderConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderConnector, deps: [{ token: OrderAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nOrderConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderConnector });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderConnector, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: OrderAdapter }]; } });\n\nclass ReplenishmentOrderAdapter {\n}\n\nclass ReplenishmentOrderConnector {\n    constructor(adapter) {\n        this.adapter = adapter;\n    }\n    load(userId, replenishmentOrderCode) {\n        return this.adapter.load(userId, replenishmentOrderCode);\n    }\n    loadReplenishmentDetailsHistory(userId, replenishmentOrderCode, pageSize, currentPage, sort) {\n        return this.adapter.loadReplenishmentDetailsHistory(userId, replenishmentOrderCode, pageSize, currentPage, sort);\n    }\n    cancelReplenishmentOrder(userId, replenishmentOrderCode) {\n        return this.adapter.cancelReplenishmentOrder(userId, replenishmentOrderCode);\n    }\n    loadHistory(userId, pageSize, currentPage, sort) {\n        return this.adapter.loadHistory(userId, pageSize, currentPage, sort);\n    }\n}\nReplenishmentOrderConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReplenishmentOrderConnector, deps: [{ token: ReplenishmentOrderAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nReplenishmentOrderConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReplenishmentOrderConnector });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReplenishmentOrderConnector, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: ReplenishmentOrderAdapter }]; } });\n\nconst LOAD_CONSIGNMENT_TRACKING = '[Order] Load Consignment Tracking';\nconst LOAD_CONSIGNMENT_TRACKING_FAIL = '[Order] Load Consignment Tracking Fail';\nconst LOAD_CONSIGNMENT_TRACKING_SUCCESS = '[Order] Load Consignment Tracking Success';\nconst CLEAR_CONSIGNMENT_TRACKING = '[Order] Clear Consignment Tracking';\nclass LoadConsignmentTracking {\n    constructor(payload) {\n        this.payload = payload;\n        this.type = LOAD_CONSIGNMENT_TRACKING;\n    }\n}\nclass LoadConsignmentTrackingFail {\n    constructor(payload) {\n        this.payload = payload;\n        this.type = LOAD_CONSIGNMENT_TRACKING_FAIL;\n    }\n}\nclass LoadConsignmentTrackingSuccess {\n    constructor(payload) {\n        this.payload = payload;\n        this.type = LOAD_CONSIGNMENT_TRACKING_SUCCESS;\n    }\n}\nclass ClearConsignmentTracking {\n    constructor() {\n        this.type = CLEAR_CONSIGNMENT_TRACKING;\n    }\n}\n\nconst ORDER_FEATURE = 'order';\nconst CANCEL_ORDER_PROCESS_ID = 'cancelOrder';\nconst CANCEL_RETURN_PROCESS_ID = 'cancelReturn';\nconst CANCEL_REPLENISHMENT_ORDER_PROCESS_ID = 'cancelReplenishmentOrder';\nconst ORDERS = '[Order] User Orders';\nconst RETURN_REQUESTS = '[Order] Order Return Requests';\nconst RETURN_REQUEST_DETAILS = '[Order] Return Request Details';\nconst ORDER_DETAILS = '[Order] User Order Details';\nconst REPLENISHMENT_ORDERS = '[Order] User Replenishment Orders';\nconst REPLENISHMENT_ORDER_DETAILS = '[Order] User Replenishment Order Details';\n\nconst LOAD_ORDER_DETAILS = '[Order] Load Order Details';\nconst LOAD_ORDER_DETAILS_FAIL = '[Order] Load Order Details Fail';\nconst LOAD_ORDER_DETAILS_SUCCESS = '[Order] Load Order Details Success';\nconst CLEAR_ORDER_DETAILS = '[Order] Clear Order Details';\nconst CANCEL_ORDER = '[Order] Cancel Order';\nconst CANCEL_ORDER_FAIL = '[Order] Cancel Order Fail';\nconst CANCEL_ORDER_SUCCESS = '[Order] Cancel Order Success';\nconst RESET_CANCEL_ORDER_PROCESS = '[Order] Reset Cancel Order Process';\nclass LoadOrderDetails extends StateUtils.LoaderLoadAction {\n    constructor(payload) {\n        super(ORDER_DETAILS);\n        this.payload = payload;\n        this.type = LOAD_ORDER_DETAILS;\n    }\n}\nclass LoadOrderDetailsFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(ORDER_DETAILS, payload);\n        this.payload = payload;\n        this.type = LOAD_ORDER_DETAILS_FAIL;\n    }\n}\nclass LoadOrderDetailsSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(ORDER_DETAILS);\n        this.payload = payload;\n        this.type = LOAD_ORDER_DETAILS_SUCCESS;\n    }\n}\nclass ClearOrderDetails extends StateUtils.LoaderResetAction {\n    constructor() {\n        super(ORDER_DETAILS);\n        this.type = CLEAR_ORDER_DETAILS;\n    }\n}\nclass CancelOrder extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID);\n        this.payload = payload;\n        this.type = CANCEL_ORDER;\n    }\n}\nclass CancelOrderFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID, payload);\n        this.payload = payload;\n        this.type = CANCEL_ORDER_FAIL;\n    }\n}\nclass CancelOrderSuccess extends StateUtils.EntitySuccessAction {\n    constructor() {\n        super(PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID);\n        this.type = CANCEL_ORDER_SUCCESS;\n    }\n}\nclass ResetCancelOrderProcess extends StateUtils.EntityLoaderResetAction {\n    constructor() {\n        super(PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID);\n        this.type = RESET_CANCEL_ORDER_PROCESS;\n    }\n}\n\nconst CREATE_ORDER_RETURN_REQUEST = '[Order] Create Order Return Request';\nconst CREATE_ORDER_RETURN_REQUEST_FAIL = '[Order] Create Order Return Request Fail';\nconst CREATE_ORDER_RETURN_REQUEST_SUCCESS = '[Order] Create Order Return Request Success';\nconst LOAD_ORDER_RETURN_REQUEST = '[Order] Load Order Return Request details';\nconst LOAD_ORDER_RETURN_REQUEST_FAIL = '[Order] Load Order Return Request details Fail';\nconst LOAD_ORDER_RETURN_REQUEST_SUCCESS = '[Order] Load Order Return Request details Success';\nconst CANCEL_ORDER_RETURN_REQUEST = '[Order] Cancel Order Return Request';\nconst CANCEL_ORDER_RETURN_REQUEST_FAIL = '[Order] Cancel Order Return Request Fail';\nconst CANCEL_ORDER_RETURN_REQUEST_SUCCESS = '[Order] Cancel Order Return Request Success';\nconst LOAD_ORDER_RETURN_REQUEST_LIST = '[Order] Load User Order Return Request List';\nconst LOAD_ORDER_RETURN_REQUEST_LIST_FAIL = '[Order] Load User Order Return Request List Fail';\nconst LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS = '[Order] Load User Order Return Request List Success';\nconst CLEAR_ORDER_RETURN_REQUEST = '[Order] Clear Order Return Request Details';\nconst CLEAR_ORDER_RETURN_REQUEST_LIST = '[Order] Clear Order Return Request List';\nconst RESET_CANCEL_RETURN_PROCESS = '[Order] Reset Cancel Return Request Process';\nclass CreateOrderReturnRequest extends StateUtils.LoaderLoadAction {\n    constructor(payload) {\n        super(RETURN_REQUEST_DETAILS);\n        this.payload = payload;\n        this.type = CREATE_ORDER_RETURN_REQUEST;\n    }\n}\nclass CreateOrderReturnRequestFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(RETURN_REQUEST_DETAILS, payload);\n        this.payload = payload;\n        this.type = CREATE_ORDER_RETURN_REQUEST_FAIL;\n    }\n}\nclass CreateOrderReturnRequestSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(RETURN_REQUEST_DETAILS);\n        this.payload = payload;\n        this.type = CREATE_ORDER_RETURN_REQUEST_SUCCESS;\n    }\n}\nclass LoadOrderReturnRequest extends StateUtils.LoaderLoadAction {\n    constructor(payload) {\n        super(RETURN_REQUEST_DETAILS);\n        this.payload = payload;\n        this.type = LOAD_ORDER_RETURN_REQUEST;\n    }\n}\nclass LoadOrderReturnRequestFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(RETURN_REQUEST_DETAILS, payload);\n        this.payload = payload;\n        this.type = LOAD_ORDER_RETURN_REQUEST_FAIL;\n    }\n}\nclass LoadOrderReturnRequestSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(RETURN_REQUEST_DETAILS);\n        this.payload = payload;\n        this.type = LOAD_ORDER_RETURN_REQUEST_SUCCESS;\n    }\n}\nclass CancelOrderReturnRequest extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID);\n        this.payload = payload;\n        this.type = CANCEL_ORDER_RETURN_REQUEST;\n    }\n}\nclass CancelOrderReturnRequestFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID, payload);\n        this.payload = payload;\n        this.type = CANCEL_ORDER_RETURN_REQUEST_FAIL;\n    }\n}\nclass CancelOrderReturnRequestSuccess extends StateUtils.EntitySuccessAction {\n    constructor() {\n        super(PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID);\n        this.type = CANCEL_ORDER_RETURN_REQUEST_SUCCESS;\n    }\n}\nclass LoadOrderReturnRequestList extends StateUtils.LoaderLoadAction {\n    constructor(payload) {\n        super(RETURN_REQUESTS);\n        this.payload = payload;\n        this.type = LOAD_ORDER_RETURN_REQUEST_LIST;\n    }\n}\nclass LoadOrderReturnRequestListFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(RETURN_REQUESTS, payload);\n        this.payload = payload;\n        this.type = LOAD_ORDER_RETURN_REQUEST_LIST_FAIL;\n    }\n}\nclass LoadOrderReturnRequestListSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(RETURN_REQUESTS);\n        this.payload = payload;\n        this.type = LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS;\n    }\n}\nclass ClearOrderReturnRequest extends StateUtils.LoaderResetAction {\n    constructor() {\n        super(RETURN_REQUEST_DETAILS);\n        this.type = CLEAR_ORDER_RETURN_REQUEST;\n    }\n}\nclass ClearOrderReturnRequestList extends StateUtils.LoaderResetAction {\n    constructor() {\n        super(RETURN_REQUESTS);\n        this.type = CLEAR_ORDER_RETURN_REQUEST_LIST;\n    }\n}\nclass ResetCancelReturnProcess extends StateUtils.EntityLoaderResetAction {\n    constructor() {\n        super(PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID);\n        this.type = RESET_CANCEL_RETURN_PROCESS;\n    }\n}\n\nconst LOAD_USER_ORDERS = '[Order] Load User Orders';\nconst LOAD_USER_ORDERS_FAIL = '[Order] Load User Orders Fail';\nconst LOAD_USER_ORDERS_SUCCESS = '[Order] Load User Orders Success';\nconst CLEAR_USER_ORDERS = '[Order] Clear User Orders';\nclass LoadUserOrders extends StateUtils.LoaderLoadAction {\n    constructor(payload) {\n        super(ORDERS);\n        this.payload = payload;\n        this.type = LOAD_USER_ORDERS;\n    }\n}\nclass LoadUserOrdersFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(ORDERS, payload);\n        this.payload = payload;\n        this.type = LOAD_USER_ORDERS_FAIL;\n    }\n}\nclass LoadUserOrdersSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(ORDERS);\n        this.payload = payload;\n        this.type = LOAD_USER_ORDERS_SUCCESS;\n    }\n}\nclass ClearUserOrders extends StateUtils.LoaderResetAction {\n    constructor() {\n        super(ORDERS);\n        this.type = CLEAR_USER_ORDERS;\n    }\n}\n\nconst LOAD_REPLENISHMENT_ORDER_DETAILS = '[Order] Load Replenishment Order Details';\nconst LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS = '[Order] Load Replenishment Order Details Success';\nconst LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL = '[Order] Load Replenishment Order Details Fail';\nconst ClEAR_REPLENISHMENT_ORDER_DETAILS = '[Order] Clear Replenishment Order Details';\nconst CANCEL_REPLENISHMENT_ORDER = '[Order] Cancel Replenishment Order';\nconst CANCEL_REPLENISHMENT_ORDER_SUCCESS = '[Order] Cancel Replenishment Order Success';\nconst CANCEL_REPLENISHMENT_ORDER_FAIL = '[Order] Cancel Replenishment Order Fail';\nconst CLEAR_CANCEL_REPLENISHMENT_ORDER = '[Order] Clear Cancel Replenishment Order';\nclass LoadReplenishmentOrderDetails extends StateUtils.LoaderLoadAction {\n    constructor(payload) {\n        super(REPLENISHMENT_ORDER_DETAILS);\n        this.payload = payload;\n        this.type = LOAD_REPLENISHMENT_ORDER_DETAILS;\n    }\n}\nclass LoadReplenishmentOrderDetailsSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(REPLENISHMENT_ORDER_DETAILS);\n        this.payload = payload;\n        this.type = LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS;\n    }\n}\nclass LoadReplenishmentOrderDetailsFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(REPLENISHMENT_ORDER_DETAILS, payload);\n        this.payload = payload;\n        this.type = LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL;\n    }\n}\nclass ClearReplenishmentOrderDetails extends StateUtils.LoaderResetAction {\n    constructor() {\n        super(REPLENISHMENT_ORDER_DETAILS);\n        this.type = ClEAR_REPLENISHMENT_ORDER_DETAILS;\n    }\n}\nclass CancelReplenishmentOrder extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);\n        this.payload = payload;\n        this.type = CANCEL_REPLENISHMENT_ORDER;\n    }\n}\nclass CancelReplenishmentOrderSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);\n        this.payload = payload;\n        this.type = CANCEL_REPLENISHMENT_ORDER_SUCCESS;\n    }\n}\nclass CancelReplenishmentOrderFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID, payload);\n        this.payload = payload;\n        this.type = CANCEL_REPLENISHMENT_ORDER_FAIL;\n    }\n}\nclass ClearCancelReplenishmentOrder extends StateUtils.EntityLoaderResetAction {\n    constructor() {\n        super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);\n        this.type = CLEAR_CANCEL_REPLENISHMENT_ORDER;\n    }\n}\n\nconst LOAD_USER_REPLENISHMENT_ORDERS = '[Order] Load User Replenishment Orders';\nconst LOAD_USER_REPLENISHMENT_ORDERS_FAIL = '[Order] Load User Replenishment Orders Fail';\nconst LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS = '[Order] Load User Replenishment Orders Success';\nconst CLEAR_USER_REPLENISHMENT_ORDERS = '[Order] Clear User Replenishment Orders';\nclass LoadUserReplenishmentOrders extends StateUtils.LoaderLoadAction {\n    constructor(payload) {\n        super(REPLENISHMENT_ORDERS);\n        this.payload = payload;\n        this.type = LOAD_USER_REPLENISHMENT_ORDERS;\n    }\n}\nclass LoadUserReplenishmentOrdersFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(REPLENISHMENT_ORDERS, payload);\n        this.payload = payload;\n        this.type = LOAD_USER_REPLENISHMENT_ORDERS_FAIL;\n    }\n}\nclass LoadUserReplenishmentOrdersSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(REPLENISHMENT_ORDERS);\n        this.payload = payload;\n        this.type = LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS;\n    }\n}\nclass ClearUserReplenishmentOrders extends StateUtils.LoaderResetAction {\n    constructor() {\n        super(REPLENISHMENT_ORDERS);\n        this.type = CLEAR_USER_REPLENISHMENT_ORDERS;\n    }\n}\n\nvar orderGroup_actions = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    LOAD_CONSIGNMENT_TRACKING: LOAD_CONSIGNMENT_TRACKING,\n    LOAD_CONSIGNMENT_TRACKING_FAIL: LOAD_CONSIGNMENT_TRACKING_FAIL,\n    LOAD_CONSIGNMENT_TRACKING_SUCCESS: LOAD_CONSIGNMENT_TRACKING_SUCCESS,\n    CLEAR_CONSIGNMENT_TRACKING: CLEAR_CONSIGNMENT_TRACKING,\n    LoadConsignmentTracking: LoadConsignmentTracking,\n    LoadConsignmentTrackingFail: LoadConsignmentTrackingFail,\n    LoadConsignmentTrackingSuccess: LoadConsignmentTrackingSuccess,\n    ClearConsignmentTracking: ClearConsignmentTracking,\n    LOAD_ORDER_DETAILS: LOAD_ORDER_DETAILS,\n    LOAD_ORDER_DETAILS_FAIL: LOAD_ORDER_DETAILS_FAIL,\n    LOAD_ORDER_DETAILS_SUCCESS: LOAD_ORDER_DETAILS_SUCCESS,\n    CLEAR_ORDER_DETAILS: CLEAR_ORDER_DETAILS,\n    CANCEL_ORDER: CANCEL_ORDER,\n    CANCEL_ORDER_FAIL: CANCEL_ORDER_FAIL,\n    CANCEL_ORDER_SUCCESS: CANCEL_ORDER_SUCCESS,\n    RESET_CANCEL_ORDER_PROCESS: RESET_CANCEL_ORDER_PROCESS,\n    LoadOrderDetails: LoadOrderDetails,\n    LoadOrderDetailsFail: LoadOrderDetailsFail,\n    LoadOrderDetailsSuccess: LoadOrderDetailsSuccess,\n    ClearOrderDetails: ClearOrderDetails,\n    CancelOrder: CancelOrder,\n    CancelOrderFail: CancelOrderFail,\n    CancelOrderSuccess: CancelOrderSuccess,\n    ResetCancelOrderProcess: ResetCancelOrderProcess,\n    CREATE_ORDER_RETURN_REQUEST: CREATE_ORDER_RETURN_REQUEST,\n    CREATE_ORDER_RETURN_REQUEST_FAIL: CREATE_ORDER_RETURN_REQUEST_FAIL,\n    CREATE_ORDER_RETURN_REQUEST_SUCCESS: CREATE_ORDER_RETURN_REQUEST_SUCCESS,\n    LOAD_ORDER_RETURN_REQUEST: LOAD_ORDER_RETURN_REQUEST,\n    LOAD_ORDER_RETURN_REQUEST_FAIL: LOAD_ORDER_RETURN_REQUEST_FAIL,\n    LOAD_ORDER_RETURN_REQUEST_SUCCESS: LOAD_ORDER_RETURN_REQUEST_SUCCESS,\n    CANCEL_ORDER_RETURN_REQUEST: CANCEL_ORDER_RETURN_REQUEST,\n    CANCEL_ORDER_RETURN_REQUEST_FAIL: CANCEL_ORDER_RETURN_REQUEST_FAIL,\n    CANCEL_ORDER_RETURN_REQUEST_SUCCESS: CANCEL_ORDER_RETURN_REQUEST_SUCCESS,\n    LOAD_ORDER_RETURN_REQUEST_LIST: LOAD_ORDER_RETURN_REQUEST_LIST,\n    LOAD_ORDER_RETURN_REQUEST_LIST_FAIL: LOAD_ORDER_RETURN_REQUEST_LIST_FAIL,\n    LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS: LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS,\n    CLEAR_ORDER_RETURN_REQUEST: CLEAR_ORDER_RETURN_REQUEST,\n    CLEAR_ORDER_RETURN_REQUEST_LIST: CLEAR_ORDER_RETURN_REQUEST_LIST,\n    RESET_CANCEL_RETURN_PROCESS: RESET_CANCEL_RETURN_PROCESS,\n    CreateOrderReturnRequest: CreateOrderReturnRequest,\n    CreateOrderReturnRequestFail: CreateOrderReturnRequestFail,\n    CreateOrderReturnRequestSuccess: CreateOrderReturnRequestSuccess,\n    LoadOrderReturnRequest: LoadOrderReturnRequest,\n    LoadOrderReturnRequestFail: LoadOrderReturnRequestFail,\n    LoadOrderReturnRequestSuccess: LoadOrderReturnRequestSuccess,\n    CancelOrderReturnRequest: CancelOrderReturnRequest,\n    CancelOrderReturnRequestFail: CancelOrderReturnRequestFail,\n    CancelOrderReturnRequestSuccess: CancelOrderReturnRequestSuccess,\n    LoadOrderReturnRequestList: LoadOrderReturnRequestList,\n    LoadOrderReturnRequestListFail: LoadOrderReturnRequestListFail,\n    LoadOrderReturnRequestListSuccess: LoadOrderReturnRequestListSuccess,\n    ClearOrderReturnRequest: ClearOrderReturnRequest,\n    ClearOrderReturnRequestList: ClearOrderReturnRequestList,\n    ResetCancelReturnProcess: ResetCancelReturnProcess,\n    LOAD_USER_ORDERS: LOAD_USER_ORDERS,\n    LOAD_USER_ORDERS_FAIL: LOAD_USER_ORDERS_FAIL,\n    LOAD_USER_ORDERS_SUCCESS: LOAD_USER_ORDERS_SUCCESS,\n    CLEAR_USER_ORDERS: CLEAR_USER_ORDERS,\n    LoadUserOrders: LoadUserOrders,\n    LoadUserOrdersFail: LoadUserOrdersFail,\n    LoadUserOrdersSuccess: LoadUserOrdersSuccess,\n    ClearUserOrders: ClearUserOrders,\n    LOAD_REPLENISHMENT_ORDER_DETAILS: LOAD_REPLENISHMENT_ORDER_DETAILS,\n    LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS: LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS,\n    LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL: LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL,\n    ClEAR_REPLENISHMENT_ORDER_DETAILS: ClEAR_REPLENISHMENT_ORDER_DETAILS,\n    CANCEL_REPLENISHMENT_ORDER: CANCEL_REPLENISHMENT_ORDER,\n    CANCEL_REPLENISHMENT_ORDER_SUCCESS: CANCEL_REPLENISHMENT_ORDER_SUCCESS,\n    CANCEL_REPLENISHMENT_ORDER_FAIL: CANCEL_REPLENISHMENT_ORDER_FAIL,\n    CLEAR_CANCEL_REPLENISHMENT_ORDER: CLEAR_CANCEL_REPLENISHMENT_ORDER,\n    LoadReplenishmentOrderDetails: LoadReplenishmentOrderDetails,\n    LoadReplenishmentOrderDetailsSuccess: LoadReplenishmentOrderDetailsSuccess,\n    LoadReplenishmentOrderDetailsFail: LoadReplenishmentOrderDetailsFail,\n    ClearReplenishmentOrderDetails: ClearReplenishmentOrderDetails,\n    CancelReplenishmentOrder: CancelReplenishmentOrder,\n    CancelReplenishmentOrderSuccess: CancelReplenishmentOrderSuccess,\n    CancelReplenishmentOrderFail: CancelReplenishmentOrderFail,\n    ClearCancelReplenishmentOrder: ClearCancelReplenishmentOrder,\n    LOAD_USER_REPLENISHMENT_ORDERS: LOAD_USER_REPLENISHMENT_ORDERS,\n    LOAD_USER_REPLENISHMENT_ORDERS_FAIL: LOAD_USER_REPLENISHMENT_ORDERS_FAIL,\n    LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS: LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS,\n    CLEAR_USER_REPLENISHMENT_ORDERS: CLEAR_USER_REPLENISHMENT_ORDERS,\n    LoadUserReplenishmentOrders: LoadUserReplenishmentOrders,\n    LoadUserReplenishmentOrdersFail: LoadUserReplenishmentOrdersFail,\n    LoadUserReplenishmentOrdersSuccess: LoadUserReplenishmentOrdersSuccess,\n    ClearUserReplenishmentOrders: ClearUserReplenishmentOrders\n});\n\nconst getOrderState = createFeatureSelector(ORDER_FEATURE);\n\nconst getConsignmentTrackingState = createSelector(getOrderState, (state) => state.consignmentTracking);\nconst getConsignmentTracking = createSelector(getConsignmentTrackingState, (state) => state.tracking);\n\nconst getOrderDetailState = createSelector(getOrderState, (state) => state.orderDetail);\nconst getOrderDetails = createSelector(getOrderDetailState, (state) => StateUtils.loaderValueSelector(state));\n\nconst getOrderReturnRequestState = createSelector(getOrderState, (state) => state.orderReturn);\nconst getOrderReturnRequest = createSelector(getOrderReturnRequestState, (state) => StateUtils.loaderValueSelector(state));\nconst getOrderReturnRequestLoading = createSelector(getOrderReturnRequestState, (state) => StateUtils.loaderLoadingSelector(state));\nconst getOrderReturnRequestSuccess = createSelector(getOrderReturnRequestState, (state) => StateUtils.loaderSuccessSelector(state) &&\n    !StateUtils.loaderLoadingSelector(state));\nconst getOrderReturnRequestListState = createSelector(getOrderState, (state) => state.orderReturnList);\nconst getOrderReturnRequestList = createSelector(getOrderReturnRequestListState, (state) => StateUtils.loaderValueSelector(state));\n\nconst getOrdersState = createSelector(getOrderState, (state) => state.orders);\nconst getOrdersLoaded = createSelector(getOrdersState, (state) => StateUtils.loaderSuccessSelector(state));\nconst getOrders = createSelector(getOrdersState, (state) => StateUtils.loaderValueSelector(state));\n\nconst getReplenishmentOrderState = createSelector(getOrderState, (state) => state.replenishmentOrder);\nconst getReplenishmentOrderDetailsValue = createSelector(getReplenishmentOrderState, (state) => StateUtils.loaderValueSelector(state));\nconst getReplenishmentOrderDetailsLoading = createSelector(getReplenishmentOrderState, (state) => StateUtils.loaderLoadingSelector(state));\nconst getReplenishmentOrderDetailsSuccess = createSelector(getReplenishmentOrderState, (state) => StateUtils.loaderSuccessSelector(state));\nconst getReplenishmentOrderDetailsError = createSelector(getReplenishmentOrderState, (state) => StateUtils.loaderErrorSelector(state));\n\nconst getReplenishmentOrdersState = createSelector(getOrderState, (state) => state.replenishmentOrders);\nconst getReplenishmentOrders = createSelector(getReplenishmentOrdersState, (state) => StateUtils.loaderValueSelector(state));\nconst getReplenishmentOrdersLoading = createSelector(getReplenishmentOrdersState, (state) => StateUtils.loaderLoadingSelector(state));\nconst getReplenishmentOrdersError = createSelector(getReplenishmentOrdersState, (state) => StateUtils.loaderErrorSelector(state));\nconst getReplenishmentOrdersSuccess = createSelector(getReplenishmentOrdersState, (state) => StateUtils.loaderSuccessSelector(state));\n\nvar orderGroup_selectors = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getConsignmentTrackingState: getConsignmentTrackingState,\n    getConsignmentTracking: getConsignmentTracking,\n    getOrderState: getOrderState,\n    getOrderDetailState: getOrderDetailState,\n    getOrderDetails: getOrderDetails,\n    getOrderReturnRequestState: getOrderReturnRequestState,\n    getOrderReturnRequest: getOrderReturnRequest,\n    getOrderReturnRequestLoading: getOrderReturnRequestLoading,\n    getOrderReturnRequestSuccess: getOrderReturnRequestSuccess,\n    getOrderReturnRequestListState: getOrderReturnRequestListState,\n    getOrderReturnRequestList: getOrderReturnRequestList,\n    getOrdersState: getOrdersState,\n    getOrdersLoaded: getOrdersLoaded,\n    getOrders: getOrders,\n    getReplenishmentOrderState: getReplenishmentOrderState,\n    getReplenishmentOrderDetailsValue: getReplenishmentOrderDetailsValue,\n    getReplenishmentOrderDetailsLoading: getReplenishmentOrderDetailsLoading,\n    getReplenishmentOrderDetailsSuccess: getReplenishmentOrderDetailsSuccess,\n    getReplenishmentOrderDetailsError: getReplenishmentOrderDetailsError,\n    getReplenishmentOrdersState: getReplenishmentOrdersState,\n    getReplenishmentOrders: getReplenishmentOrders,\n    getReplenishmentOrdersLoading: getReplenishmentOrdersLoading,\n    getReplenishmentOrdersError: getReplenishmentOrdersError,\n    getReplenishmentOrdersSuccess: getReplenishmentOrdersSuccess\n});\n\nclass OrderReturnRequestService {\n    constructor(store, processStateStore, userIdService) {\n        this.store = store;\n        this.processStateStore = processStateStore;\n        this.userIdService = userIdService;\n    }\n    /**\n     * Create order return request\n     * @param orderCode an order code\n     * @param returnRequestInput order return request entry input\n     */\n    createOrderReturnRequest(returnRequestInput) {\n        this.userIdService.takeUserId().subscribe((userId) => {\n            this.store.dispatch(new CreateOrderReturnRequest({\n                userId,\n                returnRequestInput,\n            }));\n        });\n    }\n    /**\n     * Return an order return request\n     */\n    getOrderReturnRequest() {\n        return this.store.pipe(select(getOrderReturnRequest));\n    }\n    /**\n     * Gets order return request list\n     */\n    getOrderReturnRequestList(pageSize) {\n        return this.store.pipe(select(getOrderReturnRequestListState), tap((returnListState) => {\n            const attemptedLoad = returnListState.loading ||\n                returnListState.success ||\n                returnListState.error;\n            if (!attemptedLoad) {\n                this.loadOrderReturnRequestList(pageSize);\n            }\n        }), map((returnListState) => returnListState.value));\n    }\n    /**\n     * Loads order return request detail\n     * @param returnRequestCode\n     */\n    loadOrderReturnRequestDetail(returnRequestCode) {\n        this.userIdService.takeUserId().subscribe((userId) => {\n            this.store.dispatch(new LoadOrderReturnRequest({\n                userId,\n                returnRequestCode,\n            }));\n        });\n    }\n    /**\n     * Loads order return request list\n     * @param pageSize page size\n     * @param currentPage current page\n     * @param sort sort\n     */\n    loadOrderReturnRequestList(pageSize, currentPage, sort) {\n        this.userIdService.takeUserId(true).subscribe((userId) => {\n            this.store.dispatch(new LoadOrderReturnRequestList({\n                userId,\n                pageSize,\n                currentPage,\n                sort,\n            }));\n        }, () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    /**\n     * Cleaning order return request list\n     */\n    clearOrderReturnRequestList() {\n        this.store.dispatch(new ClearOrderReturnRequestList());\n    }\n    /**\n     * Get the order return request loading flag\n     */\n    getReturnRequestLoading() {\n        return this.store.pipe(select(getOrderReturnRequestLoading));\n    }\n    /**\n     * Get the order return request success flag\n     */\n    getReturnRequestSuccess() {\n        return this.store.pipe(select(getOrderReturnRequestSuccess));\n    }\n    /**\n     * Cleaning order return request details\n     */\n    clearOrderReturnRequestDetail() {\n        this.store.dispatch(new ClearOrderReturnRequest());\n    }\n    /*\n     * Cancel order return request\n     */\n    cancelOrderReturnRequest(returnRequestCode, returnRequestModification) {\n        this.userIdService.takeUserId().subscribe((userId) => {\n            this.store.dispatch(new CancelOrderReturnRequest({\n                userId,\n                returnRequestCode,\n                returnRequestModification,\n            }));\n        });\n    }\n    /**\n     * Returns the cancel return request loading flag\n     */\n    getCancelReturnRequestLoading() {\n        return this.processStateStore.pipe(select(ProcessSelectors.getProcessLoadingFactory(CANCEL_RETURN_PROCESS_ID)));\n    }\n    /**\n     * Returns the cancel return request success flag\n     */\n    getCancelReturnRequestSuccess() {\n        return this.processStateStore.pipe(select(ProcessSelectors.getProcessSuccessFactory(CANCEL_RETURN_PROCESS_ID)));\n    }\n    /**\n     * Resets the cancel return request process flags\n     */\n    resetCancelReturnRequestProcessState() {\n        return this.store.dispatch(new ResetCancelReturnProcess());\n    }\n}\nOrderReturnRequestService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderReturnRequestService, deps: [{ token: i1.Store }, { token: i1.Store }, { token: i2.UserIdService }], target: i0.ɵɵFactoryTarget.Injectable });\nOrderReturnRequestService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderReturnRequestService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderReturnRequestService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.Store }, { type: i1.Store }, { type: i2.UserIdService }]; } });\n\nclass OrderService {\n    constructor(store, processStateStore, userIdService, routingService) {\n        this.store = store;\n        this.processStateStore = processStateStore;\n        this.userIdService = userIdService;\n        this.routingService = routingService;\n    }\n    /**\n     * Returns an order's detail\n     */\n    getOrderDetails() {\n        return this.store.pipe(select(getOrderDetails));\n    }\n    /**\n     * Retrieves order's details\n     *\n     * @param orderCode an order code\n     */\n    loadOrderDetails(orderCode) {\n        this.userIdService.takeUserId().subscribe((userId) => {\n            this.store.dispatch(new LoadOrderDetails({\n                userId,\n                orderCode,\n            }));\n        });\n    }\n    /**\n     * Clears order's details\n     */\n    clearOrderDetails() {\n        this.store.dispatch(new ClearOrderDetails());\n    }\n    /**\n     * Returns order history list\n     */\n    getOrderHistoryList(pageSize) {\n        return this.store.pipe(select(getOrdersState), tap((orderListState) => {\n            const attemptedLoad = orderListState.loading ||\n                orderListState.success ||\n                orderListState.error;\n            if (!attemptedLoad) {\n                this.loadOrderList(pageSize);\n            }\n        }), map((orderListState) => orderListState.value));\n    }\n    /**\n     * Returns a loaded flag for order history list\n     */\n    getOrderHistoryListLoaded() {\n        return this.store.pipe(select(getOrdersLoaded));\n    }\n    /**\n     * Retrieves an order list\n     * @param pageSize page size\n     * @param currentPage current page\n     * @param sort sort\n     */\n    loadOrderList(pageSize, currentPage, sort) {\n        this.userIdService.takeUserId(true).subscribe((userId) => {\n            let replenishmentOrderCode;\n            this.routingService\n                .getRouterState()\n                .pipe(take(1))\n                .subscribe((data) => {\n                var _a, _b;\n                replenishmentOrderCode =\n                    (_b = (_a = data === null || data === void 0 ? void 0 : data.state) === null || _a === void 0 ? void 0 : _a.params) === null || _b === void 0 ? void 0 : _b.replenishmentOrderCode;\n            })\n                .unsubscribe();\n            this.store.dispatch(new LoadUserOrders({\n                userId,\n                pageSize,\n                currentPage,\n                sort,\n                replenishmentOrderCode,\n            }));\n        }, () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    /**\n     * Cleaning order list\n     */\n    clearOrderList() {\n        this.store.dispatch(new ClearUserOrders());\n    }\n    /**\n     *  Returns a consignment tracking detail\n     */\n    getConsignmentTracking() {\n        return this.store.pipe(select(getConsignmentTracking));\n    }\n    /**\n     * Retrieves consignment tracking details\n     * @param orderCode an order code\n     * @param consignmentCode a consignment code\n     */\n    loadConsignmentTracking(orderCode, consignmentCode) {\n        this.userIdService.takeUserId().subscribe((userId) => {\n            this.store.dispatch(new LoadConsignmentTracking({\n                userId,\n                orderCode,\n                consignmentCode,\n            }));\n        });\n    }\n    /**\n     * Cleaning consignment tracking\n     */\n    clearConsignmentTracking() {\n        this.store.dispatch(new ClearConsignmentTracking());\n    }\n    /*\n     * Cancel an order\n     */\n    cancelOrder(orderCode, cancelRequestInput) {\n        this.userIdService.takeUserId().subscribe((userId) => {\n            this.store.dispatch(new CancelOrder({\n                userId,\n                orderCode,\n                cancelRequestInput,\n            }));\n        });\n    }\n    /**\n     * Returns the cancel order loading flag\n     */\n    getCancelOrderLoading() {\n        return this.processStateStore.pipe(select(ProcessSelectors.getProcessLoadingFactory(CANCEL_ORDER_PROCESS_ID)));\n    }\n    /**\n     * Returns the cancel order success flag\n     */\n    getCancelOrderSuccess() {\n        return this.processStateStore.pipe(select(ProcessSelectors.getProcessSuccessFactory(CANCEL_ORDER_PROCESS_ID)));\n    }\n    /**\n     * Resets the cancel order process flags\n     */\n    resetCancelOrderProcessState() {\n        return this.store.dispatch(new ResetCancelOrderProcess());\n    }\n}\nOrderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderService, deps: [{ token: i1.Store }, { token: i1.Store }, { token: i2.UserIdService }, { token: i2.RoutingService }], target: i0.ɵɵFactoryTarget.Injectable });\nOrderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.Store }, { type: i1.Store }, { type: i2.UserIdService }, { type: i2.RoutingService }]; } });\n\nclass ReplenishmentOrderService {\n    constructor(store, processStateStore, userIdService) {\n        this.store = store;\n        this.processStateStore = processStateStore;\n        this.userIdService = userIdService;\n    }\n    /**\n     * Returns replenishment order details for a given 'current' user\n     *\n     * @param replenishmentOrderCode a replenishment order code\n     */\n    loadReplenishmentOrderDetails(replenishmentOrderCode) {\n        this.userIdService.takeUserId(true).subscribe((userId) => {\n            this.store.dispatch(new LoadReplenishmentOrderDetails({\n                userId,\n                replenishmentOrderCode,\n            }));\n        }, () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    /**\n     * Returns a replenishment order details\n     */\n    getReplenishmentOrderDetails() {\n        return this.store.pipe(select(getReplenishmentOrderDetailsValue));\n    }\n    /**\n     * Returns a replenishment order details loading flag\n     */\n    getReplenishmentOrderDetailsLoading() {\n        return this.store.pipe(select(getReplenishmentOrderDetailsLoading));\n    }\n    /**\n     * Returns a replenishment order details success flag\n     */\n    getReplenishmentOrderDetailsSuccess() {\n        return this.store.pipe(select(getReplenishmentOrderDetailsSuccess));\n    }\n    /**\n     * Returns a replenishment order details error flag\n     */\n    getReplenishmentOrderDetailsError() {\n        return this.store.pipe(select(getReplenishmentOrderDetailsError));\n    }\n    /**\n     * Clears the replenishment orders details state\n     */\n    clearReplenishmentOrderDetails() {\n        this.store.dispatch(new ClearReplenishmentOrderDetails());\n    }\n    /**\n     * Cancels a specific replenishment order for a given 'current' user\n     *\n     * @param replenishmentOrderCode a replenishment order code\n     */\n    cancelReplenishmentOrder(replenishmentOrderCode) {\n        this.userIdService.takeUserId(true).subscribe((userId) => {\n            this.store.dispatch(new CancelReplenishmentOrder({\n                userId,\n                replenishmentOrderCode,\n            }));\n        }, () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    /**\n     * Returns the cancel replenishment order loading flag\n     */\n    getCancelReplenishmentOrderLoading() {\n        return this.processStateStore.pipe(select(ProcessSelectors.getProcessLoadingFactory(CANCEL_REPLENISHMENT_ORDER_PROCESS_ID)));\n    }\n    /**\n     * Returns the cancel replenishment order success flag\n     */\n    getCancelReplenishmentOrderSuccess() {\n        return this.processStateStore.pipe(select(ProcessSelectors.getProcessSuccessFactory(CANCEL_REPLENISHMENT_ORDER_PROCESS_ID)));\n    }\n    /**\n     * Returns the cancel replenishment order error flag\n     */\n    getCancelReplenishmentOrderError() {\n        return this.processStateStore.pipe(select(ProcessSelectors.getProcessErrorFactory(CANCEL_REPLENISHMENT_ORDER_PROCESS_ID)));\n    }\n    /**\n     * Clears the cancel replenishment order processing state\n     */\n    clearCancelReplenishmentOrderProcessState() {\n        this.store.dispatch(new ClearCancelReplenishmentOrder());\n    }\n    /**\n     * Returns replenishment order history list\n     */\n    getReplenishmentOrderHistoryList(pageSize) {\n        return this.store.pipe(select(getReplenishmentOrdersState), tap((replenishmentOrderListState) => {\n            const attemptedLoad = replenishmentOrderListState.loading ||\n                replenishmentOrderListState.success ||\n                replenishmentOrderListState.error;\n            if (!attemptedLoad) {\n                this.loadReplenishmentOrderList(pageSize);\n            }\n        }), map((replenishmentOrderListState) => replenishmentOrderListState.value));\n    }\n    /**\n     * Returns a loading flag for replenishment order history list\n     */\n    getReplenishmentOrderHistoryListLoading() {\n        return this.store.pipe(select(getReplenishmentOrdersLoading));\n    }\n    /**\n     * Returns a error flag for replenishment order history list\n     */\n    getReplenishmentOrderHistoryListError() {\n        return this.store.pipe(select(getReplenishmentOrdersError));\n    }\n    /**\n     * Returns a success flag for replenishment order history list\n     */\n    getReplenishmentOrderHistoryListSuccess() {\n        return this.store.pipe(select(getReplenishmentOrdersSuccess));\n    }\n    /**\n     * Retrieves a replenishment order list\n     * @param pageSize page size\n     * @param currentPage current page\n     * @param sort sort\n     */\n    loadReplenishmentOrderList(pageSize, currentPage, sort) {\n        this.userIdService.takeUserId(true).subscribe((userId) => {\n            this.store.dispatch(new LoadUserReplenishmentOrders({\n                userId,\n                pageSize,\n                currentPage,\n                sort,\n            }));\n        }, () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    /**\n     * Cleaning replenishment order list\n     */\n    clearReplenishmentOrderList() {\n        this.store.dispatch(new ClearUserReplenishmentOrders());\n    }\n}\nReplenishmentOrderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReplenishmentOrderService, deps: [{ token: i1.Store }, { token: i1.Store }, { token: i2.UserIdService }], target: i0.ɵɵFactoryTarget.Injectable });\nReplenishmentOrderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReplenishmentOrderService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReplenishmentOrderService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.Store }, { type: i1.Store }, { type: i2.UserIdService }]; } });\n\nconst facadeProviders = [\n    OrderReturnRequestService,\n    {\n        provide: OrderReturnRequestFacade,\n        useExisting: OrderReturnRequestService,\n    },\n    OrderService,\n    {\n        provide: OrderFacade,\n        useExisting: OrderService,\n    },\n    ReplenishmentOrderService,\n    {\n        provide: ReplenishmentOrderFacade,\n        useExisting: ReplenishmentOrderService,\n    },\n];\n\nclass ConsignmentTrackingEffects {\n    constructor(actions$, orderConnector) {\n        this.actions$ = actions$;\n        this.orderConnector = orderConnector;\n        this.loadConsignmentTracking$ = this.actions$.pipe(ofType(LOAD_CONSIGNMENT_TRACKING), map((action) => action.payload), switchMap((payload) => {\n            return this.orderConnector\n                .getConsignmentTracking(payload.orderCode, payload.consignmentCode, payload.userId)\n                .pipe(map((tracking) => new LoadConsignmentTrackingSuccess(tracking)), catchError((error) => of(new LoadConsignmentTrackingFail(normalizeHttpError(error)))));\n        }));\n    }\n}\nConsignmentTrackingEffects.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ConsignmentTrackingEffects, deps: [{ token: i1$1.Actions }, { token: OrderConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nConsignmentTrackingEffects.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ConsignmentTrackingEffects });\n__decorate([\n    Effect()\n], ConsignmentTrackingEffects.prototype, \"loadConsignmentTracking$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ConsignmentTrackingEffects, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: OrderConnector }]; }, propDecorators: { loadConsignmentTracking$: [] } });\n\nclass OrderDetailsEffect {\n    constructor(actions$, orderConnector, globalMessageService) {\n        this.actions$ = actions$;\n        this.orderConnector = orderConnector;\n        this.globalMessageService = globalMessageService;\n        this.loadOrderDetails$ = this.actions$.pipe(ofType(LOAD_ORDER_DETAILS), map((action) => action.payload), switchMap((payload) => {\n            return this.orderConnector.get(payload.userId, payload.orderCode).pipe(map((order) => {\n                return new LoadOrderDetailsSuccess(order);\n            }), catchError((error) => of(new LoadOrderDetailsFail(normalizeHttpError(error)))));\n        }));\n        this.cancelOrder$ = this.actions$.pipe(ofType(CANCEL_ORDER), map((action) => action.payload), switchMap((payload) => {\n            return this.orderConnector\n                .cancel(payload.userId, payload.orderCode, payload.cancelRequestInput)\n                .pipe(map(() => new CancelOrderSuccess()), catchError((error) => {\n                var _a;\n                (_a = error.error) === null || _a === void 0 ? void 0 : _a.errors.forEach((err) => this.globalMessageService.add(err.message, GlobalMessageType.MSG_TYPE_ERROR));\n                return of(new CancelOrderFail(normalizeHttpError(error)));\n            }));\n        }));\n    }\n}\nOrderDetailsEffect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderDetailsEffect, deps: [{ token: i1$1.Actions }, { token: OrderConnector }, { token: i2.GlobalMessageService }], target: i0.ɵɵFactoryTarget.Injectable });\nOrderDetailsEffect.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderDetailsEffect });\n__decorate([\n    Effect()\n], OrderDetailsEffect.prototype, \"loadOrderDetails$\", void 0);\n__decorate([\n    Effect()\n], OrderDetailsEffect.prototype, \"cancelOrder$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderDetailsEffect, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: OrderConnector }, { type: i2.GlobalMessageService }]; }, propDecorators: { loadOrderDetails$: [], cancelOrder$: [] } });\n\nclass OrderReturnRequestEffect {\n    constructor(actions$, orderConnector) {\n        this.actions$ = actions$;\n        this.orderConnector = orderConnector;\n        this.createReturnRequest$ = this.actions$.pipe(ofType(CREATE_ORDER_RETURN_REQUEST), map((action) => action.payload), switchMap((payload) => {\n            return this.orderConnector\n                .return(payload.userId, payload.returnRequestInput)\n                .pipe(map((returnRequest) => new CreateOrderReturnRequestSuccess(returnRequest)), catchError((error) => of(new CreateOrderReturnRequestFail(normalizeHttpError(error)))));\n        }));\n        this.loadReturnRequest$ = this.actions$.pipe(ofType(LOAD_ORDER_RETURN_REQUEST), map((action) => action.payload), switchMap((payload) => {\n            return this.orderConnector\n                .getReturnRequestDetail(payload.userId, payload.returnRequestCode)\n                .pipe(map((returnRequest) => new LoadOrderReturnRequestSuccess(returnRequest)), catchError((error) => of(new LoadOrderReturnRequestFail(normalizeHttpError(error)))));\n        }));\n        this.cancelReturnRequest$ = this.actions$.pipe(ofType(CANCEL_ORDER_RETURN_REQUEST), map((action) => action.payload), switchMap((payload) => {\n            return this.orderConnector\n                .cancelReturnRequest(payload.userId, payload.returnRequestCode, payload.returnRequestModification)\n                .pipe(map(() => new CancelOrderReturnRequestSuccess()), catchError((error) => of(new CancelOrderReturnRequestFail(normalizeHttpError(error)))));\n        }));\n        this.loadReturnRequestList$ = this.actions$.pipe(ofType(LOAD_ORDER_RETURN_REQUEST_LIST), map((action) => action.payload), switchMap((payload) => {\n            return this.orderConnector\n                .getReturnRequestList(payload.userId, payload.pageSize, payload.currentPage, payload.sort)\n                .pipe(map((returnRequestList) => new LoadOrderReturnRequestListSuccess(returnRequestList)), catchError((error) => of(new LoadOrderReturnRequestListFail(normalizeHttpError(error)))));\n        }));\n    }\n}\nOrderReturnRequestEffect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderReturnRequestEffect, deps: [{ token: i1$1.Actions }, { token: OrderConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nOrderReturnRequestEffect.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderReturnRequestEffect });\n__decorate([\n    Effect()\n], OrderReturnRequestEffect.prototype, \"createReturnRequest$\", void 0);\n__decorate([\n    Effect()\n], OrderReturnRequestEffect.prototype, \"loadReturnRequest$\", void 0);\n__decorate([\n    Effect()\n], OrderReturnRequestEffect.prototype, \"cancelReturnRequest$\", void 0);\n__decorate([\n    Effect()\n], OrderReturnRequestEffect.prototype, \"loadReturnRequestList$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderReturnRequestEffect, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: OrderConnector }]; }, propDecorators: { createReturnRequest$: [], loadReturnRequest$: [], cancelReturnRequest$: [], loadReturnRequestList$: [] } });\n\nclass OrdersEffect {\n    constructor(actions$, orderConnector, replenishmentOrderConnector) {\n        this.actions$ = actions$;\n        this.orderConnector = orderConnector;\n        this.replenishmentOrderConnector = replenishmentOrderConnector;\n        this.loadUserOrders$ = this.actions$.pipe(ofType(LOAD_USER_ORDERS), map((action) => action.payload), switchMap((payload) => {\n            var _a;\n            return (Boolean(payload.replenishmentOrderCode)\n                ? this.replenishmentOrderConnector.loadReplenishmentDetailsHistory(payload.userId, (_a = payload.replenishmentOrderCode) !== null && _a !== void 0 ? _a : '', payload.pageSize, payload.currentPage, payload.sort)\n                : this.orderConnector.getHistory(payload.userId, payload.pageSize, payload.currentPage, payload.sort)).pipe(map((orders) => {\n                return new LoadUserOrdersSuccess(orders);\n            }), catchError((error) => of(new LoadUserOrdersFail(normalizeHttpError(error)))));\n        }));\n        this.resetUserOrders$ = this.actions$.pipe(ofType(SiteContextActions.LANGUAGE_CHANGE), map(() => {\n            return new ClearUserOrders();\n        }));\n    }\n}\nOrdersEffect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrdersEffect, deps: [{ token: i1$1.Actions }, { token: OrderConnector }, { token: ReplenishmentOrderConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nOrdersEffect.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrdersEffect });\n__decorate([\n    Effect()\n], OrdersEffect.prototype, \"loadUserOrders$\", void 0);\n__decorate([\n    Effect()\n], OrdersEffect.prototype, \"resetUserOrders$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrdersEffect, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: OrderConnector }, { type: ReplenishmentOrderConnector }]; }, propDecorators: { loadUserOrders$: [], resetUserOrders$: [] } });\n\nclass ReplenishmentOrderDetailsEffect {\n    constructor(actions$, replenishmentOrderConnector, globalMessageService) {\n        this.actions$ = actions$;\n        this.replenishmentOrderConnector = replenishmentOrderConnector;\n        this.globalMessageService = globalMessageService;\n        this.loadReplenishmentOrderDetails$ = this.actions$.pipe(ofType(LOAD_REPLENISHMENT_ORDER_DETAILS), map((action) => action.payload), switchMap((payload) => {\n            return this.replenishmentOrderConnector\n                .load(payload.userId, payload.replenishmentOrderCode)\n                .pipe(map((replenishmentOrder) => {\n                return new LoadReplenishmentOrderDetailsSuccess(replenishmentOrder);\n            }), catchError((error) => of(new LoadReplenishmentOrderDetailsFail(normalizeHttpError(error)))));\n        }));\n        this.cancelReplenishmentOrder$ = this.actions$.pipe(ofType(CANCEL_REPLENISHMENT_ORDER), map((action) => action.payload), switchMap((payload) => {\n            return this.replenishmentOrderConnector\n                .cancelReplenishmentOrder(payload.userId, payload.replenishmentOrderCode)\n                .pipe(map((replenishmentOrder) => new CancelReplenishmentOrderSuccess(replenishmentOrder)), catchError((error) => {\n                var _a;\n                (_a = error === null || error === void 0 ? void 0 : error.error) === null || _a === void 0 ? void 0 : _a.errors.forEach((err) => this.globalMessageService.add(err.message, GlobalMessageType.MSG_TYPE_ERROR));\n                return of(new CancelReplenishmentOrderFail(normalizeHttpError(error)));\n            }));\n        }));\n    }\n}\nReplenishmentOrderDetailsEffect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReplenishmentOrderDetailsEffect, deps: [{ token: i1$1.Actions }, { token: ReplenishmentOrderConnector }, { token: i2.GlobalMessageService }], target: i0.ɵɵFactoryTarget.Injectable });\nReplenishmentOrderDetailsEffect.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReplenishmentOrderDetailsEffect });\n__decorate([\n    Effect()\n], ReplenishmentOrderDetailsEffect.prototype, \"loadReplenishmentOrderDetails$\", void 0);\n__decorate([\n    Effect()\n], ReplenishmentOrderDetailsEffect.prototype, \"cancelReplenishmentOrder$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReplenishmentOrderDetailsEffect, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: ReplenishmentOrderConnector }, { type: i2.GlobalMessageService }]; }, propDecorators: { loadReplenishmentOrderDetails$: [], cancelReplenishmentOrder$: [] } });\n\nclass ReplenishmentOrdersEffect {\n    constructor(actions$, replenishmentOrderConnector) {\n        this.actions$ = actions$;\n        this.replenishmentOrderConnector = replenishmentOrderConnector;\n        this.loadUserReplenishmentOrders$ = this.actions$.pipe(ofType(LOAD_USER_REPLENISHMENT_ORDERS), map((action) => action.payload), switchMap((payload) => {\n            return this.replenishmentOrderConnector\n                .loadHistory(payload.userId, payload.pageSize, payload.currentPage, payload.sort)\n                .pipe(map((orders) => {\n                return new LoadUserReplenishmentOrdersSuccess(orders);\n            }), catchError((error) => of(new LoadUserReplenishmentOrdersFail(normalizeHttpError(error)))));\n        }));\n    }\n}\nReplenishmentOrdersEffect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReplenishmentOrdersEffect, deps: [{ token: i1$1.Actions }, { token: ReplenishmentOrderConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nReplenishmentOrdersEffect.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReplenishmentOrdersEffect });\n__decorate([\n    Effect()\n], ReplenishmentOrdersEffect.prototype, \"loadUserReplenishmentOrders$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReplenishmentOrdersEffect, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: ReplenishmentOrderConnector }]; }, propDecorators: { loadUserReplenishmentOrders$: [] } });\n\nconst effects = [\n    OrdersEffect,\n    OrderDetailsEffect,\n    ConsignmentTrackingEffects,\n    OrderReturnRequestEffect,\n    ReplenishmentOrderDetailsEffect,\n    ReplenishmentOrdersEffect,\n];\n\nconst initialState$5 = { tracking: {} };\nfunction reducer$5(state = initialState$5, action) {\n    switch (action.type) {\n        case LOAD_CONSIGNMENT_TRACKING_SUCCESS: {\n            const tracking = action.payload;\n            return {\n                tracking,\n            };\n        }\n        case CLEAR_CONSIGNMENT_TRACKING: {\n            return initialState$5;\n        }\n    }\n    return state;\n}\n\nconst initialState$4 = {};\nfunction reducer$4(state = initialState$4, action) {\n    switch (action.type) {\n        case LOAD_ORDER_DETAILS_SUCCESS: {\n            const order = action.payload;\n            return order;\n        }\n    }\n    return state;\n}\n\nconst initialState$3 = {\n    returnRequests: [],\n    pagination: {},\n    sorts: [],\n};\nfunction reducer$3(state = initialState$3, action) {\n    switch (action.type) {\n        case LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS: {\n            return action.payload ? action.payload : initialState$3;\n        }\n    }\n    return state;\n}\n\nconst initialState$2 = {\n    orders: [],\n    pagination: {},\n    sorts: [],\n};\nfunction reducer$2(state = initialState$2, action) {\n    switch (action.type) {\n        case LOAD_USER_ORDERS_SUCCESS: {\n            return action.payload ? action.payload : initialState$2;\n        }\n        case LOAD_USER_ORDERS_FAIL: {\n            return initialState$2;\n        }\n    }\n    return state;\n}\n\nconst initialState$1 = {};\nfunction reducer$1(state = initialState$1, action) {\n    switch (action.type) {\n        case LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS:\n        case CANCEL_REPLENISHMENT_ORDER_SUCCESS: {\n            return action.payload ? action.payload : initialState$1;\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nconst initialState = {\n    replenishmentOrders: [],\n    pagination: {},\n    sorts: [],\n};\nfunction reducer(state = initialState, action) {\n    var _a;\n    switch (action.type) {\n        case LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS: {\n            return action.payload ? action.payload : initialState;\n        }\n        case CANCEL_REPLENISHMENT_ORDER_SUCCESS: {\n            const cancelledReplenishmentOrder = action.payload;\n            const userReplenishmentOrders = [...((_a = state.replenishmentOrders) !== null && _a !== void 0 ? _a : [])];\n            const index = userReplenishmentOrders.findIndex((replenishmentOrder) => replenishmentOrder.replenishmentOrderCode ===\n                cancelledReplenishmentOrder.replenishmentOrderCode);\n            if (index === -1) {\n                return initialState;\n            }\n            else {\n                userReplenishmentOrders[index] = Object.assign({}, cancelledReplenishmentOrder);\n            }\n            return Object.assign(Object.assign({}, state), { replenishmentOrders: userReplenishmentOrders });\n        }\n    }\n    return state;\n}\n\nfunction getReducers() {\n    return {\n        orders: StateUtils.loaderReducer(ORDERS, reducer$2),\n        orderDetail: StateUtils.loaderReducer(ORDER_DETAILS, reducer$4),\n        replenishmentOrders: StateUtils.loaderReducer(REPLENISHMENT_ORDERS, reducer),\n        orderReturn: StateUtils.loaderReducer(RETURN_REQUEST_DETAILS),\n        orderReturnList: StateUtils.loaderReducer(RETURN_REQUESTS, reducer$3),\n        consignmentTracking: reducer$5,\n        replenishmentOrder: StateUtils.loaderReducer(REPLENISHMENT_ORDER_DETAILS, reducer$1),\n    };\n}\nconst reducerToken = new InjectionToken('OrderReducers');\nconst reducerProvider = {\n    provide: reducerToken,\n    useFactory: getReducers,\n};\n\nclass OrderStoreModule {\n}\nOrderStoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderStoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOrderStoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderStoreModule, imports: [i1$1.EffectsFeatureModule, i1.StoreFeatureModule] });\nOrderStoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderStoreModule, providers: [reducerProvider], imports: [[\n            EffectsModule.forFeature(effects),\n            StoreModule.forFeature(ORDER_FEATURE, reducerToken),\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderStoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        EffectsModule.forFeature(effects),\n                        StoreModule.forFeature(ORDER_FEATURE, reducerToken),\n                    ],\n                    providers: [reducerProvider],\n                }]\n        }] });\n\nclass OrderCoreModule {\n}\nOrderCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOrderCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderCoreModule, imports: [OrderStoreModule] });\nOrderCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderCoreModule, providers: [OrderConnector, ReplenishmentOrderConnector, ...facadeProviders], imports: [[OrderStoreModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrderCoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OrderStoreModule],\n                    providers: [OrderConnector, ReplenishmentOrderConnector, ...facadeProviders],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CANCEL_ORDER_PROCESS_ID, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID, CANCEL_RETURN_PROCESS_ID, CONSIGNMENT_TRACKING_NORMALIZER, ORDERS, ORDER_DETAILS, ORDER_FEATURE, ORDER_HISTORY_NORMALIZER, ORDER_RETURNS_NORMALIZER, ORDER_RETURN_REQUEST_INPUT_SERIALIZER, ORDER_RETURN_REQUEST_NORMALIZER, orderGroup_actions as OrderActions, OrderAdapter, OrderConnector, OrderCoreModule, OrderReturnRequestService, orderGroup_selectors as OrderSelectors, OrderService, REPLENISHMENT_ORDERS, REPLENISHMENT_ORDER_DETAILS, REPLENISHMENT_ORDER_HISTORY_NORMALIZER, RETURN_REQUESTS, RETURN_REQUEST_DETAILS, ReplenishmentOrderAdapter, ReplenishmentOrderConnector, ReplenishmentOrderService };\n//# sourceMappingURL=spartacus-order-core.js.map\n"]},"metadata":{},"sourceType":"module"}